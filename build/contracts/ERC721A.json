{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721.sol",
    "1": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721Receiver.sol",
    "10": "contracts/standards/ERC721A.sol",
    "3": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "4": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
    "5": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "6": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Strings.sol",
    "7": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/ERC165.sol",
    "8": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/standards/ERC721A.sol",
    "exportedSymbols": {
      "Address": [
        1851
      ],
      "ApprovalCallerNotOwnerNorApproved": [
        60
      ],
      "ApprovalQueryForNonexistentToken": [
        62
      ],
      "ApprovalToCurrentOwner": [
        66
      ],
      "ApproveToCaller": [
        64
      ],
      "AuxQueryForZeroAddress": [
        74
      ],
      "BalanceQueryForZeroAddress": [
        68
      ],
      "BurnedQueryForZeroAddress": [
        72
      ],
      "Context": [
        1872
      ],
      "ERC165": [
        2099
      ],
      "ERC721A": [
        1363
      ],
      "IERC165": [
        2111
      ],
      "IERC721": [
        1479
      ],
      "IERC721Enumerable": [
        1528
      ],
      "IERC721Metadata": [
        1555
      ],
      "IERC721Receiver": [
        1497
      ],
      "MintToZeroAddress": [
        76
      ],
      "MintZeroQuantity": [
        78
      ],
      "MintedQueryForZeroAddress": [
        70
      ],
      "OwnerIndexOutOfBounds": [
        80
      ],
      "OwnerQueryForNonexistentToken": [
        82
      ],
      "Strings": [
        2075
      ],
      "TokenIndexOutOfBounds": [
        84
      ],
      "TransferCallerNotOwnerNorApproved": [
        86
      ],
      "TransferFromIncorrectOwner": [
        88
      ],
      "TransferToNonERC721ReceiverImplementer": [
        90
      ],
      "TransferToZeroAddress": [
        92
      ],
      "URIQueryForNonexistentToken": [
        94
      ]
    },
    "id": 1364,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 50,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:23:10"
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 51,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1364,
        "sourceUnit": 1480,
        "src": "81:58:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 52,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1364,
        "sourceUnit": 1498,
        "src": "140:66:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "id": 53,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1364,
        "sourceUnit": 1556,
        "src": "207:77:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "id": 54,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1364,
        "sourceUnit": 1529,
        "src": "285:79:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 55,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1364,
        "sourceUnit": 1852,
        "src": "365:51:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 56,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1364,
        "sourceUnit": 1873,
        "src": "417:51:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 57,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1364,
        "sourceUnit": 2076,
        "src": "469:51:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 58,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1364,
        "sourceUnit": 2100,
        "src": "521:64:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "errorSelector": "cfb3b942",
        "id": 60,
        "name": "ApprovalCallerNotOwnerNorApproved",
        "nameLocation": "593:33:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 59,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "626:2:10"
        },
        "src": "587:42:10"
      },
      {
        "errorSelector": "cf4700e4",
        "id": 62,
        "name": "ApprovalQueryForNonexistentToken",
        "nameLocation": "636:32:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 61,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "668:2:10"
        },
        "src": "630:41:10"
      },
      {
        "errorSelector": "b06307db",
        "id": 64,
        "name": "ApproveToCaller",
        "nameLocation": "678:15:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 63,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "693:2:10"
        },
        "src": "672:24:10"
      },
      {
        "errorSelector": "943f7b8c",
        "id": 66,
        "name": "ApprovalToCurrentOwner",
        "nameLocation": "703:22:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 65,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "725:2:10"
        },
        "src": "697:31:10"
      },
      {
        "errorSelector": "8f4eb604",
        "id": 68,
        "name": "BalanceQueryForZeroAddress",
        "nameLocation": "735:26:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 67,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "761:2:10"
        },
        "src": "729:35:10"
      },
      {
        "errorSelector": "35ebb319",
        "id": 70,
        "name": "MintedQueryForZeroAddress",
        "nameLocation": "771:25:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 69,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "796:2:10"
        },
        "src": "765:34:10"
      },
      {
        "errorSelector": "21af468d",
        "id": 72,
        "name": "BurnedQueryForZeroAddress",
        "nameLocation": "806:25:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 71,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "831:2:10"
        },
        "src": "800:34:10"
      },
      {
        "errorSelector": "ac3727ba",
        "id": 74,
        "name": "AuxQueryForZeroAddress",
        "nameLocation": "841:22:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 73,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "863:2:10"
        },
        "src": "835:31:10"
      },
      {
        "errorSelector": "2e076300",
        "id": 76,
        "name": "MintToZeroAddress",
        "nameLocation": "873:17:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 75,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "890:2:10"
        },
        "src": "867:26:10"
      },
      {
        "errorSelector": "b562e8dd",
        "id": 78,
        "name": "MintZeroQuantity",
        "nameLocation": "900:16:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 77,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "916:2:10"
        },
        "src": "894:25:10"
      },
      {
        "errorSelector": "0ddac30e",
        "id": 80,
        "name": "OwnerIndexOutOfBounds",
        "nameLocation": "926:21:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 79,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "947:2:10"
        },
        "src": "920:30:10"
      },
      {
        "errorSelector": "df2d9b42",
        "id": 82,
        "name": "OwnerQueryForNonexistentToken",
        "nameLocation": "957:29:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 81,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "986:2:10"
        },
        "src": "951:38:10"
      },
      {
        "errorSelector": "a723001c",
        "id": 84,
        "name": "TokenIndexOutOfBounds",
        "nameLocation": "996:21:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 83,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1017:2:10"
        },
        "src": "990:30:10"
      },
      {
        "errorSelector": "59c896be",
        "id": 86,
        "name": "TransferCallerNotOwnerNorApproved",
        "nameLocation": "1027:33:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 85,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1060:2:10"
        },
        "src": "1021:42:10"
      },
      {
        "errorSelector": "a1148100",
        "id": 88,
        "name": "TransferFromIncorrectOwner",
        "nameLocation": "1070:26:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 87,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1096:2:10"
        },
        "src": "1064:35:10"
      },
      {
        "errorSelector": "d1a57ed6",
        "id": 90,
        "name": "TransferToNonERC721ReceiverImplementer",
        "nameLocation": "1106:38:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 89,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1144:2:10"
        },
        "src": "1100:47:10"
      },
      {
        "errorSelector": "ea553b34",
        "id": 92,
        "name": "TransferToZeroAddress",
        "nameLocation": "1154:21:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 91,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1175:2:10"
        },
        "src": "1148:30:10"
      },
      {
        "errorSelector": "a14c4b50",
        "id": 94,
        "name": "URIQueryForNonexistentToken",
        "nameLocation": "1185:27:10",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 93,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1212:2:10"
        },
        "src": "1179:36:10"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 96,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1872,
              "src": "1728:7:10"
            },
            "id": 97,
            "nodeType": "InheritanceSpecifier",
            "src": "1728:7:10"
          },
          {
            "baseName": {
              "id": 98,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2099,
              "src": "1737:6:10"
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "1737:6:10"
          },
          {
            "baseName": {
              "id": 100,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1479,
              "src": "1745:7:10"
            },
            "id": 101,
            "nodeType": "InheritanceSpecifier",
            "src": "1745:7:10"
          },
          {
            "baseName": {
              "id": 102,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1555,
              "src": "1754:15:10"
            },
            "id": 103,
            "nodeType": "InheritanceSpecifier",
            "src": "1754:15:10"
          }
        ],
        "canonicalName": "ERC721A",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 95,
          "nodeType": "StructuredDocumentation",
          "src": "1217:490:10",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
        },
        "fullyImplemented": true,
        "id": 1363,
        "linearizedBaseContracts": [
          1363,
          1555,
          1479,
          2099,
          2111,
          1872
        ],
        "name": "ERC721A",
        "nameLocation": "1717:7:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 106,
            "libraryName": {
              "id": 104,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1851,
              "src": "1782:7:10"
            },
            "nodeType": "UsingForDirective",
            "src": "1776:26:10",
            "typeName": {
              "id": 105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1794:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 109,
            "libraryName": {
              "id": 107,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2075,
              "src": "1813:7:10"
            },
            "nodeType": "UsingForDirective",
            "src": "1807:26:10",
            "typeName": {
              "id": 108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1825:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "ERC721A.TokenOwnership",
            "id": 116,
            "members": [
              {
                "constant": false,
                "id": 111,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1974:4:10",
                "nodeType": "VariableDeclaration",
                "scope": 116,
                "src": "1966:12:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 110,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1966:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 113,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "2087:14:10",
                "nodeType": "VariableDeclaration",
                "scope": 116,
                "src": "2080:21:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 112,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2080:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 115,
                "mutability": "mutable",
                "name": "burned",
                "nameLocation": "2162:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 116,
                "src": "2157:11:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 114,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2157:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenOwnership",
            "nameLocation": "1904:14:10",
            "nodeType": "StructDefinition",
            "scope": 1363,
            "src": "1897:278:10",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC721A.AddressData",
            "id": 125,
            "members": [
              {
                "constant": false,
                "id": 118,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "2330:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2323:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 117,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2323:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 120,
                "mutability": "mutable",
                "name": "numberMinted",
                "nameLocation": "2429:12:10",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2422:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 119,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2422:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 122,
                "mutability": "mutable",
                "name": "numberBurned",
                "nameLocation": "2533:12:10",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2526:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 121,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2526:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 124,
                "mutability": "mutable",
                "name": "aux",
                "nameLocation": "2760:3:10",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "2753:10:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 123,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2753:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AddressData",
            "nameLocation": "2246:11:10",
            "nodeType": "StructDefinition",
            "scope": 1363,
            "src": "2239:531:10",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 127,
            "mutability": "mutable",
            "name": "_currentIndex",
            "nameLocation": "2844:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 1363,
            "src": "2827:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 126,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2827:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 129,
            "mutability": "mutable",
            "name": "_burnCounter",
            "nameLocation": "2917:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1363,
            "src": "2900:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 128,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2900:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 131,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "2969:5:10",
            "nodeType": "VariableDeclaration",
            "scope": 1363,
            "src": "2954:20:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 130,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2954:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 133,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "3016:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 1363,
            "src": "3001:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 132,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3001:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 138,
            "mutability": "mutable",
            "name": "_ownerships",
            "nameLocation": "3245:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 1363,
            "src": "3201:55:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "typeName": {
              "id": 137,
              "keyType": {
                "id": 134,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3209:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3201:34:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
              },
              "valueType": {
                "id": 136,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 135,
                  "name": "TokenOwnership",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "3220:14:10"
                },
                "referencedDeclaration": 116,
                "src": "3220:14:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenOwnership_$116_storage_ptr",
                  "typeString": "struct ERC721A.TokenOwnership"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 143,
            "mutability": "mutable",
            "name": "_addressData",
            "nameLocation": "3348:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1363,
            "src": "3308:52:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
              "typeString": "mapping(address => struct ERC721A.AddressData)"
            },
            "typeName": {
              "id": 142,
              "keyType": {
                "id": 139,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3316:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3308:31:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                "typeString": "mapping(address => struct ERC721A.AddressData)"
              },
              "valueType": {
                "id": 141,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 140,
                  "name": "AddressData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 125,
                  "src": "3327:11:10"
                },
                "referencedDeclaration": 125,
                "src": "3327:11:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressData_$125_storage_ptr",
                  "typeString": "struct ERC721A.AddressData"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 147,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "3452:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 1363,
            "src": "3416:51:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 146,
              "keyType": {
                "id": 144,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3424:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3416:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 145,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3435:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 153,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "3575:18:10",
            "nodeType": "VariableDeclaration",
            "scope": 1363,
            "src": "3522:71:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 152,
              "keyType": {
                "id": 148,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3530:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3522:44:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 151,
                "keyType": {
                  "id": 149,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3549:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3541:24:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 150,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3560:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "3656:98:10",
              "statements": [
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "3666:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 161,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "3674:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3666:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "3666:13:10"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3689:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 165,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "3699:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3689:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "3689:17:10"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "_currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "3716:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 169,
                        "name": "_startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "3732:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3732:15:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3716:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "3716:31:10"
                }
              ]
            },
            "id": 174,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "3626:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3612:19:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "3647:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "3633:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3633:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3611:44:10"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3656:0:10"
            },
            "scope": 1363,
            "src": "3600:154:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "3911:25:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3928:1:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 179,
                  "id": 181,
                  "nodeType": "Return",
                  "src": "3921:8:10"
                }
              ]
            },
            "documentation": {
              "id": 175,
              "nodeType": "StructuredDocumentation",
              "src": "3760:81:10",
              "text": " To change the starting tokenId, please override this function."
            },
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startTokenId",
            "nameLocation": "3855:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3868:2:10"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "3902:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3902:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3901:9:10"
            },
            "scope": 1363,
            "src": "3846:90:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "4167:244:10",
              "statements": [
                {
                  "id": 196,
                  "nodeType": "UncheckedBlock",
                  "src": "4317:88:10",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 189,
                            "name": "_currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "4348:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 190,
                            "name": "_burnCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "4364:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4348:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 192,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "4379:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4379:15:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4348:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 188,
                      "id": 195,
                      "nodeType": "Return",
                      "src": "4341:53:10"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 184,
              "nodeType": "StructuredDocumentation",
              "src": "3942:167:10",
              "text": " @dev See {IERC721Enumerable-totalSupply}.\n @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
            },
            "functionSelector": "18160ddd",
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "4123:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4134:2:10"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "4158:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4158:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4157:9:10"
            },
            "scope": 1363,
            "src": "4114:297:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "4555:221:10",
              "statements": [
                {
                  "id": 209,
                  "nodeType": "UncheckedBlock",
                  "src": "4697:73:10",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 204,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "4728:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 205,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "4744:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4744:15:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4728:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 203,
                      "id": 208,
                      "nodeType": "Return",
                      "src": "4721:38:10"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 199,
              "nodeType": "StructuredDocumentation",
              "src": "4417:77:10",
              "text": " Returns the total amount of tokens minted in the contract."
            },
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_totalMinted",
            "nameLocation": "4508:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4520:2:10"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4546:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4546:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4545:9:10"
            },
            "scope": 1363,
            "src": "4499:277:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2098,
              2110
            ],
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "4951:192:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 222,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "4980:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 224,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1479,
                                "src": "5000:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1479_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1479_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 223,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4995:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4995:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1479",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4995:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4980:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 228,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "5036:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 230,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1555,
                                "src": "5056:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1555_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1555_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 229,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "5051:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5051:21:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1555",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "5051:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "5036:48:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4980:104:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 237,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "5124:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 235,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "5100:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721A_$1363_$",
                            "typeString": "type(contract super ERC721A)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2098,
                        "src": "5100:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5100:36:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4980:156:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 221,
                  "id": 240,
                  "nodeType": "Return",
                  "src": "4961:175:10"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "4782:56:10",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "4852:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 218,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 216,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2099,
                  "src": "4919:6:10"
                },
                {
                  "id": 217,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2111,
                  "src": "4927:7:10"
                }
              ],
              "src": "4910:25:10"
            },
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4877:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "4870:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4869:20:10"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "4945:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4945:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4944:6:10"
            },
            "scope": 1363,
            "src": "4843:300:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1404
            ],
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "5275:130:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 251,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "5289:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5306:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5298:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5298:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5298:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5289:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 260,
                  "nodeType": "IfStatement",
                  "src": "5285:60:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 257,
                        "name": "BalanceQueryForZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "5317:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5317:28:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 259,
                    "nodeType": "RevertStatement",
                    "src": "5310:35:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 263,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "5370:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 265,
                          "indexExpression": {
                            "id": 264,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "5383:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5370:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$125_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 118,
                        "src": "5370:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5362:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 261,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5362:7:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5362:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 250,
                  "id": 268,
                  "nodeType": "Return",
                  "src": "5355:43:10"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "5149:48:10",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5211:9:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 247,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5248:8:10"
            },
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5229:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "5221:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5220:15:10"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "5266:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5266:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5265:9:10"
            },
            "scope": 1363,
            "src": "5202:203:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "5552:134:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 278,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "5566:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5583:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5575:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5575:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5575:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5566:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 287,
                  "nodeType": "IfStatement",
                  "src": "5562:59:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 284,
                        "name": "MintedQueryForZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "5594:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5594:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 286,
                    "nodeType": "RevertStatement",
                    "src": "5587:34:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 290,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "5646:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 292,
                          "indexExpression": {
                            "id": 291,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "5659:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5646:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$125_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 120,
                        "src": "5646:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5638:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5638:7:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5638:41:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 277,
                  "id": 295,
                  "nodeType": "Return",
                  "src": "5631:48:10"
                }
              ]
            },
            "documentation": {
              "id": 271,
              "nodeType": "StructuredDocumentation",
              "src": "5411:66:10",
              "text": " Returns the number of tokens minted by `owner`."
            },
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_numberMinted",
            "nameLocation": "5491:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5513:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "5505:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5504:15:10"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "5543:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5543:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5542:9:10"
            },
            "scope": 1363,
            "src": "5482:204:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "5849:134:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 305,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "5863:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5880:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5872:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5872:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5872:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5863:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 314,
                  "nodeType": "IfStatement",
                  "src": "5859:59:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 311,
                        "name": "BurnedQueryForZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "5891:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5891:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 313,
                    "nodeType": "RevertStatement",
                    "src": "5884:34:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 317,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "5943:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 319,
                          "indexExpression": {
                            "id": 318,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "5956:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5943:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$125_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberBurned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 122,
                        "src": "5943:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5935:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5935:7:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5935:41:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 304,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "5928:48:10"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "5692:82:10",
              "text": " Returns the number of tokens burned by or on behalf of `owner`."
            },
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_numberBurned",
            "nameLocation": "5788:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5810:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "5802:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5802:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5801:15:10"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "5840:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5840:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5839:9:10"
            },
            "scope": 1363,
            "src": "5779:204:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "6159:113:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 332,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "6173:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6190:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6182:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6182:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6182:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6173:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 341,
                  "nodeType": "IfStatement",
                  "src": "6169:56:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 338,
                        "name": "AuxQueryForZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "6201:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6201:24:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 340,
                    "nodeType": "RevertStatement",
                    "src": "6194:31:10"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 342,
                        "name": "_addressData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "6242:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                          "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                        }
                      },
                      "id": 344,
                      "indexExpression": {
                        "id": 343,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "6255:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6242:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressData_$125_storage",
                        "typeString": "struct ERC721A.AddressData storage ref"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "aux",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 124,
                    "src": "6242:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 331,
                  "id": 346,
                  "nodeType": "Return",
                  "src": "6235:30:10"
                }
              ]
            },
            "documentation": {
              "id": 325,
              "nodeType": "StructuredDocumentation",
              "src": "5989:102:10",
              "text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
            },
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getAux",
            "nameLocation": "6105:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6121:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "6113:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6113:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6112:15:10"
            },
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "6151:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6151:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6150:8:10"
            },
            "scope": 1363,
            "src": "6096:176:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "6507:112:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 356,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "6521:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6538:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6530:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6530:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6530:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6521:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 365,
                  "nodeType": "IfStatement",
                  "src": "6517:56:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 362,
                        "name": "AuxQueryForZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "6549:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6549:24:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 364,
                    "nodeType": "RevertStatement",
                    "src": "6542:31:10"
                  }
                },
                {
                  "expression": {
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 366,
                          "name": "_addressData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "6583:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                            "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                          }
                        },
                        "id": 368,
                        "indexExpression": {
                          "id": 367,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 351,
                          "src": "6596:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6583:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressData_$125_storage",
                          "typeString": "struct ERC721A.AddressData storage ref"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "aux",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 124,
                      "src": "6583:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 370,
                      "name": "aux",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "6609:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "6583:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "6583:29:10"
                }
              ]
            },
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "6278:171:10",
              "text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
            },
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAux",
            "nameLocation": "6463:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "6479:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "6471:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6471:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "aux",
                  "nameLocation": "6493:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "6486:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6486:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6470:27:10"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6507:0:10"
            },
            "scope": 1363,
            "src": "6454:165:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "6899:999:10",
              "statements": [
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "curr",
                      "nameLocation": "6917:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 447,
                      "src": "6909:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6909:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 386,
                  "initialValue": {
                    "id": 385,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 377,
                    "src": "6924:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6909:22:10"
                },
                {
                  "id": 443,
                  "nodeType": "UncheckedBlock",
                  "src": "6942:902:10",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 387,
                              "name": "_startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
                              "src": "6970:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6970:15:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 389,
                            "name": "curr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "6989:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6970:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 391,
                            "name": "curr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "6997:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 392,
                            "name": "_currentIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "7004:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6997:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6970:47:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 442,
                      "nodeType": "IfStatement",
                      "src": "6966:868:10",
                      "trueBody": {
                        "id": 441,
                        "nodeType": "Block",
                        "src": "7019:815:10",
                        "statements": [
                          {
                            "assignments": [
                              397
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 397,
                                "mutability": "mutable",
                                "name": "ownership",
                                "nameLocation": "7059:9:10",
                                "nodeType": "VariableDeclaration",
                                "scope": 441,
                                "src": "7037:31:10",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership"
                                },
                                "typeName": {
                                  "id": 396,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 395,
                                    "name": "TokenOwnership",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 116,
                                    "src": "7037:14:10"
                                  },
                                  "referencedDeclaration": 116,
                                  "src": "7037:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$116_storage_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 401,
                            "initialValue": {
                              "baseExpression": {
                                "id": 398,
                                "name": "_ownerships",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 138,
                                "src": "7071:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                }
                              },
                              "id": 400,
                              "indexExpression": {
                                "id": 399,
                                "name": "curr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 384,
                                "src": "7083:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7071:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                                "typeString": "struct ERC721A.TokenOwnership storage ref"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "7037:51:10"
                          },
                          {
                            "condition": {
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7110:17:10",
                              "subExpression": {
                                "expression": {
                                  "id": 402,
                                  "name": "ownership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "7111:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 403,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "burned",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 115,
                                "src": "7111:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 440,
                            "nodeType": "IfStatement",
                            "src": "7106:714:10",
                            "trueBody": {
                              "id": 439,
                              "nodeType": "Block",
                              "src": "7129:691:10",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 411,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 405,
                                        "name": "ownership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 397,
                                        "src": "7155:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 406,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 111,
                                      "src": "7155:14:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 409,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7181:1:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 408,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7173:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 407,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7173:7:10",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 410,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7173:10:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "7155:28:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 415,
                                  "nodeType": "IfStatement",
                                  "src": "7151:99:10",
                                  "trueBody": {
                                    "id": 414,
                                    "nodeType": "Block",
                                    "src": "7185:65:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 412,
                                          "name": "ownership",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 397,
                                          "src": "7218:9:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                            "typeString": "struct ERC721A.TokenOwnership memory"
                                          }
                                        },
                                        "functionReturnParameters": 382,
                                        "id": 413,
                                        "nodeType": "Return",
                                        "src": "7211:16:10"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "body": {
                                    "id": 437,
                                    "nodeType": "Block",
                                    "src": "7560:242:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 418,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "--",
                                          "prefix": false,
                                          "src": "7586:6:10",
                                          "subExpression": {
                                            "id": 417,
                                            "name": "curr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 384,
                                            "src": "7586:4:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 419,
                                        "nodeType": "ExpressionStatement",
                                        "src": "7586:6:10"
                                      },
                                      {
                                        "expression": {
                                          "id": 424,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 420,
                                            "name": "ownership",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 397,
                                            "src": "7618:9:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                              "typeString": "struct ERC721A.TokenOwnership memory"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "baseExpression": {
                                              "id": 421,
                                              "name": "_ownerships",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 138,
                                              "src": "7630:11:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                              }
                                            },
                                            "id": 423,
                                            "indexExpression": {
                                              "id": 422,
                                              "name": "curr",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 384,
                                              "src": "7642:4:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7630:17:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                                            }
                                          },
                                          "src": "7618:29:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                            "typeString": "struct ERC721A.TokenOwnership memory"
                                          }
                                        },
                                        "id": 425,
                                        "nodeType": "ExpressionStatement",
                                        "src": "7618:29:10"
                                      },
                                      {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 432,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 426,
                                              "name": "ownership",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 397,
                                              "src": "7677:9:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                                "typeString": "struct ERC721A.TokenOwnership memory"
                                              }
                                            },
                                            "id": 427,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "addr",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 111,
                                            "src": "7677:14:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
                                                "id": 430,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "7703:1:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "id": 429,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "7695:7:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 428,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "7695:7:10",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 431,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "7695:10:10",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "7677:28:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "id": 436,
                                        "nodeType": "IfStatement",
                                        "src": "7673:107:10",
                                        "trueBody": {
                                          "id": 435,
                                          "nodeType": "Block",
                                          "src": "7707:73:10",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 433,
                                                "name": "ownership",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 397,
                                                "src": "7744:9:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                                }
                                              },
                                              "functionReturnParameters": 382,
                                              "id": 434,
                                              "nodeType": "Return",
                                              "src": "7737:16:10"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "hexValue": "74727565",
                                    "id": 416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7554:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  "id": 438,
                                  "nodeType": "WhileStatement",
                                  "src": "7547:255:10"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 444,
                      "name": "OwnerQueryForNonexistentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "7860:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7860:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "RevertStatement",
                  "src": "7853:38:10"
                }
              ]
            },
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "6625:185:10",
              "text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
            },
            "id": 448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownershipOf",
            "nameLocation": "6824:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6844:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "6836:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6836:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6835:17:10"
            },
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "6876:21:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                    "typeString": "struct ERC721A.TokenOwnership"
                  },
                  "typeName": {
                    "id": 380,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 379,
                      "name": "TokenOwnership",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 116,
                      "src": "6876:14:10"
                    },
                    "referencedDeclaration": 116,
                    "src": "6876:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$116_storage_ptr",
                      "typeString": "struct ERC721A.TokenOwnership"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6875:23:10"
            },
            "scope": 1363,
            "src": "6815:1083:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1412
            ],
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "8028:49:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 458,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 451,
                          "src": "8057:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 457,
                        "name": "ownershipOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "8045:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$116_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8045:20:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership memory"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "addr",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 111,
                    "src": "8045:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 456,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "8038:32:10"
                }
              ]
            },
            "documentation": {
              "id": 449,
              "nodeType": "StructuredDocumentation",
              "src": "7904:46:10",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "7964:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 453,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8001:8:10"
            },
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7980:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "7972:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7972:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7971:17:10"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "8019:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8019:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8018:9:10"
            },
            "scope": 1363,
            "src": "7955:122:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1540
            ],
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "8208:29:10",
              "statements": [
                {
                  "expression": {
                    "id": 470,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 131,
                    "src": "8225:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 469,
                  "id": 471,
                  "nodeType": "Return",
                  "src": "8218:12:10"
                }
              ]
            },
            "documentation": {
              "id": 464,
              "nodeType": "StructuredDocumentation",
              "src": "8083:51:10",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "8148:4:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 466,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8175:8:10"
            },
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8152:2:10"
            },
            "returnParameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "8193:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8192:15:10"
            },
            "scope": 1363,
            "src": "8139:98:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1546
            ],
            "body": {
              "id": 482,
              "nodeType": "Block",
              "src": "8372:31:10",
              "statements": [
                {
                  "expression": {
                    "id": 480,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 133,
                    "src": "8389:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 479,
                  "id": 481,
                  "nodeType": "Return",
                  "src": "8382:14:10"
                }
              ]
            },
            "documentation": {
              "id": 474,
              "nodeType": "StructuredDocumentation",
              "src": "8243:53:10",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 483,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "8310:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 476,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8339:8:10"
            },
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8316:2:10"
            },
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "8357:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8357:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8356:15:10"
            },
            "scope": 1363,
            "src": "8301:102:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1554
            ],
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "8557:225:10",
              "statements": [
                {
                  "condition": {
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8571:17:10",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 493,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 486,
                          "src": "8580:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 492,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "8572:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8572:16:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 499,
                  "nodeType": "IfStatement",
                  "src": "8567:59:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 496,
                        "name": "URIQueryForNonexistentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "8597:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8597:29:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 498,
                    "nodeType": "RevertStatement",
                    "src": "8590:36:10"
                  }
                },
                {
                  "assignments": [
                    501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 501,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "8651:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 525,
                      "src": "8637:21:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 500,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8637:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 504,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 502,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 535,
                      "src": "8661:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8661:10:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8637:34:10"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 507,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "8694:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8688:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 505,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8688:5:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8688:14:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "8688:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8713:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8688:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8773:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8688:87:10",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 516,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "8741:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 517,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 486,
                                  "src": "8750:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1957,
                                "src": "8750:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8750:18:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 514,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8724:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8724:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8724:45:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8717:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8717:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8717:53:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 491,
                  "id": 524,
                  "nodeType": "Return",
                  "src": "8681:94:10"
                }
              ]
            },
            "documentation": {
              "id": 484,
              "nodeType": "StructuredDocumentation",
              "src": "8409:55:10",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8478:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 488,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8524:8:10"
            },
            "parameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8495:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "8487:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8487:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8486:17:10"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "8542:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8542:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8541:15:10"
            },
            "scope": 1363,
            "src": "8469:313:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "9089:26:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9106:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 531,
                  "id": 533,
                  "nodeType": "Return",
                  "src": "9099:9:10"
                }
              ]
            },
            "documentation": {
              "id": 527,
              "nodeType": "StructuredDocumentation",
              "src": "8788:230:10",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "9032:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9040:2:10"
            },
            "returnParameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "9074:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9074:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9073:15:10"
            },
            "scope": 1363,
            "src": "9023:92:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1440
            ],
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "9234:300:10",
              "statements": [
                {
                  "assignments": [
                    545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 545,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9252:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "9244:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 544,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9244:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 550,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 548,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "9276:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 546,
                        "name": "ERC721A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "9260:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721A_$1363_$",
                          "typeString": "type(contract ERC721A)"
                        }
                      },
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 463,
                      "src": "9260:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9260:24:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9244:40:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 551,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "9298:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 552,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "9304:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9298:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 557,
                  "nodeType": "IfStatement",
                  "src": "9294:48:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 554,
                        "name": "ApprovalToCurrentOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "9318:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9318:24:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 556,
                    "nodeType": "RevertStatement",
                    "src": "9311:31:10"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 558,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1862,
                          "src": "9357:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9357:12:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 560,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "9373:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "9357:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "9382:38:10",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 563,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "9400:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 564,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "9407:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9407:12:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 562,
                          "name": "isApprovedForAll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 655,
                          "src": "9383:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9383:37:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9357:63:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 573,
                  "nodeType": "IfStatement",
                  "src": "9353:136:10",
                  "trueBody": {
                    "id": 572,
                    "nodeType": "Block",
                    "src": "9422:67:10",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 569,
                            "name": "ApprovalCallerNotOwnerNorApproved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "9443:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9443:35:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 571,
                        "nodeType": "RevertStatement",
                        "src": "9436:42:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 538,
                        "src": "9508:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 576,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "9512:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 577,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "9521:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 574,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "9499:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9499:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "9499:28:10"
                }
              ]
            },
            "documentation": {
              "id": 536,
              "nodeType": "StructuredDocumentation",
              "src": "9121:46:10",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "9181:7:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 542,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9225:8:10"
            },
            "parameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9197:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "9189:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9189:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9209:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "9201:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9201:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9188:29:10"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9234:0:10"
            },
            "scope": 1363,
            "src": "9172:362:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1448
            ],
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "9672:123:10",
              "statements": [
                {
                  "condition": {
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "9686:17:10",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 591,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "9695:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 590,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "9687:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9687:16:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 597,
                  "nodeType": "IfStatement",
                  "src": "9682:64:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 594,
                        "name": "ApprovalQueryForNonexistentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "9712:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9712:34:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 596,
                    "nodeType": "RevertStatement",
                    "src": "9705:41:10"
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 598,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "9764:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 600,
                    "indexExpression": {
                      "id": 599,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "9780:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9764:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 589,
                  "id": 601,
                  "nodeType": "Return",
                  "src": "9757:31:10"
                }
              ]
            },
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "9540:50:10",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "9604:11:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 586,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9645:8:10"
            },
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9624:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "9616:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9616:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9615:17:10"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "9663:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9663:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9662:9:10"
            },
            "scope": 1363,
            "src": "9595:200:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1456
            ],
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "9946:202:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 612,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "9964:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 613,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "9976:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9976:12:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9964:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 619,
                  "nodeType": "IfStatement",
                  "src": "9960:54:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 616,
                        "name": "ApproveToCaller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "9997:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9997:17:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 618,
                    "nodeType": "RevertStatement",
                    "src": "9990:24:10"
                  }
                },
                {
                  "expression": {
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 620,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "10025:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 624,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 621,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "10044:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10044:12:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10025:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 625,
                      "indexExpression": {
                        "id": 623,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "10058:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10025:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 626,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 608,
                      "src": "10070:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10025:53:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "10025:53:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 630,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1862,
                          "src": "10108:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10108:12:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 632,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "10122:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 633,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "10132:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 629,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "10093:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10093:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "EmitStatement",
                  "src": "10088:53:10"
                }
              ]
            },
            "documentation": {
              "id": 604,
              "nodeType": "StructuredDocumentation",
              "src": "9801:56:10",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "9871:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 610,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9937:8:10"
            },
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9897:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "9889:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9889:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "9912:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "9907:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9907:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9888:33:10"
            },
            "returnParameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9946:0:10"
            },
            "scope": 1363,
            "src": "9862:286:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1466
            ],
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "10317:59:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 648,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "10334:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 650,
                      "indexExpression": {
                        "id": 649,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "10353:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10334:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 652,
                    "indexExpression": {
                      "id": 651,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "10360:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10334:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 647,
                  "id": 653,
                  "nodeType": "Return",
                  "src": "10327:42:10"
                }
              ]
            },
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "10154:55:10",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "10223:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 644,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10293:8:10"
            },
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10248:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "10240:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10240:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10263:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "10255:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10255:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10239:33:10"
            },
            "returnParameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "10311:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10311:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10310:6:10"
            },
            "scope": 1363,
            "src": "10214:162:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1432
            ],
            "body": {
              "id": 672,
              "nodeType": "Block",
              "src": "10557:45:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 667,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "10577:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 668,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "10583:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 669,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "10587:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 666,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "10567:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10567:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "10567:28:10"
                }
              ]
            },
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "10382:51:10",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "10447:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 664,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10548:8:10"
            },
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10477:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "10469:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10469:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10499:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "10491:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10491:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10519:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 673,
                  "src": "10511:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10511:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10459:73:10"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10557:0:10"
            },
            "scope": 1363,
            "src": "10438:164:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1422
            ],
            "body": {
              "id": 691,
              "nodeType": "Block",
              "src": "10791:56:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 685,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "10818:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 686,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "10824:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 687,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "10828:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10837:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 684,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        692,
                        728
                      ],
                      "referencedDeclaration": 728,
                      "src": "10801:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10801:39:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 690,
                  "nodeType": "ExpressionStatement",
                  "src": "10801:39:10"
                }
              ]
            },
            "documentation": {
              "id": 674,
              "nodeType": "StructuredDocumentation",
              "src": "10608:55:10",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "10677:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 682,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10782:8:10"
            },
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10711:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 692,
                  "src": "10703:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10703:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10733:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 692,
                  "src": "10725:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10725:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10753:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 692,
                  "src": "10745:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10745:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10693:73:10"
            },
            "returnParameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10791:0:10"
            },
            "scope": 1363,
            "src": "10668:179:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1478
            ],
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "11064:208:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 706,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "11084:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 707,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "11090:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 708,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "11094:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 705,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "11074:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11074:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "11074:28:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 711,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 697,
                          "src": "11116:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1575,
                        "src": "11116:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11116:15:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11135:57:10",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 715,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "11167:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 716,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "11173:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 717,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "11177:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 718,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "11186:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 714,
                          "name": "_checkContractOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1336,
                          "src": "11136:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11136:56:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11116:76:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 726,
                  "nodeType": "IfStatement",
                  "src": "11112:154:10",
                  "trueBody": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "11194:72:10",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 722,
                            "name": "TransferToNonERC721ReceiverImplementer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "11215:38:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11215:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 724,
                        "nodeType": "RevertStatement",
                        "src": "11208:47:10"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 693,
              "nodeType": "StructuredDocumentation",
              "src": "10853:55:10",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "10922:16:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 703,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11055:8:10"
            },
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10956:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "10948:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10948:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10978:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "10970:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10970:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10998:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "10990:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10990:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11028:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "11015:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11015:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10938:101:10"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11064:0:10"
            },
            "scope": 1363,
            "src": "10913:359:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "11581:121:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 736,
                            "name": "_startTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "11598:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11598:15:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 738,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "11617:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11598:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 740,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "11628:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 741,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "11638:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11628:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "11598:53:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11667:28:10",
                      "subExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 744,
                            "name": "_ownerships",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "11668:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                            }
                          },
                          "id": 746,
                          "indexExpression": {
                            "id": 745,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "11680:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11668:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                            "typeString": "struct ERC721A.TokenOwnership storage ref"
                          }
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 115,
                        "src": "11668:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11598:97:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 735,
                  "id": 750,
                  "nodeType": "Return",
                  "src": "11591:104:10"
                }
              ]
            },
            "documentation": {
              "id": 729,
              "nodeType": "StructuredDocumentation",
              "src": "11278:235:10",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
            },
            "id": 752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "11527:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11543:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "11535:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11535:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11534:17:10"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "11575:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11575:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11574:6:10"
            },
            "scope": 1363,
            "src": "11518:184:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 765,
              "nodeType": "Block",
              "src": "11766:44:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 760,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "11786:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 761,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "11790:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11800:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 759,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        766,
                        784
                      ],
                      "referencedDeclaration": 784,
                      "src": "11776:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11776:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "11776:27:10"
                }
              ]
            },
            "id": 766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "11717:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11735:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "11727:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11727:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "11747:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "11739:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11739:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11726:30:10"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11766:0:10"
            },
            "scope": 1363,
            "src": "11708:102:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "12269:49:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 777,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "12285:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 778,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 771,
                        "src": "12289:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 779,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "12299:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12306:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 776,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "12279:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bool)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12279:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "12279:32:10"
                }
              ]
            },
            "documentation": {
              "id": 767,
              "nodeType": "StructuredDocumentation",
              "src": "11816:340:10",
              "text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "12170:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12197:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "12189:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12189:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "12217:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "12209:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12209:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12248:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "12235:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12235:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12179:80:10"
            },
            "returnParameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12269:0:10"
            },
            "scope": 1363,
            "src": "12161:157:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 950,
              "nodeType": "Block",
              "src": "12688:1610:10",
              "statements": [
                {
                  "assignments": [
                    797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 797,
                      "mutability": "mutable",
                      "name": "startTokenId",
                      "nameLocation": "12706:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 950,
                      "src": "12698:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 796,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12698:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 799,
                  "initialValue": {
                    "id": 798,
                    "name": "_currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 127,
                    "src": "12721:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12698:36:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 800,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 787,
                      "src": "12748:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12762:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12754:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 801,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12754:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12754:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12748:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 809,
                  "nodeType": "IfStatement",
                  "src": "12744:48:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 806,
                        "name": "MintToZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "12773:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12773:19:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 808,
                    "nodeType": "RevertStatement",
                    "src": "12766:26:10"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 810,
                      "name": "quantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 789,
                      "src": "12806:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12818:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12806:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 816,
                  "nodeType": "IfStatement",
                  "src": "12802:44:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 813,
                        "name": "MintZeroQuantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "12828:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12828:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 815,
                    "nodeType": "RevertStatement",
                    "src": "12821:25:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12887:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12879:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 818,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12879:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12879:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 822,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "12891:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 823,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "12895:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 824,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "12909:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 817,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1349,
                      "src": "12857:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12857:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "12857:61:10"
                },
                {
                  "id": 939,
                  "nodeType": "UncheckedBlock",
                  "src": "13165:1057:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 827,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "13189:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 829,
                            "indexExpression": {
                              "id": 828,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "13202:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13189:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$125_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 118,
                          "src": "13189:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 833,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 789,
                              "src": "13224:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13217:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 831,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "13217:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13217:16:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "13189:44:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 836,
                      "nodeType": "ExpressionStatement",
                      "src": "13189:44:10"
                    },
                    {
                      "expression": {
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 837,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "13247:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 839,
                            "indexExpression": {
                              "id": 838,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "13260:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13247:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$125_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "numberMinted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 120,
                          "src": "13247:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 843,
                              "name": "quantity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 789,
                              "src": "13287:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13280:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 841,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "13280:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13280:16:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "13247:49:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 846,
                      "nodeType": "ExpressionStatement",
                      "src": "13247:49:10"
                    },
                    {
                      "expression": {
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 847,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "13311:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 849,
                            "indexExpression": {
                              "id": 848,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "13323:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13311:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "13311:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 851,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 787,
                          "src": "13344:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13311:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 853,
                      "nodeType": "ExpressionStatement",
                      "src": "13311:35:10"
                    },
                    {
                      "expression": {
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 854,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "13360:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 856,
                            "indexExpression": {
                              "id": 855,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "13372:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13360:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 113,
                          "src": "13360:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 860,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "13410:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "13410:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13403:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 858,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "13403:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13403:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "13360:66:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 864,
                      "nodeType": "ExpressionStatement",
                      "src": "13360:66:10"
                    },
                    {
                      "assignments": [
                        866
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 866,
                          "mutability": "mutable",
                          "name": "updatedIndex",
                          "nameLocation": "13449:12:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 939,
                          "src": "13441:20:10",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 865,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13441:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 868,
                      "initialValue": {
                        "id": 867,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "13464:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13441:35:10"
                    },
                    {
                      "assignments": [
                        870
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 870,
                          "mutability": "mutable",
                          "name": "end",
                          "nameLocation": "13498:3:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 939,
                          "src": "13490:11:10",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 869,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13490:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 874,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 871,
                          "name": "updatedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "13504:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 872,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 789,
                          "src": "13519:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13504:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13490:37:10"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 875,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 793,
                          "src": "13546:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 876,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "13554:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1575,
                            "src": "13554:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13554:15:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13546:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 933,
                        "nodeType": "Block",
                        "src": "14020:150:10",
                        "statements": [
                          {
                            "body": {
                              "id": 928,
                              "nodeType": "Block",
                              "src": "14041:86:10",
                              "statements": [
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 921,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "14085:1:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 920,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "14077:7:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 919,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "14077:7:10",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 922,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "14077:10:10",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 923,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 787,
                                        "src": "14089:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 925,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "14093:14:10",
                                        "subExpression": {
                                          "id": 924,
                                          "name": "updatedIndex",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 866,
                                          "src": "14093:12:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 918,
                                      "name": "Transfer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1378,
                                      "src": "14068:8:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256)"
                                      }
                                    },
                                    "id": 926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14068:40:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 927,
                                  "nodeType": "EmitStatement",
                                  "src": "14063:45:10"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 929,
                                "name": "updatedIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 866,
                                "src": "14135:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 930,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "14151:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14135:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 932,
                            "nodeType": "DoWhileStatement",
                            "src": "14038:118:10"
                          }
                        ]
                      },
                      "id": 934,
                      "nodeType": "IfStatement",
                      "src": "13542:628:10",
                      "trueBody": {
                        "id": 917,
                        "nodeType": "Block",
                        "src": "13571:443:10",
                        "statements": [
                          {
                            "body": {
                              "id": 905,
                              "nodeType": "Block",
                              "src": "13592:277:10",
                              "statements": [
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 883,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "13636:1:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 882,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "13628:7:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 881,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "13628:7:10",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 884,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "13628:10:10",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 885,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 787,
                                        "src": "13640:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 886,
                                        "name": "updatedIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 866,
                                        "src": "13644:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 880,
                                      "name": "Transfer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1378,
                                      "src": "13619:8:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256)"
                                      }
                                    },
                                    "id": 887,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13619:38:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 888,
                                  "nodeType": "EmitStatement",
                                  "src": "13614:43:10"
                                },
                                {
                                  "condition": {
                                    "id": 899,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "13683:70:10",
                                    "subExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "30",
                                              "id": 892,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13723:1:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              }
                                            ],
                                            "id": 891,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "13715:7:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 890,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "13715:7:10",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 893,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13715:10:10",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 894,
                                          "name": "to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 787,
                                          "src": "13727:2:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 896,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "++",
                                          "prefix": false,
                                          "src": "13731:14:10",
                                          "subExpression": {
                                            "id": 895,
                                            "name": "updatedIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 866,
                                            "src": "13731:12:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 897,
                                          "name": "_data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 791,
                                          "src": "13747:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 889,
                                        "name": "_checkContractOnERC721Received",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1336,
                                        "src": "13684:30:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                          "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                                        }
                                      },
                                      "id": 898,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13684:69:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 904,
                                  "nodeType": "IfStatement",
                                  "src": "13679:172:10",
                                  "trueBody": {
                                    "id": 903,
                                    "nodeType": "Block",
                                    "src": "13755:96:10",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 900,
                                            "name": "TransferToNonERC721ReceiverImplementer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 90,
                                            "src": "13788:38:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                              "typeString": "function () pure"
                                            }
                                          },
                                          "id": 901,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13788:40:10",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 902,
                                        "nodeType": "RevertStatement",
                                        "src": "13781:47:10"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 906,
                                "name": "updatedIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 866,
                                "src": "13877:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 907,
                                "name": "end",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "13893:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13877:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 909,
                            "nodeType": "DoWhileStatement",
                            "src": "13589:309:10"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 910,
                                "name": "_currentIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "13960:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 911,
                                "name": "startTokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 797,
                                "src": "13977:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13960:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 916,
                            "nodeType": "IfStatement",
                            "src": "13956:43:10",
                            "trueBody": {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 913,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "13991:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13991:8:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 915,
                              "nodeType": "ExpressionStatement",
                              "src": "13991:8:10"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 935,
                          "name": "_currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "14183:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 936,
                          "name": "updatedIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "14199:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14183:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 938,
                      "nodeType": "ExpressionStatement",
                      "src": "14183:28:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14260:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14252:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14252:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14252:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 945,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "14264:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 946,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "14268:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 947,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "14282:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 940,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1362,
                      "src": "14231:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14231:60:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "14231:60:10"
                }
              ]
            },
            "documentation": {
              "id": 785,
              "nodeType": "StructuredDocumentation",
              "src": "12324:236:10",
              "text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
            },
            "id": 951,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "12574:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12597:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "12589:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12589:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "12617:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "12609:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12609:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12648:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "12635:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12635:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "12668:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "12663:9:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12663:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12579:99:10"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12688:0:10"
            },
            "scope": 1363,
            "src": "12565:1733:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "14649:1975:10",
              "statements": [
                {
                  "assignments": [
                    963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 963,
                      "mutability": "mutable",
                      "name": "prevOwnership",
                      "nameLocation": "14689:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "14667:35:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership"
                      },
                      "typeName": {
                        "id": 962,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 961,
                          "name": "TokenOwnership",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 116,
                          "src": "14667:14:10"
                        },
                        "referencedDeclaration": 116,
                        "src": "14667:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$116_storage_ptr",
                          "typeString": "struct ERC721A.TokenOwnership"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 967,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 965,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "14717:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 964,
                      "name": "ownershipOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "14705:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$116_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14705:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                      "typeString": "struct ERC721A.TokenOwnership memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14667:58:10"
                },
                {
                  "assignments": [
                    969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 969,
                      "mutability": "mutable",
                      "name": "isApprovedOrOwner",
                      "nameLocation": "14741:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1116,
                      "src": "14736:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 968,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14736:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 990,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 970,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1862,
                                "src": "14762:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14762:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 972,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 963,
                                "src": "14778:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 111,
                              "src": "14778:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "14762:34:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 976,
                                  "name": "prevOwnership",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 963,
                                  "src": "14829:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "id": 977,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 111,
                                "src": "14829:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 978,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1862,
                                  "src": "14849:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14849:12:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 975,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "14812:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14812:50:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14762:100:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 983,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 958,
                                "src": "14890:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 982,
                              "name": "getApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "14878:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14878:20:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 985,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "14902:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14902:12:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14878:36:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14762:152:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 989,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "14761:154:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14736:179:10"
                },
                {
                  "condition": {
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "14930:18:10",
                    "subExpression": {
                      "id": 991,
                      "name": "isApprovedOrOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "14931:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 996,
                  "nodeType": "IfStatement",
                  "src": "14926:66:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 993,
                        "name": "TransferCallerNotOwnerNorApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "14957:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14957:35:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 995,
                    "nodeType": "RevertStatement",
                    "src": "14950:42:10"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 997,
                        "name": "prevOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "15006:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                          "typeString": "struct ERC721A.TokenOwnership memory"
                        }
                      },
                      "id": 998,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111,
                      "src": "15006:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 999,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "15028:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15006:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1004,
                  "nodeType": "IfStatement",
                  "src": "15002:67:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1001,
                        "name": "TransferFromIncorrectOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "15041:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15041:28:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1003,
                    "nodeType": "RevertStatement",
                    "src": "15034:35:10"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1005,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 956,
                      "src": "15083:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15097:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15089:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15089:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15089:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15083:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1014,
                  "nodeType": "IfStatement",
                  "src": "15079:52:10",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1011,
                        "name": "TransferToZeroAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "15108:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15108:23:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1013,
                    "nodeType": "RevertStatement",
                    "src": "15101:30:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1016,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "15164:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1017,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "15170:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1018,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "15174:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15183:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1015,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1349,
                      "src": "15142:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15142:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "15142:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15264:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15256:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15256:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15256:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1027,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "15268:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1028,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "15277:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "15277:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1022,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "15247:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15247:49:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "15247:49:10"
                },
                {
                  "id": 1102,
                  "nodeType": "UncheckedBlock",
                  "src": "15562:961:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1032,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "15586:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1034,
                            "indexExpression": {
                              "id": 1033,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 954,
                              "src": "15599:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15586:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$125_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 118,
                          "src": "15586:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15616:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15586:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 1038,
                      "nodeType": "ExpressionStatement",
                      "src": "15586:31:10"
                    },
                    {
                      "expression": {
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1039,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "15631:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1041,
                            "indexExpression": {
                              "id": 1040,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "15644:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15631:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$125_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 118,
                          "src": "15631:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15659:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15631:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 1045,
                      "nodeType": "ExpressionStatement",
                      "src": "15631:29:10"
                    },
                    {
                      "expression": {
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1046,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "15675:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1048,
                            "indexExpression": {
                              "id": 1047,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "15687:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15675:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "15675:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1050,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 956,
                          "src": "15703:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15675:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1052,
                      "nodeType": "ExpressionStatement",
                      "src": "15675:30:10"
                    },
                    {
                      "expression": {
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1053,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "15719:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1055,
                            "indexExpression": {
                              "id": 1054,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 958,
                              "src": "15731:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15719:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 113,
                          "src": "15719:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1059,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "15764:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "15764:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15757:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 1057,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "15757:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15757:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "15719:61:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 1063,
                      "nodeType": "ExpressionStatement",
                      "src": "15719:61:10"
                    },
                    {
                      "assignments": [
                        1065
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1065,
                          "mutability": "mutable",
                          "name": "nextTokenId",
                          "nameLocation": "16036:11:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1102,
                          "src": "16028:19:10",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1064,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "16028:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1069,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1066,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 958,
                          "src": "16050:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16060:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16050:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "16028:33:10"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1070,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "16079:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1072,
                            "indexExpression": {
                              "id": 1071,
                              "name": "nextTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "16091:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16079:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1073,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "16079:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16120:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16112:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1074,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16112:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16112:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16079:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1101,
                      "nodeType": "IfStatement",
                      "src": "16075:438:10",
                      "trueBody": {
                        "id": 1100,
                        "nodeType": "Block",
                        "src": "16124:389:10",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1079,
                                "name": "nextTokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1065,
                                "src": "16287:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1080,
                                "name": "_currentIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "16301:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16287:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1099,
                            "nodeType": "IfStatement",
                            "src": "16283:216:10",
                            "trueBody": {
                              "id": 1098,
                              "nodeType": "Block",
                              "src": "16316:183:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1088,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1082,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 138,
                                          "src": "16338:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1084,
                                        "indexExpression": {
                                          "id": 1083,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1065,
                                          "src": "16350:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16338:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1085,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 111,
                                      "src": "16338:29:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "id": 1086,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 963,
                                        "src": "16370:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1087,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 111,
                                      "src": "16370:18:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "16338:50:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1089,
                                  "nodeType": "ExpressionStatement",
                                  "src": "16338:50:10"
                                },
                                {
                                  "expression": {
                                    "id": 1096,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1090,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 138,
                                          "src": "16410:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1092,
                                        "indexExpression": {
                                          "id": 1091,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1065,
                                          "src": "16422:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16410:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1093,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 113,
                                      "src": "16410:39:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "id": 1094,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 963,
                                        "src": "16452:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1095,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 113,
                                      "src": "16452:28:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "src": "16410:70:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "id": 1097,
                                  "nodeType": "ExpressionStatement",
                                  "src": "16410:70:10"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1104,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "16547:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1105,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "16553:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1106,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "16557:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1103,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "16538:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16538:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1108,
                  "nodeType": "EmitStatement",
                  "src": "16533:32:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1110,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "16596:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1111,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "16602:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1112,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "16606:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16615:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1109,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1362,
                      "src": "16575:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16575:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "16575:42:10"
                }
              ]
            },
            "documentation": {
              "id": 952,
              "nodeType": "StructuredDocumentation",
              "src": "14304:231:10",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "14549:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14576:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "14568:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14568:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14598:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "14590:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14590:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14618:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "14610:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14610:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14558:73:10"
            },
            "returnParameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14649:0:10"
            },
            "scope": 1363,
            "src": "14540:2084:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1257,
              "nodeType": "Block",
              "src": "16890:1950:10",
              "statements": [
                {
                  "assignments": [
                    1125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1125,
                      "mutability": "mutable",
                      "name": "prevOwnership",
                      "nameLocation": "16922:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "16900:35:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership"
                      },
                      "typeName": {
                        "id": 1124,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1123,
                          "name": "TokenOwnership",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 116,
                          "src": "16900:14:10"
                        },
                        "referencedDeclaration": 116,
                        "src": "16900:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$116_storage_ptr",
                          "typeString": "struct ERC721A.TokenOwnership"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1129,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1127,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "16950:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1126,
                      "name": "ownershipOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "16938:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$116_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16938:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                      "typeString": "struct ERC721A.TokenOwnership memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16900:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1131,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "16991:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "16991:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17019:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17011:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1133,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17011:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17011:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1137,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "17023:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17032:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1130,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1349,
                      "src": "16969:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16969:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "16969:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17113:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17105:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1142,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17105:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17105:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1146,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "17117:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1147,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "17126:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "17126:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1141,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "17096:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17096:49:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "17096:49:10"
                },
                {
                  "id": 1231,
                  "nodeType": "UncheckedBlock",
                  "src": "17411:1137:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1151,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "17435:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1154,
                            "indexExpression": {
                              "expression": {
                                "id": 1152,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "17448:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1153,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 111,
                              "src": "17448:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17435:32:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$125_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 118,
                          "src": "17435:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17479:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17435:45:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 1158,
                      "nodeType": "ExpressionStatement",
                      "src": "17435:45:10"
                    },
                    {
                      "expression": {
                        "id": 1165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1159,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "17494:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$125_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1162,
                            "indexExpression": {
                              "expression": {
                                "id": 1160,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "17507:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 111,
                              "src": "17507:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17494:32:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$125_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "numberBurned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 122,
                          "src": "17494:45:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17543:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17494:50:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 1166,
                      "nodeType": "ExpressionStatement",
                      "src": "17494:50:10"
                    },
                    {
                      "expression": {
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1167,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "17640:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1169,
                            "indexExpression": {
                              "id": 1168,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "17652:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17640:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "17640:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 1171,
                            "name": "prevOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "17668:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                              "typeString": "struct ERC721A.TokenOwnership memory"
                            }
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "17668:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17640:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1174,
                      "nodeType": "ExpressionStatement",
                      "src": "17640:46:10"
                    },
                    {
                      "expression": {
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1175,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "17700:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1177,
                            "indexExpression": {
                              "id": 1176,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "17712:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17700:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "startTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 113,
                          "src": "17700:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1181,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "17745:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "17745:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17738:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 1179,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "17738:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17738:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "17700:61:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 1185,
                      "nodeType": "ExpressionStatement",
                      "src": "17700:61:10"
                    },
                    {
                      "expression": {
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1186,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "17775:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1188,
                            "indexExpression": {
                              "id": 1187,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "17787:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17775:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "burned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 115,
                          "src": "17775:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17805:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "17775:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1192,
                      "nodeType": "ExpressionStatement",
                      "src": "17775:34:10"
                    },
                    {
                      "assignments": [
                        1194
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1194,
                          "mutability": "mutable",
                          "name": "nextTokenId",
                          "nameLocation": "18061:11:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1231,
                          "src": "18053:19:10",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1193,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "18053:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1198,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1195,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1120,
                          "src": "18075:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18085:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18075:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "18053:33:10"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1199,
                              "name": "_ownerships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "18104:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                              }
                            },
                            "id": 1201,
                            "indexExpression": {
                              "id": 1200,
                              "name": "nextTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "18116:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18104:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                              "typeString": "struct ERC721A.TokenOwnership storage ref"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "18104:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18145:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18137:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1203,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18137:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18137:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "18104:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1230,
                      "nodeType": "IfStatement",
                      "src": "18100:438:10",
                      "trueBody": {
                        "id": 1229,
                        "nodeType": "Block",
                        "src": "18149:389:10",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1208,
                                "name": "nextTokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "18312:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1209,
                                "name": "_currentIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 127,
                                "src": "18326:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "18312:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1228,
                            "nodeType": "IfStatement",
                            "src": "18308:216:10",
                            "trueBody": {
                              "id": 1227,
                              "nodeType": "Block",
                              "src": "18341:183:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1217,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1211,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 138,
                                          "src": "18363:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1213,
                                        "indexExpression": {
                                          "id": 1212,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1194,
                                          "src": "18375:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18363:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1214,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 111,
                                      "src": "18363:29:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "id": 1215,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1125,
                                        "src": "18395:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1216,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 111,
                                      "src": "18395:18:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "18363:50:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1218,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18363:50:10"
                                },
                                {
                                  "expression": {
                                    "id": 1225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1219,
                                          "name": "_ownerships",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 138,
                                          "src": "18435:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$116_storage_$",
                                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                          }
                                        },
                                        "id": 1221,
                                        "indexExpression": {
                                          "id": 1220,
                                          "name": "nextTokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1194,
                                          "src": "18447:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18435:24:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_storage",
                                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                                        }
                                      },
                                      "id": 1222,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 113,
                                      "src": "18435:39:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "id": 1223,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1125,
                                        "src": "18477:13:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1224,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 113,
                                      "src": "18477:28:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "src": "18435:70:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "id": 1226,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18435:70:10"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1233,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "18572:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "18572:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18600:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18592:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1235,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18592:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18592:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1239,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "18604:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1232,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "18563:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18563:49:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "EmitStatement",
                  "src": "18558:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1243,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "18643:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$116_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "18643:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18671:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18663:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18663:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18663:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1249,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "18675:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18684:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1242,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1362,
                      "src": "18622:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18622:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "18622:64:10"
                },
                {
                  "id": 1256,
                  "nodeType": "UncheckedBlock",
                  "src": "18785:49:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "18809:14:10",
                        "subExpression": {
                          "id": 1253,
                          "name": "_burnCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "18809:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1255,
                      "nodeType": "ExpressionStatement",
                      "src": "18809:14:10"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 1118,
              "nodeType": "StructuredDocumentation",
              "src": "16630:206:10",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 1258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "16850:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "16864:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1258,
                  "src": "16856:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16856:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16855:17:10"
            },
            "returnParameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16890:0:10"
            },
            "scope": 1363,
            "src": "16841:1999:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1280,
              "nodeType": "Block",
              "src": "19051:89:10",
              "statements": [
                {
                  "expression": {
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1268,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "19061:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1270,
                      "indexExpression": {
                        "id": 1269,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "19077:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19061:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1271,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "19088:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19061:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "19061:29:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1275,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1265,
                        "src": "19114:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1276,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1261,
                        "src": "19121:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1277,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "19125:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1274,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1387,
                      "src": "19105:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19105:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1279,
                  "nodeType": "EmitStatement",
                  "src": "19100:33:10"
                }
              ]
            },
            "documentation": {
              "id": 1259,
              "nodeType": "StructuredDocumentation",
              "src": "18846:100:10",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "18960:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1261,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18986:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "18978:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18978:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19006:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "18998:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18998:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1265,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "19031:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1281,
                  "src": "19023:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19023:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18968:74:10"
            },
            "returnParameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19051:0:10"
            },
            "scope": 1363,
            "src": "18951:189:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1335,
              "nodeType": "Block",
              "src": "19785:486:10",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 1316,
                        "nodeType": "Block",
                        "src": "19896:87:10",
                        "statements": [
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 1314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1308,
                                "name": "retval",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1306,
                                "src": "19917:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1310,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1286,
                                        "src": "19943:2:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1309,
                                      "name": "IERC721Receiver",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1497,
                                      "src": "19927:15:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1497_$",
                                        "typeString": "type(contract IERC721Receiver)"
                                      }
                                    },
                                    "id": 1311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19927:19:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721Receiver_$1497",
                                      "typeString": "contract IERC721Receiver"
                                    }
                                  },
                                  "id": 1312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "onERC721Received",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1496,
                                  "src": "19927:36:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                  }
                                },
                                "id": 1313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "19927:45:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "19917:55:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 1294,
                            "id": 1315,
                            "nodeType": "Return",
                            "src": "19910:62:10"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 1317,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 1307,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1306,
                            "mutability": "mutable",
                            "name": "retval",
                            "nameLocation": "19888:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1317,
                            "src": "19881:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "typeName": {
                              "id": 1305,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "19881:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "19880:15:10"
                      },
                      "src": "19872:111:10"
                    },
                    {
                      "block": {
                        "id": 1332,
                        "nodeType": "Block",
                        "src": "20012:253:10",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1321,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1319,
                                  "src": "20030:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "20030:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20047:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "20030:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1330,
                              "nodeType": "Block",
                              "src": "20136:119:10",
                              "statements": [
                                {
                                  "AST": {
                                    "nodeType": "YulBlock",
                                    "src": "20163:78:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "20196:2:10",
                                                  "type": "",
                                                  "value": "32"
                                                },
                                                {
                                                  "name": "reason",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20200:6:10"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "20192:3:10"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "20192:15:10"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "reason",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20215:6:10"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "20209:5:10"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "20209:13:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "20185:6:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "20185:38:10"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "20185:38:10"
                                      }
                                    ]
                                  },
                                  "evmVersion": "istanbul",
                                  "externalReferences": [
                                    {
                                      "declaration": 1319,
                                      "isOffset": false,
                                      "isSlot": false,
                                      "src": "20200:6:10",
                                      "valueSize": 1
                                    },
                                    {
                                      "declaration": 1319,
                                      "isOffset": false,
                                      "isSlot": false,
                                      "src": "20215:6:10",
                                      "valueSize": 1
                                    }
                                  ],
                                  "id": 1329,
                                  "nodeType": "InlineAssembly",
                                  "src": "20154:87:10"
                                }
                              ]
                            },
                            "id": 1331,
                            "nodeType": "IfStatement",
                            "src": "20026:229:10",
                            "trueBody": {
                              "id": 1328,
                              "nodeType": "Block",
                              "src": "20050:80:10",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1325,
                                      "name": "TransferToNonERC721ReceiverImplementer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 90,
                                      "src": "20075:38:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "20075:40:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1327,
                                  "nodeType": "RevertStatement",
                                  "src": "20068:47:10"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 1333,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 1320,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 1319,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "20004:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1333,
                            "src": "19991:19:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1318,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "19991:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "19990:21:10"
                      },
                      "src": "19984:281:10"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1299,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1862,
                          "src": "19836:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19836:12:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1301,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1284,
                        "src": "19850:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1302,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1288,
                        "src": "19856:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1303,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1290,
                        "src": "19865:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1296,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "19815:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1295,
                          "name": "IERC721Receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1497,
                          "src": "19799:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1497_$",
                            "typeString": "type(contract IERC721Receiver)"
                          }
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19799:19:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721Receiver_$1497",
                          "typeString": "contract IERC721Receiver"
                        }
                      },
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1496,
                      "src": "19799:36:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19799:72:10",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 1334,
                  "nodeType": "TryStatement",
                  "src": "19795:470:10"
                }
              ]
            },
            "documentation": {
              "id": 1282,
              "nodeType": "StructuredDocumentation",
              "src": "19146:470:10",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkContractOnERC721Received",
            "nameLocation": "19630:30:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1284,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "19678:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1336,
                  "src": "19670:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19670:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "19700:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1336,
                  "src": "19692:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19692:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1288,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19720:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1336,
                  "src": "19712:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19712:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "19750:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1336,
                  "src": "19737:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1289,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19737:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19660:101:10"
            },
            "returnParameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1336,
                  "src": "19779:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19779:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19778:6:10"
            },
            "scope": 1363,
            "src": "19621:650:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1348,
              "nodeType": "Block",
              "src": "21054:2:10",
              "statements": []
            },
            "documentation": {
              "id": 1337,
              "nodeType": "StructuredDocumentation",
              "src": "20277:620:10",
              "text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
            },
            "id": 1349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "20911:21:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1339,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "20950:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "20942:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20942:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "20972:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "20964:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20964:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "20992:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "20984:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20984:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1345,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "21022:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "21014:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21014:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20932:104:10"
            },
            "returnParameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21054:0:10"
            },
            "scope": 1363,
            "src": "20902:154:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1361,
              "nodeType": "Block",
              "src": "21848:2:10",
              "statements": []
            },
            "documentation": {
              "id": 1350,
              "nodeType": "StructuredDocumentation",
              "src": "21062:630:10",
              "text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
            },
            "id": 1362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfers",
            "nameLocation": "21706:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1352,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "21744:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1362,
                  "src": "21736:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21736:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1354,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "21766:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1362,
                  "src": "21758:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21758:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1356,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "21786:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1362,
                  "src": "21778:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21778:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1358,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "21816:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1362,
                  "src": "21808:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21808:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21726:104:10"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21848:0:10"
            },
            "scope": 1363,
            "src": "21697:153:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1364,
        "src": "1708:20144:10",
        "usedErrors": [
          60,
          62,
          64,
          66,
          68,
          82,
          86,
          88,
          90,
          92,
          94
        ]
      }
    ],
    "src": "56:21796:10"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620012aa380380620012aa8339810160408190526200003491620001df565b8151620000499060029060208501906200006c565b5080516200005f9060039060208401906200006c565b5050600080555062000285565b8280546200007a9062000249565b90600052602060002090601f0160209004810192826200009e5760008555620000e9565b82601f10620000b957805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e9578251825591602001919060010190620000cc565b50620000f7929150620000fb565b5090565b5b80821115620000f75760008155600101620000fc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013a57600080fd5b81516001600160401b038082111562000157576200015762000112565b604051601f8301601f19908116603f0116810190828211818310171562000182576200018262000112565b816040528381526020925086838588010111156200019f57600080fd5b600091505b83821015620001c35785820183015181830184015290820190620001a4565b83821115620001d55760008385830101525b9695505050505050565b60008060408385031215620001f357600080fd5b82516001600160401b03808211156200020b57600080fd5b620002198683870162000128565b935060208501519150808211156200023057600080fd5b506200023f8582860162000128565b9150509250929050565b600181811c908216806200025e57607f821691505b6020821081036200027f57634e487b7160e01b600052602260045260246000fd5b50919050565b61101580620002956000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610bcb565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e9190610c40565b61013f61013a366004610c53565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610c88565b610373565b005b600154600054035b60405190815260200161010e565b61016a610190366004610cb2565b610400565b61016a6101a3366004610cb2565b61040b565b61013f6101b6366004610c53565b610426565b6101746101c9366004610cee565b610438565b61011f610487565b61016a6101e4366004610d09565b610496565b61016a6101f7366004610d5b565b61052b565b61011f61020a366004610c53565b61057c565b61010261021d366004610e37565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061027c57506001600160e01b03198216635b5e139f60e01b145b8061029757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610e6a565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610e6a565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a8261060d565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e82610426565b9050806001600160a01b0316836001600160a01b0316036103b25760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906103d257506103d0813361021d565b155b156103f0576040516367d9dca160e11b815260040160405180910390fd5b6103fb838383610638565b505050565b6103fb838383610694565b6103fb8383836040518060200160405280600081525061052b565b6000610431826108a9565b5192915050565b60006001600160a01b038216610461576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610e6a565b336001600160a01b038316036104bf5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610536848484610694565b6001600160a01b0383163b151580156105585750610556848484846109c5565b155b15610576576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606105878261060d565b6105a457604051630a14c4b560e41b815260040160405180910390fd5b60006105bb60408051602081019091526000815290565b905080516000036105db5760405180602001604052806000815250610606565b806105e584610ab1565b6040516020016105f6929190610ea4565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061069f826108a9565b80519091506000906001600160a01b0316336001600160a01b031614806106cd575081516106cd903361021d565b806106e85750336106dd8461032f565b6001600160a01b0316145b90508061070857604051632ce44b5f60e11b815260040160405180910390fd5b846001600160a01b031682600001516001600160a01b03161461073d5760405162a1148160e81b815260040160405180910390fd5b6001600160a01b03841661076457604051633a954ecd60e21b815260040160405180910390fd5b6107746000848460000151610638565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021790925590860180835291205490911661086057600054811015610860578251600082815260046020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b6040805160608101825260008082526020820181905291810191909152816000548110156109ac57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906109aa5780516001600160a01b031615610940579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156109a5579392505050565b610940565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906109fa903390899088908890600401610ed3565b6020604051808303816000875af1925050508015610a35575060408051601f3d908101601f19168201909252610a3291810190610f10565b60015b610a93573d808015610a63576040519150601f19603f3d011682016040523d82523d6000602084013e610a68565b606091505b508051600003610a8b576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606081600003610ad85750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b025780610aec81610f43565b9150610afb9050600a83610f72565b9150610adc565b60008167ffffffffffffffff811115610b1d57610b1d610d45565b6040519080825280601f01601f191660200182016040528015610b47576020820181803683370190505b5090505b8415610aa957610b5c600183610f86565b9150610b69600a86610f9d565b610b74906030610fb1565b60f81b818381518110610b8957610b89610fc9565b60200101906001600160f81b031916908160001a905350610bab600a86610f72565b9450610b4b565b6001600160e01b031981168114610bc857600080fd5b50565b600060208284031215610bdd57600080fd5b813561060681610bb2565b60005b83811015610c03578181015183820152602001610beb565b838111156105765750506000910152565b60008151808452610c2c816020860160208601610be8565b601f01601f19169290920160200192915050565b6020815260006106066020830184610c14565b600060208284031215610c6557600080fd5b5035919050565b80356001600160a01b0381168114610c8357600080fd5b919050565b60008060408385031215610c9b57600080fd5b610ca483610c6c565b946020939093013593505050565b600080600060608486031215610cc757600080fd5b610cd084610c6c565b9250610cde60208501610c6c565b9150604084013590509250925092565b600060208284031215610d0057600080fd5b61060682610c6c565b60008060408385031215610d1c57600080fd5b610d2583610c6c565b915060208301358015158114610d3a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610d7157600080fd5b610d7a85610c6c565b9350610d8860208601610c6c565b925060408501359150606085013567ffffffffffffffff80821115610dac57600080fd5b818701915087601f830112610dc057600080fd5b813581811115610dd257610dd2610d45565b604051601f8201601f19908116603f01168101908382118183101715610dfa57610dfa610d45565b816040528281528a6020848701011115610e1357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610e4a57600080fd5b610e5383610c6c565b9150610e6160208401610c6c565b90509250929050565b600181811c90821680610e7e57607f821691505b602082108103610e9e57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610eb6818460208801610be8565b835190830190610eca818360208801610be8565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610f0690830184610c14565b9695505050505050565b600060208284031215610f2257600080fd5b815161060681610bb2565b634e487b7160e01b600052601160045260246000fd5b600060018201610f5557610f55610f2d565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610f8157610f81610f5c565b500490565b600082821015610f9857610f98610f2d565b500390565b600082610fac57610fac610f5c565b500690565b60008219821115610fc457610fc4610f2d565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220062c9189bd51103f6c66a1e50f357e130e164085c55fddc57f874716faac76cc64736f6c634300080d0033",
  "bytecodeSha1": "024fde29349e572d54453fac1e0d219c344fda0a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721A",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {
        "ERC721A._checkContractOnERC721Received": {
          "68": [
            20030,
            20048,
            false
          ]
        },
        "ERC721A._transfer": {
          "61": [
            14931,
            14948,
            false
          ],
          "62": [
            15006,
            15032,
            false
          ],
          "63": [
            15083,
            15099,
            false
          ],
          "64": [
            16287,
            16314,
            false
          ]
        },
        "ERC721A.approve": {
          "53": [
            9298,
            9309,
            false
          ],
          "54": [
            9357,
            9378,
            false
          ],
          "55": [
            9383,
            9420,
            false
          ]
        },
        "ERC721A.balanceOf": {
          "56": [
            5289,
            5308,
            false
          ]
        },
        "ERC721A.getApproved": {
          "52": [
            9687,
            9703,
            false
          ]
        },
        "ERC721A.ownershipOf": {
          "65": [
            6997,
            7017,
            false
          ],
          "66": [
            7155,
            7183,
            false
          ],
          "67": [
            7677,
            7705,
            false
          ]
        },
        "ERC721A.safeTransferFrom": {
          "58": [
            11136,
            11192,
            false
          ]
        },
        "ERC721A.setApprovalForAll": {
          "57": [
            9964,
            9988,
            false
          ]
        },
        "ERC721A.tokenURI": {
          "59": [
            8572,
            8588,
            false
          ],
          "60": [
            8688,
            8714,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Strings.toString": {
          "69": [
            548,
            558,
            false
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {
        "ERC721A._approve": {
          "27": [
            19061,
            19090
          ],
          "28": [
            19100,
            19133
          ]
        },
        "ERC721A._baseURI": {
          "24": [
            9099,
            9108
          ]
        },
        "ERC721A._checkContractOnERC721Received": {
          "44": [
            20026,
            20255
          ],
          "45": [
            19910,
            19972
          ]
        },
        "ERC721A._exists": {
          "26": [
            11591,
            11695
          ]
        },
        "ERC721A._transfer": {
          "29": [
            14926,
            14992
          ],
          "30": [
            15002,
            15069
          ],
          "31": [
            15079,
            15131
          ],
          "32": [
            15247,
            15296
          ],
          "33": [
            15586,
            15617
          ],
          "34": [
            15631,
            15660
          ],
          "35": [
            15675,
            15705
          ],
          "36": [
            15719,
            15780
          ],
          "37": [
            16338,
            16388
          ],
          "38": [
            16410,
            16480
          ],
          "39": [
            16533,
            16565
          ]
        },
        "ERC721A.approve": {
          "7": [
            9294,
            9342
          ],
          "9": [
            9353,
            9489
          ],
          "10": [
            9499,
            9527
          ]
        },
        "ERC721A.balanceOf": {
          "14": [
            5285,
            5345
          ],
          "15": [
            5355,
            5398
          ]
        },
        "ERC721A.getApproved": {
          "5": [
            9682,
            9746
          ],
          "6": [
            9757,
            9788
          ]
        },
        "ERC721A.isApprovedForAll": {
          "1": [
            10327,
            10369
          ]
        },
        "ERC721A.name": {
          "4": [
            8218,
            8230
          ]
        },
        "ERC721A.ownerOf": {
          "13": [
            8038,
            8070
          ]
        },
        "ERC721A.ownershipOf": {
          "40": [
            7211,
            7227
          ],
          "41": [
            7586,
            7592
          ],
          "42": [
            7618,
            7647
          ],
          "43": [
            7737,
            7753
          ]
        },
        "ERC721A.safeTransferFrom": {
          "12": [
            10801,
            10840
          ],
          "20": [
            11074,
            11102
          ],
          "21": [
            11112,
            11266
          ]
        },
        "ERC721A.setApprovalForAll": {
          "17": [
            9960,
            10014
          ],
          "18": [
            10025,
            10078
          ],
          "19": [
            10088,
            10141
          ]
        },
        "ERC721A.supportsInterface": {
          "2": [
            4961,
            5136
          ]
        },
        "ERC721A.symbol": {
          "16": [
            8382,
            8396
          ]
        },
        "ERC721A.tokenURI": {
          "23": [
            8567,
            8626
          ],
          "25": [
            8681,
            8775
          ]
        },
        "ERC721A.totalSupply": {
          "0": [
            4341,
            4394
          ]
        },
        "ERC721A.transferFrom": {
          "11": [
            10567,
            10595
          ]
        }
      },
      "3": {},
      "4": {
        "Address.isContract": {
          "22": [
            1073,
            1088
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "8": [
            658,
            675
          ]
        }
      },
      "6": {
        "Strings.toString": {
          "46": [
            574,
            584
          ],
          "47": [
            690,
            698
          ],
          "48": [
            712,
            722
          ],
          "49": [
            824,
            835
          ],
          "50": [
            849,
            905
          ],
          "51": [
            919,
            930
          ]
        }
      },
      "7": {
        "ERC165.supportsInterface": {
          "3": [
            864,
            911
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1708:20144:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4843:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:11;;558:22;540:41;;528:2;513:18;4843:300:10;;;;;;;;8139:98;;;:::i;:::-;;;;;;;:::i;9595:200::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:11;;;1674:51;;1662:2;1647:18;9595:200:10;1528:203:11;9172:362:10;;;;;;:::i;:::-;;:::i;:::-;;4114:297;4364:12;;4158:7;4348:13;:28;4114:297;;;2319:25:11;;;2307:2;2292:18;4114:297:10;2173:177:11;10438:164:10;;;;;;:::i;:::-;;:::i;10668:179::-;;;;;;:::i;:::-;;:::i;7955:122::-;;;;;;:::i;:::-;;:::i;5202:203::-;;;;;;:::i;:::-;;:::i;8301:102::-;;;:::i;9862:286::-;;;;;;:::i;:::-;;:::i;10913:359::-;;;;;;:::i;:::-;;:::i;8469:313::-;;;;;;:::i;:::-;;:::i;10214:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10334:25:10;;;10311:4;10334:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;10214:162;4843:300;4945:4;-1:-1:-1;;;;;;4980:40:10;;-1:-1:-1;;;4980:40:10;;:104;;-1:-1:-1;;;;;;;5036:48:10;;-1:-1:-1;;;5036:48:10;4980:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:7;;;5100:36:10;4961:175;4843:300;-1:-1:-1;;4843:300:10:o;8139:98::-;8193:13;8225:5;8218:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8139:98;:::o;9595:200::-;9663:7;9687:16;9695:7;9687;:16::i;:::-;9682:64;;9712:34;;-1:-1:-1;;;9712:34:10;;;;;;;;;;;9682:64;-1:-1:-1;9764:24:10;;;;:15;:24;;;;;;-1:-1:-1;;;;;9764:24:10;;9595:200::o;9172:362::-;9244:13;9260:24;9276:7;9260:15;:24::i;:::-;9244:40;;9304:5;-1:-1:-1;;;;;9298:11:10;:2;-1:-1:-1;;;;;9298:11:10;;9294:48;;9318:24;;-1:-1:-1;;;9318:24:10;;;;;;;;;;;9294:48;665:10:5;-1:-1:-1;;;;;9357:21:10;;;;;;:63;;-1:-1:-1;9383:37:10;9400:5;665:10:5;10214:162:10;:::i;9383:37::-;9382:38;9357:63;9353:136;;;9443:35;;-1:-1:-1;;;9443:35:10;;;;;;;;;;;9353:136;9499:28;9508:2;9512:7;9521:5;9499:8;:28::i;:::-;9234:300;9172:362;;:::o;10438:164::-;10567:28;10577:4;10583:2;10587:7;10567:9;:28::i;10668:179::-;10801:39;10818:4;10824:2;10828:7;10801:39;;;;;;;;;;;;:16;:39::i;7955:122::-;8019:7;8045:20;8057:7;8045:11;:20::i;:::-;:25;;7955:122;-1:-1:-1;;7955:122:10:o;5202:203::-;5266:7;-1:-1:-1;;;;;5289:19:10;;5285:60;;5317:28;;-1:-1:-1;;;5317:28:10;;;;;;;;;;;5285:60;-1:-1:-1;;;;;;5370:19:10;;;;;:12;:19;;;;;:27;;;;5202:203::o;8301:102::-;8357:13;8389:7;8382:14;;;;;:::i;9862:286::-;665:10:5;-1:-1:-1;;;;;9964:24:10;;;9960:54;;9997:17;;-1:-1:-1;;;9997:17:10;;;;;;;;;;;9960:54;665:10:5;10025:32:10;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;10025:42:10;;;;;;;;;;;;:53;;-1:-1:-1;;10025:53:10;;;;;;;;;;10093:48;;540:41:11;;;10025:42:10;;665:10:5;10093:48:10;;513:18:11;10093:48:10;;;;;;;9862:286;;:::o;10913:359::-;11074:28;11084:4;11090:2;11094:7;11074:9;:28::i;:::-;-1:-1:-1;;;;;11116:13:10;;1034:20:4;1080:8;;11116:76:10;;;;;11136:56;11167:4;11173:2;11177:7;11186:5;11136:30;:56::i;:::-;11135:57;11116:76;11112:154;;;11215:40;;-1:-1:-1;;;11215:40:10;;;;;;;;;;;11112:154;10913:359;;;;:::o;8469:313::-;8542:13;8572:16;8580:7;8572;:16::i;:::-;8567:59;;8597:29;;-1:-1:-1;;;8597:29:10;;;;;;;;;;;8567:59;8637:21;8661:10;9099:9;;;;;;;;;-1:-1:-1;9099:9:10;;;9023:92;8661:10;8637:34;;8694:7;8688:21;8713:1;8688:26;:87;;;;;;;;;;;;;;;;;8741:7;8750:18;:7;:16;:18::i;:::-;8724:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8688:87;8681:94;8469:313;-1:-1:-1;;;8469:313:10:o;11518:184::-;11575:4;11638:13;;11628:7;:23;11598:97;;;;-1:-1:-1;;11668:20:10;;;;:11;:20;;;;;:27;-1:-1:-1;;;11668:27:10;;;;11667:28;;11518:184::o;18951:189::-;19061:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;19061:29:10;-1:-1:-1;;;;;19061:29:10;;;;;;;;;19105:28;;19061:24;;19105:28;;;;;;;18951:189;;;:::o;14540:2084::-;14667:35;14705:20;14717:7;14705:11;:20::i;:::-;14778:18;;14667:58;;-1:-1:-1;14736:22:10;;-1:-1:-1;;;;;14762:34:10;665:10:5;-1:-1:-1;;;;;14762:34:10;;:100;;;-1:-1:-1;14829:18:10;;14812:50;;665:10:5;10214:162:10;:::i;14812:50::-;14762:152;;;-1:-1:-1;665:10:5;14878:20:10;14890:7;14878:11;:20::i;:::-;-1:-1:-1;;;;;14878:36:10;;14762:152;14736:179;;14931:17;14926:66;;14957:35;;-1:-1:-1;;;14957:35:10;;;;;;;;;;;14926:66;15028:4;-1:-1:-1;;;;;15006:26:10;:13;:18;;;-1:-1:-1;;;;;15006:26:10;;15002:67;;15041:28;;-1:-1:-1;;;15041:28:10;;;;;;;;;;;15002:67;-1:-1:-1;;;;;15083:16:10;;15079:52;;15108:23;;-1:-1:-1;;;15108:23:10;;;;;;;;;;;15079:52;15247:49;15264:1;15268:7;15277:13;:18;;;15247:8;:49::i;:::-;-1:-1:-1;;;;;15586:18:10;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;15586:31:10;;;;;;;-1:-1:-1;;15586:31:10;;;;;;;15631:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;15631:29:10;;;;;;;;;;;15675:20;;;:11;:20;;;;;;:30;;-1:-1:-1;;;;;;15719:61:10;;;;-1:-1:-1;;;15764:15:10;15719:61;;;;;;;;;;;16050:11;;;16079:24;;;;;:29;16050:11;;16079:29;16075:438;;16301:13;;16287:11;:27;16283:216;;;16370:18;;;16338:24;;;:11;:24;;;;;;;;:50;;16452:28;;;;16410:70;;-1:-1:-1;;;16410:70:10;-1:-1:-1;;;;;;16410:70:10;;;-1:-1:-1;;;;;16338:50:10;;;16410:70;;;;;;;16283:216;15562:961;16557:7;16553:2;-1:-1:-1;;;;;16538:27:10;16547:4;-1:-1:-1;;;;;16538:27:10;;;;;;;;;;;14649:1975;;14540:2084;;;:::o;6815:1083::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6924:7:10;7004:13;;6997:4;:20;6966:868;;;7037:31;7071:17;;;:11;:17;;;;;;;;;7037:51;;;;;;;;;-1:-1:-1;;;;;7037:51:10;;;;-1:-1:-1;;;7037:51:10;;;;;;;;;;;-1:-1:-1;;;7037:51:10;;;;;;;;;;;;;;7106:714;;7155:14;;-1:-1:-1;;;;;7155:28:10;;7151:99;;7218:9;6815:1083;-1:-1:-1;;;6815:1083:10:o;7151:99::-;-1:-1:-1;;;7586:6:10;7630:17;;;;:11;:17;;;;;;;;;7618:29;;;;;;;;;-1:-1:-1;;;;;7618:29:10;;;;;-1:-1:-1;;;7618:29:10;;;;;;;;;;;-1:-1:-1;;;7618:29:10;;;;;;;;;;;;;7677:28;7673:107;;7744:9;6815:1083;-1:-1:-1;;;6815:1083:10:o;7673:107::-;7547:255;;;7019:815;6966:868;7860:31;;-1:-1:-1;;;7860:31:10;;;;;;;;;;;19621:650;19799:72;;-1:-1:-1;;;19799:72:10;;19779:4;;-1:-1:-1;;;;;19799:36:10;;;;;:72;;665:10:5;;19850:4:10;;19856:7;;19865:5;;19799:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19799:72:10;;;;;;;;-1:-1:-1;;19799:72:10;;;;;;;;;;;;:::i;:::-;;;19795:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20030:6;:13;20047:1;20030:18;20026:229;;20075:40;;-1:-1:-1;;;20075:40:10;;;;;;;;;;;20026:229;20215:6;20209:13;20200:6;20196:2;20192:15;20185:38;19795:470;-1:-1:-1;;;;;;19917:55:10;-1:-1:-1;;;19917:55:10;;-1:-1:-1;19795:470:10;19621:650;;;;;;:::o;275:703:6:-;331:13;548:5;557:1;548:10;544:51;;-1:-1:-1;;574:10:6;;;;;;;;;;;;-1:-1:-1;;;574:10:6;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:6;;-1:-1:-1;720:2:6;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:6;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:6;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:6;;;;;;;;-1:-1:-1;919:11:6;928:2;919:11;;:::i;:::-;;;791:150;;14:131:11;-1:-1:-1;;;;;;88:32:11;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:11;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:11;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:11:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:11;;1343:180;-1:-1:-1;1343:180:11:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:11;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:11:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:186::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:52;;;2816:1;2813;2806:12;2768:52;2839:29;2858:9;2839:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:11;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;5156:470::-;5335:3;5373:6;5367:13;5389:53;5435:6;5430:3;5423:4;5415:6;5411:17;5389:53;:::i;:::-;5505:13;;5464:16;;;;5527:57;5505:13;5464:16;5561:4;5549:17;;5527:57;:::i;:::-;5600:20;;5156:470;-1:-1:-1;;;;5156:470:11:o;5631:489::-;-1:-1:-1;;;;;5900:15:11;;;5882:34;;5952:15;;5947:2;5932:18;;5925:43;5999:2;5984:18;;5977:34;;;6047:3;6042:2;6027:18;;6020:31;;;5825:4;;6068:46;;6094:19;;6086:6;6068:46;:::i;:::-;6060:54;5631:489;-1:-1:-1;;;;;;5631:489:11:o;6125:249::-;6194:6;6247:2;6235:9;6226:7;6222:23;6218:32;6215:52;;;6263:1;6260;6253:12;6215:52;6295:9;6289:16;6314:30;6338:5;6314:30;:::i;6379:127::-;6440:10;6435:3;6431:20;6428:1;6421:31;6471:4;6468:1;6461:15;6495:4;6492:1;6485:15;6511:135;6550:3;6571:17;;;6568:43;;6591:18;;:::i;:::-;-1:-1:-1;6638:1:11;6627:13;;6511:135::o;6651:127::-;6712:10;6707:3;6703:20;6700:1;6693:31;6743:4;6740:1;6733:15;6767:4;6764:1;6757:15;6783:120;6823:1;6849;6839:35;;6854:18;;:::i;:::-;-1:-1:-1;6888:9:11;;6783:120::o;6908:125::-;6948:4;6976:1;6973;6970:8;6967:34;;;6981:18;;:::i;:::-;-1:-1:-1;7018:9:11;;6908:125::o;7038:112::-;7070:1;7096;7086:35;;7101:18;;:::i;:::-;-1:-1:-1;7135:9:11;;7038:112::o;7155:128::-;7195:3;7226:1;7222:6;7219:1;7216:13;7213:39;;;7232:18;;:::i;:::-;-1:-1:-1;7268:9:11;;7155:128::o;7288:127::-;7349:10;7344:3;7340:20;7337:1;7330:31;7380:4;7377:1;7370:15;7404:4;7401:1;7394:15",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}.Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    1708,
    21852
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x487 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x27C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xE6A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x426 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x250FDEE3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3D2 JUMPI POP PUSH2 0x3D0 DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH2 0x638 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH2 0x694 JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x52B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x431 DUP3 PUSH2 0x8A9 JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xE6A JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06307DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x536 DUP5 DUP5 DUP5 PUSH2 0x694 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO ISZERO DUP1 ISZERO PUSH2 0x558 JUMPI POP PUSH2 0x556 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9C5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x587 DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BB PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x5DB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x606 JUMP JUMPDEST DUP1 PUSH2 0x5E5 DUP5 PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F6 SWAP3 SWAP2 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69F DUP3 PUSH2 0x8A9 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6CD JUMPI POP DUP2 MLOAD PUSH2 0x6CD SWAP1 CALLER PUSH2 0x21D JUMP JUMPDEST DUP1 PUSH2 0x6E8 JUMPI POP CALLER PUSH2 0x6DD DUP5 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x774 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD DUP5 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SSTORE DUP10 DUP7 MSTORE PUSH1 0x4 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA0 SHL TIMESTAMP SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP3 SSTORE SWAP1 DUP7 ADD DUP1 DUP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x860 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x860 JUMPI DUP3 MLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x9AC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x9AA JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x940 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO PUSH2 0x9A5 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9FA SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA35 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA32 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA93 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xAD8 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB02 JUMPI DUP1 PUSH2 0xAEC DUP2 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0xAFB SWAP1 POP PUSH1 0xA DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB1D JUMPI PUSH2 0xB1D PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB47 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xAA9 JUMPI PUSH2 0xB5C PUSH1 0x1 DUP4 PUSH2 0xF86 JUMP JUMPDEST SWAP2 POP PUSH2 0xB69 PUSH1 0xA DUP7 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xB74 SWAP1 PUSH1 0x30 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB89 JUMPI PUSH2 0xB89 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xBAB PUSH1 0xA DUP7 PUSH2 0xF72 JUMP JUMPDEST SWAP5 POP PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x606 DUP2 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC03 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBEB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x576 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xC2C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x606 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA4 DUP4 PUSH2 0xC6C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCD0 DUP5 PUSH2 0xC6C JUMP JUMPDEST SWAP3 POP PUSH2 0xCDE PUSH1 0x20 DUP6 ADD PUSH2 0xC6C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x606 DUP3 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD25 DUP4 PUSH2 0xC6C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7A DUP6 PUSH2 0xC6C JUMP JUMPDEST SWAP4 POP PUSH2 0xD88 PUSH1 0x20 DUP7 ADD PUSH2 0xC6C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDD2 JUMPI PUSH2 0xDD2 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xDFA JUMPI PUSH2 0xDFA PUSH2 0xD45 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE53 DUP4 PUSH2 0xC6C JUMP JUMPDEST SWAP2 POP PUSH2 0xE61 PUSH1 0x20 DUP5 ADD PUSH2 0xC6C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE7E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE9E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xEB6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xBE8 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xECA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xBE8 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF06 SWAP1 DUP4 ADD DUP5 PUSH2 0xC14 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x606 DUP2 PUSH2 0xBB2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF55 JUMPI PUSH2 0xF55 PUSH2 0xF2D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF81 JUMPI PUSH2 0xF81 PUSH2 0xF5C JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF98 JUMPI PUSH2 0xF98 PUSH2 0xF2D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFAC JUMPI PUSH2 0xFAC PUSH2 0xF5C JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFC4 JUMPI PUSH2 0xFC4 PUSH2 0xF2D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0x2C SWAP2 DUP10 0xBD MLOAD LT EXTCODEHASH PUSH13 0x66A1E50F357E130E164085C55F 0xDD 0xC5 PUSH32 0x874716FAAC76CC64736F6C634300080D00330000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D6"
    },
    "64": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E9"
    },
    "75": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FC"
    },
    "86": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20F"
    },
    "97": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "101": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "REVERT",
      "path": "10"
    },
    "102": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "103": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "104": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A8"
    },
    "113": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BB"
    },
    "124": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CE"
    },
    "135": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "139": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "REVERT",
      "path": "10"
    },
    "140": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "141": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "142": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "147": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "GT",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "152": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "153": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "158": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x157"
    },
    "162": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "164": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16C"
    },
    "173": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "175": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x182"
    },
    "184": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x42842E0E"
    },
    "191": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x195"
    },
    "195": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "199": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "REVERT",
      "path": "10"
    },
    "200": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "201": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "202": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1FFC9A7"
    },
    "207": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "212": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "213": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6FDDE03"
    },
    "218": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x117"
    },
    "222": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "223": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "224": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x81812FC"
    },
    "229": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "EQ",
      "path": "10"
    },
    "230": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12C"
    },
    "233": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "234": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "235": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "DUP1",
      "path": "10"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1708,
        21852
      ],
      "op": "REVERT",
      "path": "10"
    },
    "239": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "240": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x102"
    },
    "243": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFD"
    },
    "246": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "247": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "249": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBCB"
    },
    "252": {
      "fn": "ERC721A.supportsInterface",
      "jump": "i",
      "offset": [
        4843,
        5143
      ],
      "op": "JUMP",
      "path": "10"
    },
    "253": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "254": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24B"
    },
    "257": {
      "fn": "ERC721A.supportsInterface",
      "jump": "i",
      "offset": [
        4843,
        5143
      ],
      "op": "JUMP",
      "path": "10"
    },
    "258": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "259": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "261": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "262": {
      "op": "SWAP1"
    },
    "263": {
      "op": "ISZERO"
    },
    "264": {
      "op": "ISZERO"
    },
    "265": {
      "op": "DUP2"
    },
    "266": {
      "op": "MSTORE"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "269": {
      "op": "ADD"
    },
    "270": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "271": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "273": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "274": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "DUP1",
      "path": "10"
    },
    "275": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "276": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "SUB",
      "path": "10"
    },
    "277": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "278": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "RETURN",
      "path": "10"
    },
    "279": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "280": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F"
    },
    "283": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29D"
    },
    "286": {
      "fn": "ERC721A.name",
      "jump": "i",
      "offset": [
        8139,
        8237
      ],
      "op": "JUMP",
      "path": "10"
    },
    "287": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "288": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "290": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "291": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10E"
    },
    "294": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "295": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "296": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC40"
    },
    "299": {
      "fn": "ERC721A.name",
      "jump": "i",
      "offset": [
        8139,
        8237
      ],
      "op": "JUMP",
      "path": "10"
    },
    "300": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "301": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13F"
    },
    "304": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13A"
    },
    "307": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "308": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "310": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC53"
    },
    "313": {
      "fn": "ERC721A.getApproved",
      "jump": "i",
      "offset": [
        9595,
        9795
      ],
      "op": "JUMP",
      "path": "10"
    },
    "314": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "315": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32F"
    },
    "318": {
      "fn": "ERC721A.getApproved",
      "jump": "i",
      "offset": [
        9595,
        9795
      ],
      "op": "JUMP",
      "path": "10"
    },
    "319": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "320": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "322": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "op": "SWAP1"
    },
    "332": {
      "op": "SWAP2"
    },
    "333": {
      "op": "AND"
    },
    "334": {
      "op": "DUP2"
    },
    "335": {
      "op": "MSTORE"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "338": {
      "op": "ADD"
    },
    "339": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10E"
    },
    "342": {
      "op": "JUMP"
    },
    "343": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "344": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "347": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x165"
    },
    "350": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "351": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "353": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC88"
    },
    "356": {
      "fn": "ERC721A.approve",
      "jump": "i",
      "offset": [
        9172,
        9534
      ],
      "op": "JUMP",
      "path": "10"
    },
    "357": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "358": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x373"
    },
    "361": {
      "fn": "ERC721A.approve",
      "jump": "i",
      "offset": [
        9172,
        9534
      ],
      "op": "JUMP",
      "path": "10"
    },
    "362": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "363": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "STOP",
      "path": "10"
    },
    "364": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4114,
        4411
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "365": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4364,
        4376
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x1"
    },
    "367": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4364,
        4376
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "368": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4158,
        4165
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "370": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4348,
        4361
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "371": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4348,
        4376
      ],
      "op": "SUB",
      "path": "10"
    },
    "372": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4114,
        4411
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "373": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4114,
        4411
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "375": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4114,
        4411
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "376": {
      "op": "SWAP1"
    },
    "377": {
      "op": "DUP2"
    },
    "378": {
      "op": "MSTORE"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "381": {
      "op": "ADD"
    },
    "382": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        4114,
        4411
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10E"
    },
    "385": {
      "op": "JUMP"
    },
    "386": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "387": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "390": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x190"
    },
    "393": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "394": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "396": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCB2"
    },
    "399": {
      "fn": "ERC721A.transferFrom",
      "jump": "i",
      "offset": [
        10438,
        10602
      ],
      "op": "JUMP",
      "path": "10"
    },
    "400": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "401": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x400"
    },
    "404": {
      "fn": "ERC721A.transferFrom",
      "jump": "i",
      "offset": [
        10438,
        10602
      ],
      "op": "JUMP",
      "path": "10"
    },
    "405": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "406": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "409": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A3"
    },
    "412": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "413": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "415": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCB2"
    },
    "418": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        10668,
        10847
      ],
      "op": "JUMP",
      "path": "10"
    },
    "419": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "420": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x40B"
    },
    "423": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        10668,
        10847
      ],
      "op": "JUMP",
      "path": "10"
    },
    "424": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "425": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13F"
    },
    "428": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B6"
    },
    "431": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "432": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "434": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC53"
    },
    "437": {
      "fn": "ERC721A.ownerOf",
      "jump": "i",
      "offset": [
        7955,
        8077
      ],
      "op": "JUMP",
      "path": "10"
    },
    "438": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "439": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x426"
    },
    "442": {
      "fn": "ERC721A.ownerOf",
      "jump": "i",
      "offset": [
        7955,
        8077
      ],
      "op": "JUMP",
      "path": "10"
    },
    "443": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "444": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x174"
    },
    "447": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C9"
    },
    "450": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "451": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "453": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCEE"
    },
    "456": {
      "fn": "ERC721A.balanceOf",
      "jump": "i",
      "offset": [
        5202,
        5405
      ],
      "op": "JUMP",
      "path": "10"
    },
    "457": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "458": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x438"
    },
    "461": {
      "fn": "ERC721A.balanceOf",
      "jump": "i",
      "offset": [
        5202,
        5405
      ],
      "op": "JUMP",
      "path": "10"
    },
    "462": {
      "fn": "ERC721A.symbol",
      "offset": [
        8301,
        8403
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "463": {
      "fn": "ERC721A.symbol",
      "offset": [
        8301,
        8403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F"
    },
    "466": {
      "fn": "ERC721A.symbol",
      "offset": [
        8301,
        8403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x487"
    },
    "469": {
      "fn": "ERC721A.symbol",
      "jump": "i",
      "offset": [
        8301,
        8403
      ],
      "op": "JUMP",
      "path": "10"
    },
    "470": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "471": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "474": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E4"
    },
    "477": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "478": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "480": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD09"
    },
    "483": {
      "fn": "ERC721A.setApprovalForAll",
      "jump": "i",
      "offset": [
        9862,
        10148
      ],
      "op": "JUMP",
      "path": "10"
    },
    "484": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "485": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x496"
    },
    "488": {
      "fn": "ERC721A.setApprovalForAll",
      "jump": "i",
      "offset": [
        9862,
        10148
      ],
      "op": "JUMP",
      "path": "10"
    },
    "489": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "490": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "493": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F7"
    },
    "496": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "497": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "499": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD5B"
    },
    "502": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        10913,
        11272
      ],
      "op": "JUMP",
      "path": "10"
    },
    "503": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "504": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52B"
    },
    "507": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        10913,
        11272
      ],
      "op": "JUMP",
      "path": "10"
    },
    "508": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "509": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11F"
    },
    "512": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20A"
    },
    "515": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "516": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "518": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC53"
    },
    "521": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        8469,
        8782
      ],
      "op": "JUMP",
      "path": "10"
    },
    "522": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "523": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x57C"
    },
    "526": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        8469,
        8782
      ],
      "op": "JUMP",
      "path": "10"
    },
    "527": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "528": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x102"
    },
    "531": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21D"
    },
    "534": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "535": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "537": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE37"
    },
    "540": {
      "fn": "ERC721A.isApprovedForAll",
      "jump": "i",
      "offset": [
        10214,
        10376
      ],
      "op": "JUMP",
      "path": "10"
    },
    "541": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "548": {
      "op": "SHL"
    },
    "549": {
      "op": "SUB"
    },
    "550": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 1
    },
    "551": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "DUP3",
      "path": "10"
    },
    "552": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "AND",
      "path": "10"
    },
    "553": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10311,
        10315
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "555": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "556": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "DUP2",
      "path": "10"
    },
    "557": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "558": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10352
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "560": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "562": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "563": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "DUP2",
      "path": "10"
    },
    "564": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "565": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "567": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "DUP1",
      "path": "10"
    },
    "568": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "DUP4",
      "path": "10"
    },
    "569": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10359
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "570": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "571": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "572": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "573": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "AND",
      "path": "10"
    },
    "574": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "DUP3",
      "path": "10"
    },
    "575": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "576": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "577": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "578": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "579": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "580": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "581": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "582": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "584": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "AND",
      "path": "10"
    },
    "585": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10334,
        10369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "586": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "JUMP",
      "path": "10"
    },
    "587": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "588": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4945,
        4949
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "596": {
      "op": "SHL"
    },
    "597": {
      "op": "SUB"
    },
    "598": {
      "op": "NOT"
    },
    "599": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5020
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 2
    },
    "600": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5020
      ],
      "op": "AND",
      "path": "10"
    },
    "601": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "608": {
      "op": "SHL"
    },
    "609": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5020
      ],
      "op": "EQ",
      "path": "10"
    },
    "610": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5020
      ],
      "op": "DUP1",
      "path": "10"
    },
    "611": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5084
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27C"
    },
    "614": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5084
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "615": {
      "op": "POP"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        5036,
        5084
      ],
      "op": "DUP3",
      "path": "10"
    },
    "626": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        5036,
        5084
      ],
      "op": "AND",
      "path": "10"
    },
    "627": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        5036,
        5084
      ],
      "op": "EQ",
      "path": "10"
    },
    "636": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5084
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "637": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5136
      ],
      "op": "DUP1",
      "path": "10"
    },
    "638": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5136
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x297"
    },
    "641": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4980,
        5136
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "op": "SUB"
    },
    "659": {
      "op": "NOT"
    },
    "660": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 3
    },
    "661": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "7"
    },
    "662": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "7"
    },
    "663": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        5100,
        5136
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "664": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4961,
        5136
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "665": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4843,
        5143
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "666": {
      "op": "POP"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "fn": "ERC721A.supportsInterface",
      "jump": "o",
      "offset": [
        4843,
        5143
      ],
      "op": "JUMP",
      "path": "10"
    },
    "669": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "670": {
      "fn": "ERC721A.name",
      "offset": [
        8193,
        8206
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "672": {
      "fn": "ERC721A.name",
      "offset": [
        8225,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x2"
    },
    "674": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "675": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "676": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AC"
    },
    "679": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "680": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6A"
    },
    "683": {
      "fn": "ERC721A.name",
      "jump": "i",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMP",
      "path": "10"
    },
    "684": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "685": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "686": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "688": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "689": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "691": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "692": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "693": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DIV",
      "path": "10"
    },
    "694": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "MUL",
      "path": "10"
    },
    "695": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "697": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "698": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "700": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "701": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "702": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP2",
      "path": "10"
    },
    "703": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "704": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "706": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "707": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "708": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "709": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "710": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "711": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP2",
      "path": "10"
    },
    "712": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP2",
      "path": "10"
    },
    "713": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "714": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "716": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "717": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP3",
      "path": "10"
    },
    "718": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "719": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "720": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D8"
    },
    "723": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "724": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6A"
    },
    "727": {
      "fn": "ERC721A.name",
      "jump": "i",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMP",
      "path": "10"
    },
    "728": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "729": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "730": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "731": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x325"
    },
    "734": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "735": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "736": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "738": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "LT",
      "path": "10"
    },
    "739": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FA"
    },
    "742": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "743": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "746": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "747": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP4",
      "path": "10"
    },
    "748": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "749": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DIV",
      "path": "10"
    },
    "750": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "MUL",
      "path": "10"
    },
    "751": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP4",
      "path": "10"
    },
    "752": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "753": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "754": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "756": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "757": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "758": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x325"
    },
    "761": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMP",
      "path": "10"
    },
    "762": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "763": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP3",
      "path": "10"
    },
    "764": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "765": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "766": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "767": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "769": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "770": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "772": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "774": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "775": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "776": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "777": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP2",
      "path": "10"
    },
    "778": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "779": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP2",
      "path": "10"
    },
    "780": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "781": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "782": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "784": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "785": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "786": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "788": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "789": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP1",
      "path": "10"
    },
    "790": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP4",
      "path": "10"
    },
    "791": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "GT",
      "path": "10"
    },
    "792": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x308"
    },
    "795": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "796": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP3",
      "path": "10"
    },
    "797": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "798": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SUB",
      "path": "10"
    },
    "799": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "801": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "AND",
      "path": "10"
    },
    "802": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "DUP3",
      "path": "10"
    },
    "803": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "10"
    },
    "804": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "805": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "806": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "POP",
      "path": "10"
    },
    "807": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "POP",
      "path": "10"
    },
    "808": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "POP",
      "path": "10"
    },
    "809": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "POP",
      "path": "10"
    },
    "810": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "POP",
      "path": "10"
    },
    "811": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "812": {
      "fn": "ERC721A.name",
      "offset": [
        8218,
        8230
      ],
      "op": "POP",
      "path": "10"
    },
    "813": {
      "fn": "ERC721A.name",
      "offset": [
        8139,
        8237
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "814": {
      "fn": "ERC721A.name",
      "jump": "o",
      "offset": [
        8139,
        8237
      ],
      "op": "JUMP",
      "path": "10"
    },
    "815": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9595,
        9795
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "816": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9663,
        9670
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "818": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9687,
        9703
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 5,
      "value": "0x33A"
    },
    "821": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9695,
        9702
      ],
      "op": "DUP3",
      "path": "10"
    },
    "822": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9687,
        9694
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x60D"
    },
    "825": {
      "fn": "ERC721A.getApproved",
      "jump": "i",
      "offset": [
        9687,
        9703
      ],
      "op": "JUMP",
      "path": "10"
    },
    "826": {
      "branch": 52,
      "fn": "ERC721A.getApproved",
      "offset": [
        9687,
        9703
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "827": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9682,
        9746
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x357"
    },
    "830": {
      "branch": 52,
      "fn": "ERC721A.getApproved",
      "offset": [
        9682,
        9746
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "831": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "833": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "834": {
      "op": "PUSH4",
      "value": "0x33D1C039"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "DUP2",
      "path": "10"
    },
    "843": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "844": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "846": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "ADD",
      "path": "10"
    },
    "847": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "849": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "850": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "DUP1",
      "path": "10"
    },
    "851": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "852": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "SUB",
      "path": "10"
    },
    "853": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "854": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9712,
        9746
      ],
      "op": "REVERT",
      "path": "10"
    },
    "855": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9682,
        9746
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "856": {
      "op": "POP"
    },
    "857": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 6,
      "value": "0x0"
    },
    "859": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "860": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "DUP2",
      "path": "10"
    },
    "861": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "862": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9779
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "864": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "866": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "867": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "869": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "870": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "871": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "op": "SUB"
    },
    "880": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "AND",
      "path": "10"
    },
    "881": {
      "fn": "ERC721A.getApproved",
      "offset": [
        9764,
        9788
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "882": {
      "fn": "ERC721A.getApproved",
      "jump": "o",
      "offset": [
        9595,
        9795
      ],
      "op": "JUMP",
      "path": "10"
    },
    "883": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "884": {
      "fn": "ERC721A.approve",
      "offset": [
        9244,
        9257
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "886": {
      "fn": "ERC721A.approve",
      "offset": [
        9260,
        9284
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37E"
    },
    "889": {
      "fn": "ERC721A.approve",
      "offset": [
        9276,
        9283
      ],
      "op": "DUP3",
      "path": "10"
    },
    "890": {
      "fn": "ERC721A.approve",
      "offset": [
        9260,
        9275
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x426"
    },
    "893": {
      "fn": "ERC721A.approve",
      "jump": "i",
      "offset": [
        9260,
        9284
      ],
      "op": "JUMP",
      "path": "10"
    },
    "894": {
      "fn": "ERC721A.approve",
      "offset": [
        9260,
        9284
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "895": {
      "fn": "ERC721A.approve",
      "offset": [
        9244,
        9284
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "896": {
      "fn": "ERC721A.approve",
      "offset": [
        9244,
        9284
      ],
      "op": "POP",
      "path": "10"
    },
    "897": {
      "fn": "ERC721A.approve",
      "offset": [
        9304,
        9309
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 7
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "SUB"
    },
    "906": {
      "fn": "ERC721A.approve",
      "offset": [
        9298,
        9309
      ],
      "op": "AND",
      "path": "10"
    },
    "907": {
      "fn": "ERC721A.approve",
      "offset": [
        9298,
        9300
      ],
      "op": "DUP4",
      "path": "10"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "SUB"
    },
    "916": {
      "fn": "ERC721A.approve",
      "offset": [
        9298,
        9309
      ],
      "op": "AND",
      "path": "10"
    },
    "917": {
      "branch": 53,
      "fn": "ERC721A.approve",
      "offset": [
        9298,
        9309
      ],
      "op": "SUB",
      "path": "10"
    },
    "918": {
      "fn": "ERC721A.approve",
      "offset": [
        9294,
        9342
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B2"
    },
    "921": {
      "branch": 53,
      "fn": "ERC721A.approve",
      "offset": [
        9294,
        9342
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "922": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "924": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "925": {
      "op": "PUSH4",
      "value": "0x250FDEE3"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "DUP2",
      "path": "10"
    },
    "934": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "935": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "937": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "ADD",
      "path": "10"
    },
    "938": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "940": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "941": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "DUP1",
      "path": "10"
    },
    "942": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "943": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "SUB",
      "path": "10"
    },
    "944": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "945": {
      "fn": "ERC721A.approve",
      "offset": [
        9318,
        9342
      ],
      "op": "REVERT",
      "path": "10"
    },
    "946": {
      "fn": "ERC721A.approve",
      "offset": [
        9294,
        9342
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "947": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 8
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "op": "SUB"
    },
    "956": {
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9378
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 9
    },
    "957": {
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9378
      ],
      "op": "AND",
      "path": "10"
    },
    "958": {
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9378
      ],
      "op": "EQ",
      "path": "10"
    },
    "959": {
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9378
      ],
      "op": "DUP1",
      "path": "10"
    },
    "960": {
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9378
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "961": {
      "branch": 54,
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9378
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "962": {
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9420
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3D2"
    },
    "965": {
      "branch": 54,
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9420
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "966": {
      "op": "POP"
    },
    "967": {
      "fn": "ERC721A.approve",
      "offset": [
        9383,
        9420
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3D0"
    },
    "970": {
      "fn": "ERC721A.approve",
      "offset": [
        9400,
        9405
      ],
      "op": "DUP2",
      "path": "10"
    },
    "971": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "972": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21D"
    },
    "975": {
      "fn": "ERC721A.isApprovedForAll",
      "jump": "i",
      "offset": [
        10214,
        10376
      ],
      "op": "JUMP",
      "path": "10"
    },
    "976": {
      "branch": 55,
      "fn": "ERC721A.approve",
      "offset": [
        9383,
        9420
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "977": {
      "fn": "ERC721A.approve",
      "offset": [
        9382,
        9420
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "978": {
      "fn": "ERC721A.approve",
      "offset": [
        9357,
        9420
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "979": {
      "fn": "ERC721A.approve",
      "offset": [
        9353,
        9489
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "980": {
      "fn": "ERC721A.approve",
      "offset": [
        9353,
        9489
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F0"
    },
    "983": {
      "branch": 55,
      "fn": "ERC721A.approve",
      "offset": [
        9353,
        9489
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "984": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "986": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "987": {
      "op": "PUSH4",
      "value": "0x67D9DCA1"
    },
    "992": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "994": {
      "op": "SHL"
    },
    "995": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "DUP2",
      "path": "10"
    },
    "996": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "997": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "999": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "ADD",
      "path": "10"
    },
    "1000": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1002": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1003": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1004": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1005": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "SUB",
      "path": "10"
    },
    "1006": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1007": {
      "fn": "ERC721A.approve",
      "offset": [
        9443,
        9478
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1008": {
      "fn": "ERC721A.approve",
      "offset": [
        9353,
        9489
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1009": {
      "fn": "ERC721A.approve",
      "offset": [
        9499,
        9527
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 10,
      "value": "0x3FB"
    },
    "1012": {
      "fn": "ERC721A.approve",
      "offset": [
        9508,
        9510
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1013": {
      "fn": "ERC721A.approve",
      "offset": [
        9512,
        9519
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1014": {
      "fn": "ERC721A.approve",
      "offset": [
        9521,
        9526
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1015": {
      "fn": "ERC721A.approve",
      "offset": [
        9499,
        9507
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x638"
    },
    "1018": {
      "fn": "ERC721A.approve",
      "jump": "i",
      "offset": [
        9499,
        9527
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1019": {
      "fn": "ERC721A.approve",
      "offset": [
        9499,
        9527
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1020": {
      "fn": "ERC721A.approve",
      "offset": [
        9234,
        9534
      ],
      "op": "POP",
      "path": "10"
    },
    "1021": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "POP",
      "path": "10"
    },
    "1022": {
      "fn": "ERC721A.approve",
      "offset": [
        9172,
        9534
      ],
      "op": "POP",
      "path": "10"
    },
    "1023": {
      "fn": "ERC721A.approve",
      "jump": "o",
      "offset": [
        9172,
        9534
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1024": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10438,
        10602
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1025": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10567,
        10595
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 11,
      "value": "0x3FB"
    },
    "1028": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10577,
        10581
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1029": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10583,
        10585
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1030": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10587,
        10594
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1031": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        10567,
        10576
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x694"
    },
    "1034": {
      "fn": "ERC721A.transferFrom",
      "jump": "i",
      "offset": [
        10567,
        10595
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1035": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10668,
        10847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1036": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 12,
      "value": "0x3FB"
    },
    "1039": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10818,
        10822
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1040": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10824,
        10826
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1041": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10828,
        10835
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1042": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1044": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1045": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1046": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1048": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "ADD",
      "path": "10"
    },
    "1049": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1051": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1052": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1053": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1055": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1056": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1057": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10840
      ],
      "op": "POP",
      "path": "10"
    },
    "1058": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10801,
        10817
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52B"
    },
    "1061": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        10801,
        10840
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1062": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1063": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        8019,
        8026
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1065": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        8045,
        8065
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 13,
      "value": "0x431"
    },
    "1068": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        8057,
        8064
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1069": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        8045,
        8056
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A9"
    },
    "1072": {
      "fn": "ERC721A.ownerOf",
      "jump": "i",
      "offset": [
        8045,
        8065
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1073": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        8045,
        8065
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1074": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        8045,
        8070
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1075": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        8045,
        8070
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1076": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        7955,
        8077
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1077": {
      "op": "POP"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "fn": "ERC721A.ownerOf",
      "jump": "o",
      "offset": [
        7955,
        8077
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1080": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5202,
        5405
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1081": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5266,
        5273
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5289,
        5308
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 14
    },
    "1092": {
      "branch": 56,
      "fn": "ERC721A.balanceOf",
      "offset": [
        5289,
        5308
      ],
      "op": "AND",
      "path": "10"
    },
    "1093": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5285,
        5345
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x461"
    },
    "1096": {
      "branch": 56,
      "fn": "ERC721A.balanceOf",
      "offset": [
        5285,
        5345
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1097": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1099": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1100": {
      "op": "PUSH4",
      "value": "0x23D3AD81"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1109": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1110": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1112": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "ADD",
      "path": "10"
    },
    "1113": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1115": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1116": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1117": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1118": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "SUB",
      "path": "10"
    },
    "1119": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1120": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5317,
        5345
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1121": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5285,
        5345
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1122": {
      "op": "POP"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1129": {
      "op": "SHL"
    },
    "1130": {
      "op": "SUB"
    },
    "1131": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "AND",
      "path": "10",
      "statement": 15
    },
    "1132": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1134": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1135": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1136": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1137": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5382
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1139": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1141": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1142": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1144": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1145": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5389
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1146": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5397
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1147": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5397
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1156": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5397
      ],
      "op": "AND",
      "path": "10"
    },
    "1157": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        5370,
        5397
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1158": {
      "fn": "ERC721A.balanceOf",
      "jump": "o",
      "offset": [
        5202,
        5405
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1159": {
      "fn": "ERC721A.symbol",
      "offset": [
        8301,
        8403
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1160": {
      "fn": "ERC721A.symbol",
      "offset": [
        8357,
        8370
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1162": {
      "fn": "ERC721A.symbol",
      "offset": [
        8389,
        8396
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 16,
      "value": "0x3"
    },
    "1164": {
      "fn": "ERC721A.symbol",
      "offset": [
        8382,
        8396
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1165": {
      "fn": "ERC721A.symbol",
      "offset": [
        8382,
        8396
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1166": {
      "fn": "ERC721A.symbol",
      "offset": [
        8382,
        8396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AC"
    },
    "1169": {
      "fn": "ERC721A.symbol",
      "offset": [
        8382,
        8396
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1170": {
      "fn": "ERC721A.symbol",
      "offset": [
        8382,
        8396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE6A"
    },
    "1173": {
      "fn": "ERC721A.symbol",
      "jump": "i",
      "offset": [
        8382,
        8396
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1174": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1175": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1182": {
      "op": "SHL"
    },
    "1183": {
      "op": "SUB"
    },
    "1184": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9964,
        9988
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 17
    },
    "1185": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9964,
        9988
      ],
      "op": "AND",
      "path": "10"
    },
    "1186": {
      "branch": 57,
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9964,
        9988
      ],
      "op": "SUB",
      "path": "10"
    },
    "1187": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9960,
        10014
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4BF"
    },
    "1190": {
      "branch": 57,
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9960,
        10014
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1191": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1193": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1194": {
      "op": "PUSH4",
      "value": "0xB06307DB"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1203": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1204": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1206": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "ADD",
      "path": "10"
    },
    "1207": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1209": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1210": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1211": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1212": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "SUB",
      "path": "10"
    },
    "1213": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1214": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9997,
        10014
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1215": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9960,
        10014
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1217": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 18,
      "value": "0x0"
    },
    "1219": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1220": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1221": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1222": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10043
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1224": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1226": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1227": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1228": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1229": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1231": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1232": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1233": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "op": "SUB"
    },
    "1242": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1243": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "AND",
      "path": "10"
    },
    "1244": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1245": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1246": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1247": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1248": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1249": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1250": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1251": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1252": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1253": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1254": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1255": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1258": {
      "op": "NOT"
    },
    "1259": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "AND",
      "path": "10"
    },
    "1260": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1261": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1262": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1263": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1264": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1265": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "OR",
      "path": "10"
    },
    "1266": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1267": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1268": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1269": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 19
    },
    "1270": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1271": {
      "op": "SWAP1"
    },
    "1272": {
      "op": "DUP2"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1275": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1276": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1277": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1310": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1314": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1315": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1316": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1317": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SUB",
      "path": "10"
    },
    "1318": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1319": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "LOG3",
      "path": "10"
    },
    "1320": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "POP",
      "path": "10"
    },
    "1321": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        9862,
        10148
      ],
      "op": "POP",
      "path": "10"
    },
    "1322": {
      "fn": "ERC721A.setApprovalForAll",
      "jump": "o",
      "offset": [
        9862,
        10148
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1323": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1324": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11074,
        11102
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 20,
      "value": "0x536"
    },
    "1327": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11084,
        11088
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1328": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11090,
        11092
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1329": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11094,
        11101
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1330": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11074,
        11083
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x694"
    },
    "1333": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        11074,
        11102
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1334": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11074,
        11102
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11116,
        11129
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 21
    },
    "1344": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11116,
        11129
      ],
      "op": "AND",
      "path": "10"
    },
    "1345": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1346": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "4",
      "statement": 22
    },
    "1347": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1348": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11116,
        11192
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1349": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11116,
        11192
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1350": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11116,
        11192
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x558"
    },
    "1353": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11116,
        11192
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1354": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11116,
        11192
      ],
      "op": "POP",
      "path": "10"
    },
    "1355": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11136,
        11192
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x556"
    },
    "1358": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11167,
        11171
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1359": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11173,
        11175
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1360": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11177,
        11184
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1361": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11186,
        11191
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1362": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11136,
        11166
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9C5"
    },
    "1365": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        11136,
        11192
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1366": {
      "branch": 58,
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11136,
        11192
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1367": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11135,
        11192
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1368": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11116,
        11192
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1369": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11112,
        11266
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1370": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11112,
        11266
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x576"
    },
    "1373": {
      "branch": 58,
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11112,
        11266
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1374": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1376": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1377": {
      "op": "PUSH4",
      "value": "0x68D2BF6B"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1386": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1387": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1389": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "ADD",
      "path": "10"
    },
    "1390": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1392": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1393": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1394": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1395": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "SUB",
      "path": "10"
    },
    "1396": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1397": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11215,
        11255
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1398": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        11112,
        11266
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1399": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "POP",
      "path": "10"
    },
    "1400": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "POP",
      "path": "10"
    },
    "1401": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "POP",
      "path": "10"
    },
    "1402": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        10913,
        11272
      ],
      "op": "POP",
      "path": "10"
    },
    "1403": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "o",
      "offset": [
        10913,
        11272
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1404": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1405": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8542,
        8555
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1407": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8572,
        8588
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 23,
      "value": "0x587"
    },
    "1410": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8580,
        8587
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1411": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8572,
        8579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x60D"
    },
    "1414": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        8572,
        8588
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1415": {
      "branch": 59,
      "fn": "ERC721A.tokenURI",
      "offset": [
        8572,
        8588
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1416": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8567,
        8626
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5A4"
    },
    "1419": {
      "branch": 59,
      "fn": "ERC721A.tokenURI",
      "offset": [
        8567,
        8626
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1420": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1422": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1423": {
      "op": "PUSH4",
      "value": "0xA14C4B5"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1432": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1433": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1435": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "ADD",
      "path": "10"
    },
    "1436": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1438": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1439": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1440": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1441": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "SUB",
      "path": "10"
    },
    "1442": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1443": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8597,
        8626
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1444": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8567,
        8626
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1445": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8637,
        8658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1447": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8661,
        8671
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5BB"
    },
    "1450": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x40"
    },
    "1452": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1453": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1454": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1456": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1457": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "ADD",
      "path": "10"
    },
    "1458": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1459": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1460": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1463": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1464": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1465": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9099,
        9108
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1466": {
      "fn": "ERC721A._baseURI",
      "offset": [
        9023,
        9115
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1467": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8661,
        8671
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1468": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8637,
        8671
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1469": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8637,
        8671
      ],
      "op": "POP",
      "path": "10"
    },
    "1470": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8694,
        8701
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 25
    },
    "1471": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8709
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1472": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8713,
        8714
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1474": {
      "branch": 60,
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8714
      ],
      "op": "SUB",
      "path": "10"
    },
    "1475": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5DB"
    },
    "1478": {
      "branch": 60,
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1479": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1481": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1482": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1483": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1485": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "ADD",
      "path": "10"
    },
    "1486": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1488": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1489": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1490": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1492": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1493": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1494": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "POP",
      "path": "10"
    },
    "1495": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x606"
    },
    "1498": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1499": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1500": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8741,
        8748
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1501": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8750,
        8768
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5E5"
    },
    "1504": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8750,
        8757
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1505": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8750,
        8766
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAB1"
    },
    "1508": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        8750,
        8768
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1509": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8750,
        8768
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1510": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1512": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1513": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1515": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "ADD",
      "path": "10"
    },
    "1516": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F6"
    },
    "1519": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1520": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1521": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1522": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA4"
    },
    "1525": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        8724,
        8769
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1526": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1527": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1529": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1530": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1532": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1533": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1534": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "SUB",
      "path": "10"
    },
    "1535": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "SUB",
      "path": "10"
    },
    "1536": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1537": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1538": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1539": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1541": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8724,
        8769
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1542": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8688,
        8775
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1543": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8681,
        8775
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1544": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        8469,
        8782
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "op": "POP"
    },
    "1548": {
      "fn": "ERC721A.tokenURI",
      "jump": "o",
      "offset": [
        8469,
        8782
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1549": {
      "fn": "ERC721A._exists",
      "offset": [
        11518,
        11702
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1550": {
      "fn": "ERC721A._exists",
      "offset": [
        11575,
        11579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1552": {
      "fn": "ERC721A._exists",
      "offset": [
        11638,
        11651
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 26
    },
    "1553": {
      "fn": "ERC721A._exists",
      "offset": [
        11638,
        11651
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1554": {
      "fn": "ERC721A._exists",
      "offset": [
        11628,
        11635
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1555": {
      "fn": "ERC721A._exists",
      "offset": [
        11628,
        11651
      ],
      "op": "LT",
      "path": "10"
    },
    "1556": {
      "fn": "ERC721A._exists",
      "offset": [
        11598,
        11695
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1557": {
      "fn": "ERC721A._exists",
      "offset": [
        11598,
        11695
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1558": {
      "fn": "ERC721A._exists",
      "offset": [
        11598,
        11695
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x297"
    },
    "1561": {
      "fn": "ERC721A._exists",
      "offset": [
        11598,
        11695
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "op": "POP"
    },
    "1564": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1566": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1567": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1568": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1569": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11679
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1571": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1573": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1574": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1576": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1577": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11688
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1578": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11695
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1583": {
      "op": "SHL"
    },
    "1584": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11695
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1585": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11695
      ],
      "op": "DIV",
      "path": "10"
    },
    "1586": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11695
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "1588": {
      "fn": "ERC721A._exists",
      "offset": [
        11668,
        11695
      ],
      "op": "AND",
      "path": "10"
    },
    "1589": {
      "fn": "ERC721A._exists",
      "offset": [
        11667,
        11695
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1590": {
      "fn": "ERC721A._exists",
      "offset": [
        11667,
        11695
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1591": {
      "fn": "ERC721A._exists",
      "jump": "o",
      "offset": [
        11518,
        11702
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1592": {
      "fn": "ERC721A._approve",
      "offset": [
        18951,
        19140
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1593": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 27,
      "value": "0x0"
    },
    "1595": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1596": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1597": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1598": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19076
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1600": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1602": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1603": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1605": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1606": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1607": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1608": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1609": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "op": "SUB"
    },
    "1618": {
      "op": "NOT"
    },
    "1619": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "AND",
      "path": "10"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1626": {
      "op": "SHL"
    },
    "1627": {
      "op": "SUB"
    },
    "1628": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1629": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1630": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "AND",
      "path": "10"
    },
    "1631": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1632": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1633": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "OR",
      "path": "10"
    },
    "1634": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1635": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1636": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19090
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1637": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 28
    },
    "1638": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1639": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1640": {
      "fn": "ERC721A._approve",
      "offset": [
        19061,
        19085
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1641": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1642": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1643": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "AND",
      "path": "10"
    },
    "1644": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1645": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1678": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1679": {
      "fn": "ERC721A._approve",
      "offset": [
        19105,
        19133
      ],
      "op": "LOG4",
      "path": "10"
    },
    "1680": {
      "fn": "ERC721A._approve",
      "offset": [
        18951,
        19140
      ],
      "op": "POP",
      "path": "10"
    },
    "1681": {
      "fn": "ERC721A._approve",
      "offset": [
        18951,
        19140
      ],
      "op": "POP",
      "path": "10"
    },
    "1682": {
      "fn": "ERC721A._approve",
      "offset": [
        18951,
        19140
      ],
      "op": "POP",
      "path": "10"
    },
    "1683": {
      "fn": "ERC721A._approve",
      "jump": "o",
      "offset": [
        18951,
        19140
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1684": {
      "fn": "ERC721A._transfer",
      "offset": [
        14540,
        16624
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1685": {
      "fn": "ERC721A._transfer",
      "offset": [
        14667,
        14702
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1687": {
      "fn": "ERC721A._transfer",
      "offset": [
        14705,
        14725
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x69F"
    },
    "1690": {
      "fn": "ERC721A._transfer",
      "offset": [
        14717,
        14724
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1691": {
      "fn": "ERC721A._transfer",
      "offset": [
        14705,
        14716
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A9"
    },
    "1694": {
      "fn": "ERC721A._transfer",
      "jump": "i",
      "offset": [
        14705,
        14725
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1695": {
      "fn": "ERC721A._transfer",
      "offset": [
        14705,
        14725
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1696": {
      "fn": "ERC721A._transfer",
      "offset": [
        14778,
        14796
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1697": {
      "fn": "ERC721A._transfer",
      "offset": [
        14778,
        14796
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1698": {
      "fn": "ERC721A._transfer",
      "offset": [
        14667,
        14725
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1699": {
      "fn": "ERC721A._transfer",
      "offset": [
        14667,
        14725
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "fn": "ERC721A._transfer",
      "offset": [
        14736,
        14758
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1703": {
      "fn": "ERC721A._transfer",
      "offset": [
        14736,
        14758
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1710": {
      "op": "SHL"
    },
    "1711": {
      "op": "SUB"
    },
    "1712": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14796
      ],
      "op": "AND",
      "path": "10"
    },
    "1713": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14796
      ],
      "op": "AND",
      "path": "10"
    },
    "1723": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14796
      ],
      "op": "EQ",
      "path": "10"
    },
    "1724": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14862
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1725": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6CD"
    },
    "1728": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14862
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1729": {
      "op": "POP"
    },
    "1730": {
      "fn": "ERC721A._transfer",
      "offset": [
        14829,
        14847
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1731": {
      "fn": "ERC721A._transfer",
      "offset": [
        14829,
        14847
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1732": {
      "fn": "ERC721A._transfer",
      "offset": [
        14812,
        14862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6CD"
    },
    "1735": {
      "fn": "ERC721A._transfer",
      "offset": [
        14812,
        14862
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1736": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1737": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        10214,
        10376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21D"
    },
    "1740": {
      "fn": "ERC721A.isApprovedForAll",
      "jump": "i",
      "offset": [
        10214,
        10376
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1741": {
      "fn": "ERC721A._transfer",
      "offset": [
        14812,
        14862
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1742": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14914
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1743": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14914
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6E8"
    },
    "1746": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14914
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1747": {
      "op": "POP"
    },
    "1748": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1749": {
      "fn": "ERC721A._transfer",
      "offset": [
        14878,
        14898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6DD"
    },
    "1752": {
      "fn": "ERC721A._transfer",
      "offset": [
        14890,
        14897
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1753": {
      "fn": "ERC721A._transfer",
      "offset": [
        14878,
        14889
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32F"
    },
    "1756": {
      "fn": "ERC721A._transfer",
      "jump": "i",
      "offset": [
        14878,
        14898
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1757": {
      "fn": "ERC721A._transfer",
      "offset": [
        14878,
        14898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1764": {
      "op": "SHL"
    },
    "1765": {
      "op": "SUB"
    },
    "1766": {
      "fn": "ERC721A._transfer",
      "offset": [
        14878,
        14914
      ],
      "op": "AND",
      "path": "10"
    },
    "1767": {
      "fn": "ERC721A._transfer",
      "offset": [
        14878,
        14914
      ],
      "op": "EQ",
      "path": "10"
    },
    "1768": {
      "fn": "ERC721A._transfer",
      "offset": [
        14762,
        14914
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1769": {
      "fn": "ERC721A._transfer",
      "offset": [
        14736,
        14915
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1770": {
      "fn": "ERC721A._transfer",
      "offset": [
        14736,
        14915
      ],
      "op": "POP",
      "path": "10"
    },
    "1771": {
      "branch": 61,
      "fn": "ERC721A._transfer",
      "offset": [
        14931,
        14948
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 29
    },
    "1772": {
      "fn": "ERC721A._transfer",
      "offset": [
        14926,
        14992
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x708"
    },
    "1775": {
      "branch": 61,
      "fn": "ERC721A._transfer",
      "offset": [
        14926,
        14992
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1776": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1778": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1779": {
      "op": "PUSH4",
      "value": "0x2CE44B5F"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1788": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1789": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1791": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "ADD",
      "path": "10"
    },
    "1792": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1794": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1795": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1796": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1797": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "SUB",
      "path": "10"
    },
    "1798": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1799": {
      "fn": "ERC721A._transfer",
      "offset": [
        14957,
        14992
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1800": {
      "fn": "ERC721A._transfer",
      "offset": [
        14926,
        14992
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1801": {
      "fn": "ERC721A._transfer",
      "offset": [
        15028,
        15032
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 30
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "SUB"
    },
    "1810": {
      "fn": "ERC721A._transfer",
      "offset": [
        15006,
        15032
      ],
      "op": "AND",
      "path": "10"
    },
    "1811": {
      "fn": "ERC721A._transfer",
      "offset": [
        15006,
        15019
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1812": {
      "fn": "ERC721A._transfer",
      "offset": [
        15006,
        15024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1814": {
      "fn": "ERC721A._transfer",
      "offset": [
        15006,
        15024
      ],
      "op": "ADD",
      "path": "10"
    },
    "1815": {
      "fn": "ERC721A._transfer",
      "offset": [
        15006,
        15024
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "SUB"
    },
    "1824": {
      "fn": "ERC721A._transfer",
      "offset": [
        15006,
        15032
      ],
      "op": "AND",
      "path": "10"
    },
    "1825": {
      "branch": 62,
      "fn": "ERC721A._transfer",
      "offset": [
        15006,
        15032
      ],
      "op": "EQ",
      "path": "10"
    },
    "1826": {
      "fn": "ERC721A._transfer",
      "offset": [
        15002,
        15069
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x73D"
    },
    "1829": {
      "branch": 62,
      "fn": "ERC721A._transfer",
      "offset": [
        15002,
        15069
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1830": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1832": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1833": {
      "op": "PUSH3",
      "value": "0xA11481"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1841": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1842": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1844": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "ADD",
      "path": "10"
    },
    "1845": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1847": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1848": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1849": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1850": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "SUB",
      "path": "10"
    },
    "1851": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1852": {
      "fn": "ERC721A._transfer",
      "offset": [
        15041,
        15069
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1853": {
      "fn": "ERC721A._transfer",
      "offset": [
        15002,
        15069
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1860": {
      "op": "SHL"
    },
    "1861": {
      "op": "SUB"
    },
    "1862": {
      "fn": "ERC721A._transfer",
      "offset": [
        15083,
        15099
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 31
    },
    "1863": {
      "branch": 63,
      "fn": "ERC721A._transfer",
      "offset": [
        15083,
        15099
      ],
      "op": "AND",
      "path": "10"
    },
    "1864": {
      "fn": "ERC721A._transfer",
      "offset": [
        15079,
        15131
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x764"
    },
    "1867": {
      "branch": 63,
      "fn": "ERC721A._transfer",
      "offset": [
        15079,
        15131
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1868": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1870": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1871": {
      "op": "PUSH4",
      "value": "0x3A954ECD"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1880": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1881": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1883": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "ADD",
      "path": "10"
    },
    "1884": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1886": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1887": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1888": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1889": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "SUB",
      "path": "10"
    },
    "1890": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1891": {
      "fn": "ERC721A._transfer",
      "offset": [
        15108,
        15131
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1892": {
      "fn": "ERC721A._transfer",
      "offset": [
        15079,
        15131
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1893": {
      "fn": "ERC721A._transfer",
      "offset": [
        15247,
        15296
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 32,
      "value": "0x774"
    },
    "1896": {
      "fn": "ERC721A._transfer",
      "offset": [
        15264,
        15265
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1898": {
      "fn": "ERC721A._transfer",
      "offset": [
        15268,
        15275
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1899": {
      "fn": "ERC721A._transfer",
      "offset": [
        15277,
        15290
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1900": {
      "fn": "ERC721A._transfer",
      "offset": [
        15277,
        15295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1902": {
      "fn": "ERC721A._transfer",
      "offset": [
        15277,
        15295
      ],
      "op": "ADD",
      "path": "10"
    },
    "1903": {
      "fn": "ERC721A._transfer",
      "offset": [
        15277,
        15295
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1904": {
      "fn": "ERC721A._transfer",
      "offset": [
        15247,
        15255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x638"
    },
    "1907": {
      "fn": "ERC721A._transfer",
      "jump": "i",
      "offset": [
        15247,
        15296
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1908": {
      "fn": "ERC721A._transfer",
      "offset": [
        15247,
        15296
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 33
    },
    "1918": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1919": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "AND",
      "path": "10"
    },
    "1920": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1922": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1923": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1924": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1925": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15598
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1927": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1929": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1930": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1931": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1932": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1934": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1935": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1936": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15604
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1937": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1938": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1939": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1948": {
      "op": "NOT"
    },
    "1949": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1950": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1951": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "AND",
      "path": "10"
    },
    "1952": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1961": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1962": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1963": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "AND",
      "path": "10"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1966": {
      "op": "NOT"
    },
    "1967": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "ADD",
      "path": "10"
    },
    "1968": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1969": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "AND",
      "path": "10"
    },
    "1970": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "OR",
      "path": "10"
    },
    "1971": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1972": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1973": {
      "fn": "ERC721A._transfer",
      "offset": [
        15586,
        15617
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1974": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "DUP10",
      "path": "10",
      "statement": 34
    },
    "1975": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1976": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "AND",
      "path": "10"
    },
    "1977": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1978": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1979": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1980": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1981": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1982": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15647
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1983": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1984": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1985": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1986": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1987": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "AND",
      "path": "10"
    },
    "1988": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1989": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1990": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "AND",
      "path": "10"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1994": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1995": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "ADD",
      "path": "10"
    },
    "1996": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1997": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "AND",
      "path": "10"
    },
    "1998": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1999": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2000": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2001": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "OR",
      "path": "10"
    },
    "2002": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2003": {
      "fn": "ERC721A._transfer",
      "offset": [
        15631,
        15660
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2004": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "DUP10",
      "path": "10",
      "statement": 35
    },
    "2005": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2006": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2007": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2009": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2010": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2011": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2012": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2013": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2014": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15695
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2015": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15705
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2016": {
      "fn": "ERC721A._transfer",
      "offset": [
        15675,
        15705
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2023": {
      "op": "SHL"
    },
    "2024": {
      "op": "SUB"
    },
    "2025": {
      "op": "NOT"
    },
    "2026": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "AND",
      "path": "10",
      "statement": 36
    },
    "2027": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2028": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2029": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "OR",
      "path": "10"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "fn": "ERC721A._transfer",
      "offset": [
        15764,
        15779
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "2036": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2037": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2038": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "AND",
      "path": "10"
    },
    "2039": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2040": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2041": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2042": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "MUL",
      "path": "10"
    },
    "2043": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "OR",
      "path": "10"
    },
    "2044": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2045": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2046": {
      "fn": "ERC721A._transfer",
      "offset": [
        15719,
        15780
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2047": {
      "fn": "ERC721A._transfer",
      "offset": [
        16050,
        16061
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2048": {
      "fn": "ERC721A._transfer",
      "offset": [
        16050,
        16061
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2049": {
      "fn": "ERC721A._transfer",
      "offset": [
        16050,
        16061
      ],
      "op": "ADD",
      "path": "10"
    },
    "2050": {
      "fn": "ERC721A._transfer",
      "offset": [
        16079,
        16103
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2051": {
      "fn": "ERC721A._transfer",
      "offset": [
        16079,
        16103
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2052": {
      "fn": "ERC721A._transfer",
      "offset": [
        16079,
        16103
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2053": {
      "fn": "ERC721A._transfer",
      "offset": [
        16079,
        16103
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2054": {
      "fn": "ERC721A._transfer",
      "offset": [
        16079,
        16103
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2055": {
      "fn": "ERC721A._transfer",
      "offset": [
        16079,
        16108
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2056": {
      "fn": "ERC721A._transfer",
      "offset": [
        16050,
        16061
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2057": {
      "fn": "ERC721A._transfer",
      "offset": [
        16050,
        16061
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2058": {
      "fn": "ERC721A._transfer",
      "offset": [
        16079,
        16108
      ],
      "op": "AND",
      "path": "10"
    },
    "2059": {
      "fn": "ERC721A._transfer",
      "offset": [
        16075,
        16513
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x860"
    },
    "2062": {
      "fn": "ERC721A._transfer",
      "offset": [
        16075,
        16513
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2063": {
      "fn": "ERC721A._transfer",
      "offset": [
        16301,
        16314
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2065": {
      "fn": "ERC721A._transfer",
      "offset": [
        16301,
        16314
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2066": {
      "fn": "ERC721A._transfer",
      "offset": [
        16287,
        16298
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2067": {
      "branch": 64,
      "fn": "ERC721A._transfer",
      "offset": [
        16287,
        16314
      ],
      "op": "LT",
      "path": "10"
    },
    "2068": {
      "fn": "ERC721A._transfer",
      "offset": [
        16283,
        16499
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2069": {
      "fn": "ERC721A._transfer",
      "offset": [
        16283,
        16499
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x860"
    },
    "2072": {
      "branch": 64,
      "fn": "ERC721A._transfer",
      "offset": [
        16283,
        16499
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2073": {
      "fn": "ERC721A._transfer",
      "offset": [
        16370,
        16388
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 37
    },
    "2074": {
      "fn": "ERC721A._transfer",
      "offset": [
        16370,
        16388
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2075": {
      "fn": "ERC721A._transfer",
      "offset": [
        16370,
        16388
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2077": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2078": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2079": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2080": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16349
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2082": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2084": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2085": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2086": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2087": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2089": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2090": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2091": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16362
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2092": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16388
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2093": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16388
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2094": {
      "fn": "ERC721A._transfer",
      "offset": [
        16452,
        16480
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 38
    },
    "2095": {
      "fn": "ERC721A._transfer",
      "offset": [
        16452,
        16480
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2096": {
      "fn": "ERC721A._transfer",
      "offset": [
        16452,
        16480
      ],
      "op": "ADD",
      "path": "10"
    },
    "2097": {
      "fn": "ERC721A._transfer",
      "offset": [
        16452,
        16480
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2098": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2107": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "AND",
      "path": "10"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "MUL",
      "path": "10"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "SUB"
    },
    "2122": {
      "op": "NOT"
    },
    "2123": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2124": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2125": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "AND",
      "path": "10"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2132": {
      "op": "SHL"
    },
    "2133": {
      "op": "SUB"
    },
    "2134": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16388
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2135": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16388
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2136": {
      "fn": "ERC721A._transfer",
      "offset": [
        16338,
        16388
      ],
      "op": "AND",
      "path": "10"
    },
    "2137": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2138": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2139": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2140": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "OR",
      "path": "10"
    },
    "2141": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "OR",
      "path": "10"
    },
    "2142": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2143": {
      "fn": "ERC721A._transfer",
      "offset": [
        16410,
        16480
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2144": {
      "fn": "ERC721A._transfer",
      "offset": [
        16283,
        16499
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2145": {
      "fn": "ERC721A._transfer",
      "offset": [
        15562,
        16523
      ],
      "op": "POP",
      "path": "10"
    },
    "2146": {
      "fn": "ERC721A._transfer",
      "offset": [
        16557,
        16564
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 39
    },
    "2147": {
      "fn": "ERC721A._transfer",
      "offset": [
        16553,
        16555
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2154": {
      "op": "SHL"
    },
    "2155": {
      "op": "SUB"
    },
    "2156": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "AND",
      "path": "10"
    },
    "2157": {
      "fn": "ERC721A._transfer",
      "offset": [
        16547,
        16551
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2164": {
      "op": "SHL"
    },
    "2165": {
      "op": "SUB"
    },
    "2166": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "AND",
      "path": "10"
    },
    "2167": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2200": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2202": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2203": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2205": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2206": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2207": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2208": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "SUB",
      "path": "10"
    },
    "2209": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2210": {
      "fn": "ERC721A._transfer",
      "offset": [
        16538,
        16565
      ],
      "op": "LOG4",
      "path": "10"
    },
    "2211": {
      "fn": "ERC721A._transfer",
      "offset": [
        14649,
        16624
      ],
      "op": "POP",
      "path": "10"
    },
    "2212": {
      "fn": "ERC721A._transfer",
      "offset": [
        14649,
        16624
      ],
      "op": "POP",
      "path": "10"
    },
    "2213": {
      "fn": "ERC721A._transfer",
      "offset": [
        14540,
        16624
      ],
      "op": "POP",
      "path": "10"
    },
    "2214": {
      "fn": "ERC721A._transfer",
      "offset": [
        14540,
        16624
      ],
      "op": "POP",
      "path": "10"
    },
    "2215": {
      "fn": "ERC721A._transfer",
      "offset": [
        14540,
        16624
      ],
      "op": "POP",
      "path": "10"
    },
    "2216": {
      "fn": "ERC721A._transfer",
      "jump": "o",
      "offset": [
        14540,
        16624
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2217": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6815,
        7898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2220": {
      "op": "DUP1"
    },
    "2221": {
      "op": "MLOAD"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2224": {
      "op": "DUP2"
    },
    "2225": {
      "op": "ADD"
    },
    "2226": {
      "op": "DUP3"
    },
    "2227": {
      "op": "MSTORE"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2230": {
      "op": "DUP1"
    },
    "2231": {
      "op": "DUP3"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2235": {
      "op": "DUP3"
    },
    "2236": {
      "op": "ADD"
    },
    "2237": {
      "op": "DUP2"
    },
    "2238": {
      "op": "SWAP1"
    },
    "2239": {
      "op": "MSTORE"
    },
    "2240": {
      "op": "SWAP2"
    },
    "2241": {
      "op": "DUP2"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "op": "SWAP2"
    },
    "2244": {
      "op": "SWAP1"
    },
    "2245": {
      "op": "SWAP2"
    },
    "2246": {
      "op": "MSTORE"
    },
    "2247": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6924,
        6931
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2248": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7004,
        7017
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2250": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7004,
        7017
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2251": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6997,
        7001
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2252": {
      "branch": 65,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6997,
        7017
      ],
      "op": "LT",
      "path": "10"
    },
    "2253": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6966,
        7834
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2254": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6966,
        7834
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9AC"
    },
    "2257": {
      "branch": 65,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6966,
        7834
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2258": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2260": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2261": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2262": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2263": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7082
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2265": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2267": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2268": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2269": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2270": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2272": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2273": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2274": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2275": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7071,
        7088
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2276": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2277": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2278": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2280": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2281": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "ADD",
      "path": "10"
    },
    "2282": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2283": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2284": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2285": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "SUB"
    },
    "2294": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2295": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "AND",
      "path": "10"
    },
    "2296": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2297": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2302": {
      "op": "SHL"
    },
    "2303": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2304": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DIV",
      "path": "10"
    },
    "2305": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2314": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "AND",
      "path": "10"
    },
    "2315": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2316": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2317": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "ADD",
      "path": "10"
    },
    "2318": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2319": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2320": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2321": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2326": {
      "op": "SHL"
    },
    "2327": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2328": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2329": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DIV",
      "path": "10"
    },
    "2330": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2332": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "AND",
      "path": "10"
    },
    "2333": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2334": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2335": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2336": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2337": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "ADD",
      "path": "10"
    },
    "2338": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2339": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2340": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2341": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7037,
        7088
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2342": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7106,
        7820
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9AA"
    },
    "2345": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7106,
        7820
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2346": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7155,
        7169
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2347": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7155,
        7169
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7155,
        7183
      ],
      "op": "AND",
      "path": "10"
    },
    "2357": {
      "branch": 66,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7155,
        7183
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2358": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7151,
        7250
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x940"
    },
    "2361": {
      "branch": 66,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7151,
        7250
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2362": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7218,
        7227
      ],
      "op": "SWAP4",
      "path": "10",
      "statement": 40
    },
    "2363": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6815,
        7898
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2364": {
      "op": "POP"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "fn": "ERC721A.ownershipOf",
      "jump": "o",
      "offset": [
        6815,
        7898
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2368": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7151,
        7250
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2369": {
      "op": "POP"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2372": {
      "op": "NOT"
    },
    "2373": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7586,
        7592
      ],
      "op": "ADD",
      "path": "10",
      "statement": 41
    },
    "2374": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 42,
      "value": "0x0"
    },
    "2376": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2377": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2378": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2379": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7641
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2381": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2383": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2384": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2385": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2386": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2388": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2389": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2390": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2391": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7630,
        7647
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2392": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2393": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2394": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2396": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2397": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "ADD",
      "path": "10"
    },
    "2398": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2399": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2400": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2401": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2408": {
      "op": "SHL"
    },
    "2409": {
      "op": "SUB"
    },
    "2410": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2411": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "AND",
      "path": "10"
    },
    "2412": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2413": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2414": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2421": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DIV",
      "path": "10"
    },
    "2422": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2431": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "AND",
      "path": "10"
    },
    "2432": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2433": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2434": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "ADD",
      "path": "10"
    },
    "2435": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2436": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2437": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2438": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2445": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DIV",
      "path": "10"
    },
    "2446": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2448": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "AND",
      "path": "10"
    },
    "2449": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2450": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2451": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2452": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2453": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "ADD",
      "path": "10"
    },
    "2454": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2455": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2456": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2457": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7618,
        7647
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2458": {
      "branch": 67,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7677,
        7705
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2459": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7673,
        7780
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9A5"
    },
    "2462": {
      "branch": 67,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7673,
        7780
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2463": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7744,
        7753
      ],
      "op": "SWAP4",
      "path": "10",
      "statement": 43
    },
    "2464": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6815,
        7898
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2465": {
      "op": "POP"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "op": "POP"
    },
    "2468": {
      "fn": "ERC721A.ownershipOf",
      "jump": "o",
      "offset": [
        6815,
        7898
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2469": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7673,
        7780
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2470": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7547,
        7802
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x940"
    },
    "2473": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7547,
        7802
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2474": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7547,
        7802
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2475": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7019,
        7834
      ],
      "op": "POP",
      "path": "10"
    },
    "2476": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        6966,
        7834
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2477": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2479": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2480": {
      "op": "PUSH4",
      "value": "0x6F96CDA1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2489": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2490": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2492": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "ADD",
      "path": "10"
    },
    "2493": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2495": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2496": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2497": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2498": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "SUB",
      "path": "10"
    },
    "2499": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2500": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        7860,
        7891
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2501": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19621,
        20271
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2502": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2504": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2505": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2514": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2515": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19779,
        19783
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2517": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19779,
        19783
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "op": "SUB"
    },
    "2526": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19835
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2527": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19835
      ],
      "op": "AND",
      "path": "10"
    },
    "2528": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19835
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2529": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19835
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x150B7A02"
    },
    "2534": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19835
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2535": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9FA"
    },
    "2538": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2539": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2540": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2541": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19850,
        19854
      ],
      "op": "DUP10",
      "path": "10"
    },
    "2542": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19850,
        19854
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2543": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19856,
        19863
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2544": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19856,
        19863
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2545": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19865,
        19870
      ],
      "op": "DUP9",
      "path": "10"
    },
    "2546": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19865,
        19870
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2547": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2549": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "ADD",
      "path": "10"
    },
    "2550": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xED3"
    },
    "2553": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "jump": "i",
      "offset": [
        19799,
        19871
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2554": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2555": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2557": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2559": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2560": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2561": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2562": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "SUB",
      "path": "10"
    },
    "2563": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2564": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2566": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2567": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "GAS",
      "path": "10"
    },
    "2568": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "CALL",
      "path": "10"
    },
    "2569": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2570": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "POP",
      "path": "10"
    },
    "2571": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "POP",
      "path": "10"
    },
    "2572": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "POP",
      "path": "10"
    },
    "2573": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2574": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2575": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA35"
    },
    "2578": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2579": {
      "op": "POP"
    },
    "2580": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2582": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2583": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2584": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2586": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2587": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2588": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2589": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "ADD",
      "path": "10"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2592": {
      "op": "NOT"
    },
    "2593": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "AND",
      "path": "10"
    },
    "2594": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2595": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "ADD",
      "path": "10"
    },
    "2596": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2597": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2598": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2599": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA32"
    },
    "2602": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2603": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2604": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "ADD",
      "path": "10"
    },
    "2605": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2606": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF10"
    },
    "2609": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "jump": "i",
      "offset": [
        19799,
        19871
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2610": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2611": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2613": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19799,
        19871
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2614": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA93"
    },
    "2617": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2618": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2619": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2620": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2621": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2622": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA63"
    },
    "2625": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2626": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2628": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2629": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2630": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "POP",
      "path": "10"
    },
    "2631": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2633": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "NOT",
      "path": "10"
    },
    "2634": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "2636": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2637": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "ADD",
      "path": "10"
    },
    "2638": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "AND",
      "path": "10"
    },
    "2639": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2640": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "ADD",
      "path": "10"
    },
    "2641": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2643": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2644": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2645": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2646": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2647": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2648": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2650": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2652": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2653": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "ADD",
      "path": "10"
    },
    "2654": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2655": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA68"
    },
    "2658": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2659": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2660": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2662": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2663": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "POP",
      "path": "10"
    },
    "2664": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2665": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "POP",
      "path": "10"
    },
    "2666": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20030,
        20036
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 44
    },
    "2667": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20030,
        20043
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2668": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20047,
        20048
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2670": {
      "branch": 68,
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20030,
        20048
      ],
      "op": "SUB",
      "path": "10"
    },
    "2671": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20026,
        20255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA8B"
    },
    "2674": {
      "branch": 68,
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20026,
        20255
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2675": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2677": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2678": {
      "op": "PUSH4",
      "value": "0x68D2BF6B"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2685": {
      "op": "SHL"
    },
    "2686": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2687": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2688": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2690": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "ADD",
      "path": "10"
    },
    "2691": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2693": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2694": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2695": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2696": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "SUB",
      "path": "10"
    },
    "2697": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2698": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20075,
        20115
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2699": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20026,
        20255
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2700": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20215,
        20221
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2701": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20209,
        20222
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2702": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20200,
        20206
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2703": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20196,
        20198
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2705": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20192,
        20207
      ],
      "op": "ADD",
      "path": "10"
    },
    "2706": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        20185,
        20223
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2707": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2714": {
      "op": "SHL"
    },
    "2715": {
      "op": "SUB"
    },
    "2716": {
      "op": "NOT"
    },
    "2717": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19917,
        19972
      ],
      "op": "AND",
      "path": "10",
      "statement": 45
    },
    "2718": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2725": {
      "op": "SHL"
    },
    "2726": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19917,
        19972
      ],
      "op": "EQ",
      "path": "10"
    },
    "2727": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19917,
        19972
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19795,
        20265
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2730": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19621,
        20271
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2731": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19621,
        20271
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2732": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19621,
        20271
      ],
      "op": "POP",
      "path": "10"
    },
    "2733": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19621,
        20271
      ],
      "op": "POP",
      "path": "10"
    },
    "2734": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19621,
        20271
      ],
      "op": "POP",
      "path": "10"
    },
    "2735": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "offset": [
        19621,
        20271
      ],
      "op": "POP",
      "path": "10"
    },
    "2736": {
      "fn": "ERC721A._checkContractOnERC721Received",
      "jump": "o",
      "offset": [
        19621,
        20271
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2737": {
      "fn": "Strings.toString",
      "offset": [
        275,
        978
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2738": {
      "fn": "Strings.toString",
      "offset": [
        331,
        344
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2740": {
      "fn": "Strings.toString",
      "offset": [
        548,
        553
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2741": {
      "fn": "Strings.toString",
      "offset": [
        557,
        558
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2743": {
      "branch": 69,
      "fn": "Strings.toString",
      "offset": [
        548,
        558
      ],
      "op": "SUB",
      "path": "6"
    },
    "2744": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD8"
    },
    "2747": {
      "branch": 69,
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 46,
      "value": "0x40"
    },
    "2752": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2753": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2754": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2755": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2756": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "6"
    },
    "2757": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2758": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2759": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2760": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2762": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2763": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2771": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2772": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "6"
    },
    "2773": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2774": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2775": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        275,
        978
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2776": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2777": {
      "fn": "Strings.toString",
      "offset": [
        619,
        624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2778": {
      "fn": "Strings.toString",
      "offset": [
        604,
        616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2780": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2781": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2782": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2783": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB02"
    },
    "2786": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2787": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 47
    },
    "2788": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAEC"
    },
    "2791": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2792": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF43"
    },
    "2795": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        690,
        698
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2796": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2797": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2798": {
      "op": "POP"
    },
    "2799": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 48,
      "value": "0xAFB"
    },
    "2802": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "fn": "Strings.toString",
      "offset": [
        720,
        722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2806": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2807": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF72"
    },
    "2810": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        712,
        722
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2811": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2812": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2813": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "POP",
      "path": "6"
    },
    "2814": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xADC"
    },
    "2817": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2818": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2819": {
      "fn": "Strings.toString",
      "offset": [
        742,
        761
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2821": {
      "fn": "Strings.toString",
      "offset": [
        774,
        780
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2822": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2831": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2832": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "GT",
      "path": "6"
    },
    "2833": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2834": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB1D"
    },
    "2837": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2838": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB1D"
    },
    "2841": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD45"
    },
    "2844": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        764,
        781
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2845": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2846": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2848": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2849": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2850": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2851": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2852": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2853": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2854": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2856": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "2857": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2859": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "NOT",
      "path": "6"
    },
    "2860": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "AND",
      "path": "6"
    },
    "2861": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2863": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "2864": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2865": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "2866": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2868": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2869": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2870": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2871": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB47"
    },
    "2874": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2875": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2877": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "2879": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "2882": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "2884": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "2885": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2886": {
      "op": "POP"
    },
    "2887": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2888": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "POP",
      "path": "6"
    },
    "2889": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "POP",
      "path": "6"
    },
    "2891": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2894": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA9"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 49,
      "value": "0xB5C"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        834,
        835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF86"
    },
    "2907": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        824,
        835
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 50,
      "value": "0xB69"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2916": {
      "fn": "Strings.toString",
      "offset": [
        892,
        897
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF9D"
    },
    "2920": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        892,
        902
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2921": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB74"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        879,
        881
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x30"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFB1"
    },
    "2931": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        879,
        903
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF8"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "SHL",
      "path": "6"
    },
    "2936": {
      "fn": "Strings.toString",
      "offset": [
        849,
        855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2937": {
      "fn": "Strings.toString",
      "offset": [
        856,
        862
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2941": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "LT",
      "path": "6"
    },
    "2942": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB89"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2946": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB89"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFC9"
    },
    "2952": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        849,
        863
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2956": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "6"
    },
    "2957": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "6"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2965": {
      "op": "SHL"
    },
    "2966": {
      "op": "SUB"
    },
    "2967": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "NOT",
      "path": "6"
    },
    "2968": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "AND",
      "path": "6"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "BYTE",
      "path": "6"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "MSTORE8",
      "path": "6"
    },
    "2976": {
      "op": "POP"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 51,
      "value": "0xBAB"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        928,
        930
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF72"
    },
    "2986": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        930
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "POP",
      "path": "6"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB4B"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2994": {
      "op": "JUMPDEST"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3001": {
      "op": "SHL"
    },
    "3002": {
      "op": "SUB"
    },
    "3003": {
      "op": "NOT"
    },
    "3004": {
      "op": "DUP2"
    },
    "3005": {
      "op": "AND"
    },
    "3006": {
      "op": "DUP2"
    },
    "3007": {
      "op": "EQ"
    },
    "3008": {
      "op": "PUSH2",
      "value": "0xBC8"
    },
    "3011": {
      "op": "JUMPI"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3014": {
      "op": "DUP1"
    },
    "3015": {
      "op": "REVERT"
    },
    "3016": {
      "op": "JUMPDEST"
    },
    "3017": {
      "op": "POP"
    },
    "3018": {
      "jump": "o",
      "op": "JUMP"
    },
    "3019": {
      "op": "JUMPDEST"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3024": {
      "op": "DUP3"
    },
    "3025": {
      "op": "DUP5"
    },
    "3026": {
      "op": "SUB"
    },
    "3027": {
      "op": "SLT"
    },
    "3028": {
      "op": "ISZERO"
    },
    "3029": {
      "op": "PUSH2",
      "value": "0xBDD"
    },
    "3032": {
      "op": "JUMPI"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3035": {
      "op": "DUP1"
    },
    "3036": {
      "op": "REVERT"
    },
    "3037": {
      "op": "JUMPDEST"
    },
    "3038": {
      "op": "DUP2"
    },
    "3039": {
      "op": "CALLDATALOAD"
    },
    "3040": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "3043": {
      "op": "DUP2"
    },
    "3044": {
      "op": "PUSH2",
      "value": "0xBB2"
    },
    "3047": {
      "jump": "i",
      "op": "JUMP"
    },
    "3048": {
      "op": "JUMPDEST"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3051": {
      "op": "JUMPDEST"
    },
    "3052": {
      "op": "DUP4"
    },
    "3053": {
      "op": "DUP2"
    },
    "3054": {
      "op": "LT"
    },
    "3055": {
      "op": "ISZERO"
    },
    "3056": {
      "op": "PUSH2",
      "value": "0xC03"
    },
    "3059": {
      "op": "JUMPI"
    },
    "3060": {
      "op": "DUP2"
    },
    "3061": {
      "op": "DUP2"
    },
    "3062": {
      "op": "ADD"
    },
    "3063": {
      "op": "MLOAD"
    },
    "3064": {
      "op": "DUP4"
    },
    "3065": {
      "op": "DUP3"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "op": "PUSH2",
      "value": "0xBEB"
    },
    "3074": {
      "op": "JUMP"
    },
    "3075": {
      "op": "JUMPDEST"
    },
    "3076": {
      "op": "DUP4"
    },
    "3077": {
      "op": "DUP2"
    },
    "3078": {
      "op": "GT"
    },
    "3079": {
      "op": "ISZERO"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0x576"
    },
    "3083": {
      "op": "JUMPI"
    },
    "3084": {
      "op": "POP"
    },
    "3085": {
      "op": "POP"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3088": {
      "op": "SWAP2"
    },
    "3089": {
      "op": "ADD"
    },
    "3090": {
      "op": "MSTORE"
    },
    "3091": {
      "jump": "o",
      "op": "JUMP"
    },
    "3092": {
      "op": "JUMPDEST"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3095": {
      "op": "DUP2"
    },
    "3096": {
      "op": "MLOAD"
    },
    "3097": {
      "op": "DUP1"
    },
    "3098": {
      "op": "DUP5"
    },
    "3099": {
      "op": "MSTORE"
    },
    "3100": {
      "op": "PUSH2",
      "value": "0xC2C"
    },
    "3103": {
      "op": "DUP2"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3106": {
      "op": "DUP7"
    },
    "3107": {
      "op": "ADD"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3110": {
      "op": "DUP7"
    },
    "3111": {
      "op": "ADD"
    },
    "3112": {
      "op": "PUSH2",
      "value": "0xBE8"
    },
    "3115": {
      "jump": "i",
      "op": "JUMP"
    },
    "3116": {
      "op": "JUMPDEST"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3119": {
      "op": "ADD"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3122": {
      "op": "NOT"
    },
    "3123": {
      "op": "AND"
    },
    "3124": {
      "op": "SWAP3"
    },
    "3125": {
      "op": "SWAP1"
    },
    "3126": {
      "op": "SWAP3"
    },
    "3127": {
      "op": "ADD"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3130": {
      "op": "ADD"
    },
    "3131": {
      "op": "SWAP3"
    },
    "3132": {
      "op": "SWAP2"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "jump": "o",
      "op": "JUMP"
    },
    "3136": {
      "op": "JUMPDEST"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3139": {
      "op": "DUP2"
    },
    "3140": {
      "op": "MSTORE"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3143": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3148": {
      "op": "DUP4"
    },
    "3149": {
      "op": "ADD"
    },
    "3150": {
      "op": "DUP5"
    },
    "3151": {
      "op": "PUSH2",
      "value": "0xC14"
    },
    "3154": {
      "jump": "i",
      "op": "JUMP"
    },
    "3155": {
      "op": "JUMPDEST"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3160": {
      "op": "DUP3"
    },
    "3161": {
      "op": "DUP5"
    },
    "3162": {
      "op": "SUB"
    },
    "3163": {
      "op": "SLT"
    },
    "3164": {
      "op": "ISZERO"
    },
    "3165": {
      "op": "PUSH2",
      "value": "0xC65"
    },
    "3168": {
      "op": "JUMPI"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3171": {
      "op": "DUP1"
    },
    "3172": {
      "op": "REVERT"
    },
    "3173": {
      "op": "JUMPDEST"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "op": "CALLDATALOAD"
    },
    "3176": {
      "op": "SWAP2"
    },
    "3177": {
      "op": "SWAP1"
    },
    "3178": {
      "op": "POP"
    },
    "3179": {
      "jump": "o",
      "op": "JUMP"
    },
    "3180": {
      "op": "JUMPDEST"
    },
    "3181": {
      "op": "DUP1"
    },
    "3182": {
      "op": "CALLDATALOAD"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3189": {
      "op": "SHL"
    },
    "3190": {
      "op": "SUB"
    },
    "3191": {
      "op": "DUP2"
    },
    "3192": {
      "op": "AND"
    },
    "3193": {
      "op": "DUP2"
    },
    "3194": {
      "op": "EQ"
    },
    "3195": {
      "op": "PUSH2",
      "value": "0xC83"
    },
    "3198": {
      "op": "JUMPI"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3201": {
      "op": "DUP1"
    },
    "3202": {
      "op": "REVERT"
    },
    "3203": {
      "op": "JUMPDEST"
    },
    "3204": {
      "op": "SWAP2"
    },
    "3205": {
      "op": "SWAP1"
    },
    "3206": {
      "op": "POP"
    },
    "3207": {
      "jump": "o",
      "op": "JUMP"
    },
    "3208": {
      "op": "JUMPDEST"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3211": {
      "op": "DUP1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3214": {
      "op": "DUP4"
    },
    "3215": {
      "op": "DUP6"
    },
    "3216": {
      "op": "SUB"
    },
    "3217": {
      "op": "SLT"
    },
    "3218": {
      "op": "ISZERO"
    },
    "3219": {
      "op": "PUSH2",
      "value": "0xC9B"
    },
    "3222": {
      "op": "JUMPI"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3225": {
      "op": "DUP1"
    },
    "3226": {
      "op": "REVERT"
    },
    "3227": {
      "op": "JUMPDEST"
    },
    "3228": {
      "op": "PUSH2",
      "value": "0xCA4"
    },
    "3231": {
      "op": "DUP4"
    },
    "3232": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3235": {
      "jump": "i",
      "op": "JUMP"
    },
    "3236": {
      "op": "JUMPDEST"
    },
    "3237": {
      "op": "SWAP5"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3240": {
      "op": "SWAP4"
    },
    "3241": {
      "op": "SWAP1"
    },
    "3242": {
      "op": "SWAP4"
    },
    "3243": {
      "op": "ADD"
    },
    "3244": {
      "op": "CALLDATALOAD"
    },
    "3245": {
      "op": "SWAP4"
    },
    "3246": {
      "op": "POP"
    },
    "3247": {
      "op": "POP"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "jump": "o",
      "op": "JUMP"
    },
    "3250": {
      "op": "JUMPDEST"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3253": {
      "op": "DUP1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3258": {
      "op": "DUP5"
    },
    "3259": {
      "op": "DUP7"
    },
    "3260": {
      "op": "SUB"
    },
    "3261": {
      "op": "SLT"
    },
    "3262": {
      "op": "ISZERO"
    },
    "3263": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3266": {
      "op": "JUMPI"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3269": {
      "op": "DUP1"
    },
    "3270": {
      "op": "REVERT"
    },
    "3271": {
      "op": "JUMPDEST"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0xCD0"
    },
    "3275": {
      "op": "DUP5"
    },
    "3276": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3279": {
      "jump": "i",
      "op": "JUMP"
    },
    "3280": {
      "op": "JUMPDEST"
    },
    "3281": {
      "op": "SWAP3"
    },
    "3282": {
      "op": "POP"
    },
    "3283": {
      "op": "PUSH2",
      "value": "0xCDE"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3288": {
      "op": "DUP6"
    },
    "3289": {
      "op": "ADD"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3293": {
      "jump": "i",
      "op": "JUMP"
    },
    "3294": {
      "op": "JUMPDEST"
    },
    "3295": {
      "op": "SWAP2"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3299": {
      "op": "DUP5"
    },
    "3300": {
      "op": "ADD"
    },
    "3301": {
      "op": "CALLDATALOAD"
    },
    "3302": {
      "op": "SWAP1"
    },
    "3303": {
      "op": "POP"
    },
    "3304": {
      "op": "SWAP3"
    },
    "3305": {
      "op": "POP"
    },
    "3306": {
      "op": "SWAP3"
    },
    "3307": {
      "op": "POP"
    },
    "3308": {
      "op": "SWAP3"
    },
    "3309": {
      "jump": "o",
      "op": "JUMP"
    },
    "3310": {
      "op": "JUMPDEST"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3315": {
      "op": "DUP3"
    },
    "3316": {
      "op": "DUP5"
    },
    "3317": {
      "op": "SUB"
    },
    "3318": {
      "op": "SLT"
    },
    "3319": {
      "op": "ISZERO"
    },
    "3320": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3323": {
      "op": "JUMPI"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3326": {
      "op": "DUP1"
    },
    "3327": {
      "op": "REVERT"
    },
    "3328": {
      "op": "JUMPDEST"
    },
    "3329": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "3332": {
      "op": "DUP3"
    },
    "3333": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3336": {
      "jump": "i",
      "op": "JUMP"
    },
    "3337": {
      "op": "JUMPDEST"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3340": {
      "op": "DUP1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3343": {
      "op": "DUP4"
    },
    "3344": {
      "op": "DUP6"
    },
    "3345": {
      "op": "SUB"
    },
    "3346": {
      "op": "SLT"
    },
    "3347": {
      "op": "ISZERO"
    },
    "3348": {
      "op": "PUSH2",
      "value": "0xD1C"
    },
    "3351": {
      "op": "JUMPI"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3354": {
      "op": "DUP1"
    },
    "3355": {
      "op": "REVERT"
    },
    "3356": {
      "op": "JUMPDEST"
    },
    "3357": {
      "op": "PUSH2",
      "value": "0xD25"
    },
    "3360": {
      "op": "DUP4"
    },
    "3361": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3364": {
      "jump": "i",
      "op": "JUMP"
    },
    "3365": {
      "op": "JUMPDEST"
    },
    "3366": {
      "op": "SWAP2"
    },
    "3367": {
      "op": "POP"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3370": {
      "op": "DUP4"
    },
    "3371": {
      "op": "ADD"
    },
    "3372": {
      "op": "CALLDATALOAD"
    },
    "3373": {
      "op": "DUP1"
    },
    "3374": {
      "op": "ISZERO"
    },
    "3375": {
      "op": "ISZERO"
    },
    "3376": {
      "op": "DUP2"
    },
    "3377": {
      "op": "EQ"
    },
    "3378": {
      "op": "PUSH2",
      "value": "0xD3A"
    },
    "3381": {
      "op": "JUMPI"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3384": {
      "op": "DUP1"
    },
    "3385": {
      "op": "REVERT"
    },
    "3386": {
      "op": "JUMPDEST"
    },
    "3387": {
      "op": "DUP1"
    },
    "3388": {
      "op": "SWAP2"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "op": "POP"
    },
    "3391": {
      "op": "SWAP3"
    },
    "3392": {
      "op": "POP"
    },
    "3393": {
      "op": "SWAP3"
    },
    "3394": {
      "op": "SWAP1"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "jump": "o",
      "op": "JUMP"
    },
    "3397": {
      "op": "JUMPDEST"
    },
    "3398": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3405": {
      "op": "SHL"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3408": {
      "op": "MSTORE"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3413": {
      "op": "MSTORE"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3418": {
      "op": "REVERT"
    },
    "3419": {
      "op": "JUMPDEST"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3422": {
      "op": "DUP1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3425": {
      "op": "DUP1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3428": {
      "op": "DUP6"
    },
    "3429": {
      "op": "DUP8"
    },
    "3430": {
      "op": "SUB"
    },
    "3431": {
      "op": "SLT"
    },
    "3432": {
      "op": "ISZERO"
    },
    "3433": {
      "op": "PUSH2",
      "value": "0xD71"
    },
    "3436": {
      "op": "JUMPI"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3439": {
      "op": "DUP1"
    },
    "3440": {
      "op": "REVERT"
    },
    "3441": {
      "op": "JUMPDEST"
    },
    "3442": {
      "op": "PUSH2",
      "value": "0xD7A"
    },
    "3445": {
      "op": "DUP6"
    },
    "3446": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3449": {
      "jump": "i",
      "op": "JUMP"
    },
    "3450": {
      "op": "JUMPDEST"
    },
    "3451": {
      "op": "SWAP4"
    },
    "3452": {
      "op": "POP"
    },
    "3453": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3458": {
      "op": "DUP7"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3463": {
      "jump": "i",
      "op": "JUMP"
    },
    "3464": {
      "op": "JUMPDEST"
    },
    "3465": {
      "op": "SWAP3"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3469": {
      "op": "DUP6"
    },
    "3470": {
      "op": "ADD"
    },
    "3471": {
      "op": "CALLDATALOAD"
    },
    "3472": {
      "op": "SWAP2"
    },
    "3473": {
      "op": "POP"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3476": {
      "op": "DUP6"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "CALLDATALOAD"
    },
    "3479": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3488": {
      "op": "DUP1"
    },
    "3489": {
      "op": "DUP3"
    },
    "3490": {
      "op": "GT"
    },
    "3491": {
      "op": "ISZERO"
    },
    "3492": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "3495": {
      "op": "JUMPI"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3498": {
      "op": "DUP1"
    },
    "3499": {
      "op": "REVERT"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "DUP2"
    },
    "3502": {
      "op": "DUP8"
    },
    "3503": {
      "op": "ADD"
    },
    "3504": {
      "op": "SWAP2"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "op": "DUP8"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3509": {
      "op": "DUP4"
    },
    "3510": {
      "op": "ADD"
    },
    "3511": {
      "op": "SLT"
    },
    "3512": {
      "op": "PUSH2",
      "value": "0xDC0"
    },
    "3515": {
      "op": "JUMPI"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3518": {
      "op": "DUP1"
    },
    "3519": {
      "op": "REVERT"
    },
    "3520": {
      "op": "JUMPDEST"
    },
    "3521": {
      "op": "DUP2"
    },
    "3522": {
      "op": "CALLDATALOAD"
    },
    "3523": {
      "op": "DUP2"
    },
    "3524": {
      "op": "DUP2"
    },
    "3525": {
      "op": "GT"
    },
    "3526": {
      "op": "ISZERO"
    },
    "3527": {
      "op": "PUSH2",
      "value": "0xDD2"
    },
    "3530": {
      "op": "JUMPI"
    },
    "3531": {
      "op": "PUSH2",
      "value": "0xDD2"
    },
    "3534": {
      "op": "PUSH2",
      "value": "0xD45"
    },
    "3537": {
      "jump": "i",
      "op": "JUMP"
    },
    "3538": {
      "op": "JUMPDEST"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3541": {
      "op": "MLOAD"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3544": {
      "op": "DUP3"
    },
    "3545": {
      "op": "ADD"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3548": {
      "op": "NOT"
    },
    "3549": {
      "op": "SWAP1"
    },
    "3550": {
      "op": "DUP2"
    },
    "3551": {
      "op": "AND"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3554": {
      "op": "ADD"
    },
    "3555": {
      "op": "AND"
    },
    "3556": {
      "op": "DUP2"
    },
    "3557": {
      "op": "ADD"
    },
    "3558": {
      "op": "SWAP1"
    },
    "3559": {
      "op": "DUP4"
    },
    "3560": {
      "op": "DUP3"
    },
    "3561": {
      "op": "GT"
    },
    "3562": {
      "op": "DUP2"
    },
    "3563": {
      "op": "DUP4"
    },
    "3564": {
      "op": "LT"
    },
    "3565": {
      "op": "OR"
    },
    "3566": {
      "op": "ISZERO"
    },
    "3567": {
      "op": "PUSH2",
      "value": "0xDFA"
    },
    "3570": {
      "op": "JUMPI"
    },
    "3571": {
      "op": "PUSH2",
      "value": "0xDFA"
    },
    "3574": {
      "op": "PUSH2",
      "value": "0xD45"
    },
    "3577": {
      "jump": "i",
      "op": "JUMP"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "DUP2"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3582": {
      "op": "MSTORE"
    },
    "3583": {
      "op": "DUP3"
    },
    "3584": {
      "op": "DUP2"
    },
    "3585": {
      "op": "MSTORE"
    },
    "3586": {
      "op": "DUP11"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3589": {
      "op": "DUP5"
    },
    "3590": {
      "op": "DUP8"
    },
    "3591": {
      "op": "ADD"
    },
    "3592": {
      "op": "ADD"
    },
    "3593": {
      "op": "GT"
    },
    "3594": {
      "op": "ISZERO"
    },
    "3595": {
      "op": "PUSH2",
      "value": "0xE13"
    },
    "3598": {
      "op": "JUMPI"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3601": {
      "op": "DUP1"
    },
    "3602": {
      "op": "REVERT"
    },
    "3603": {
      "op": "JUMPDEST"
    },
    "3604": {
      "op": "DUP3"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3607": {
      "op": "DUP7"
    },
    "3608": {
      "op": "ADD"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3611": {
      "op": "DUP4"
    },
    "3612": {
      "op": "ADD"
    },
    "3613": {
      "op": "CALLDATACOPY"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3618": {
      "op": "DUP5"
    },
    "3619": {
      "op": "DUP4"
    },
    "3620": {
      "op": "ADD"
    },
    "3621": {
      "op": "ADD"
    },
    "3622": {
      "op": "MSTORE"
    },
    "3623": {
      "op": "DUP1"
    },
    "3624": {
      "op": "SWAP6"
    },
    "3625": {
      "op": "POP"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "op": "POP"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "op": "SWAP3"
    },
    "3632": {
      "op": "SWAP6"
    },
    "3633": {
      "op": "SWAP2"
    },
    "3634": {
      "op": "SWAP5"
    },
    "3635": {
      "op": "POP"
    },
    "3636": {
      "op": "SWAP3"
    },
    "3637": {
      "op": "POP"
    },
    "3638": {
      "jump": "o",
      "op": "JUMP"
    },
    "3639": {
      "op": "JUMPDEST"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3642": {
      "op": "DUP1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3645": {
      "op": "DUP4"
    },
    "3646": {
      "op": "DUP6"
    },
    "3647": {
      "op": "SUB"
    },
    "3648": {
      "op": "SLT"
    },
    "3649": {
      "op": "ISZERO"
    },
    "3650": {
      "op": "PUSH2",
      "value": "0xE4A"
    },
    "3653": {
      "op": "JUMPI"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3656": {
      "op": "DUP1"
    },
    "3657": {
      "op": "REVERT"
    },
    "3658": {
      "op": "JUMPDEST"
    },
    "3659": {
      "op": "PUSH2",
      "value": "0xE53"
    },
    "3662": {
      "op": "DUP4"
    },
    "3663": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3666": {
      "jump": "i",
      "op": "JUMP"
    },
    "3667": {
      "op": "JUMPDEST"
    },
    "3668": {
      "op": "SWAP2"
    },
    "3669": {
      "op": "POP"
    },
    "3670": {
      "op": "PUSH2",
      "value": "0xE61"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3675": {
      "op": "DUP5"
    },
    "3676": {
      "op": "ADD"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xC6C"
    },
    "3680": {
      "jump": "i",
      "op": "JUMP"
    },
    "3681": {
      "op": "JUMPDEST"
    },
    "3682": {
      "op": "SWAP1"
    },
    "3683": {
      "op": "POP"
    },
    "3684": {
      "op": "SWAP3"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "SWAP3"
    },
    "3687": {
      "op": "SWAP1"
    },
    "3688": {
      "op": "POP"
    },
    "3689": {
      "jump": "o",
      "op": "JUMP"
    },
    "3690": {
      "op": "JUMPDEST"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3693": {
      "op": "DUP2"
    },
    "3694": {
      "op": "DUP2"
    },
    "3695": {
      "op": "SHR"
    },
    "3696": {
      "op": "SWAP1"
    },
    "3697": {
      "op": "DUP3"
    },
    "3698": {
      "op": "AND"
    },
    "3699": {
      "op": "DUP1"
    },
    "3700": {
      "op": "PUSH2",
      "value": "0xE7E"
    },
    "3703": {
      "op": "JUMPI"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3706": {
      "op": "DUP3"
    },
    "3707": {
      "op": "AND"
    },
    "3708": {
      "op": "SWAP2"
    },
    "3709": {
      "op": "POP"
    },
    "3710": {
      "op": "JUMPDEST"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3713": {
      "op": "DUP3"
    },
    "3714": {
      "op": "LT"
    },
    "3715": {
      "op": "DUP2"
    },
    "3716": {
      "op": "SUB"
    },
    "3717": {
      "op": "PUSH2",
      "value": "0xE9E"
    },
    "3720": {
      "op": "JUMPI"
    },
    "3721": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3728": {
      "op": "SHL"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3731": {
      "op": "MSTORE"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3741": {
      "op": "REVERT"
    },
    "3742": {
      "op": "JUMPDEST"
    },
    "3743": {
      "op": "POP"
    },
    "3744": {
      "op": "SWAP2"
    },
    "3745": {
      "op": "SWAP1"
    },
    "3746": {
      "op": "POP"
    },
    "3747": {
      "jump": "o",
      "op": "JUMP"
    },
    "3748": {
      "op": "JUMPDEST"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3751": {
      "op": "DUP4"
    },
    "3752": {
      "op": "MLOAD"
    },
    "3753": {
      "op": "PUSH2",
      "value": "0xEB6"
    },
    "3756": {
      "op": "DUP2"
    },
    "3757": {
      "op": "DUP5"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3760": {
      "op": "DUP9"
    },
    "3761": {
      "op": "ADD"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xBE8"
    },
    "3765": {
      "jump": "i",
      "op": "JUMP"
    },
    "3766": {
      "op": "JUMPDEST"
    },
    "3767": {
      "op": "DUP4"
    },
    "3768": {
      "op": "MLOAD"
    },
    "3769": {
      "op": "SWAP1"
    },
    "3770": {
      "op": "DUP4"
    },
    "3771": {
      "op": "ADD"
    },
    "3772": {
      "op": "SWAP1"
    },
    "3773": {
      "op": "PUSH2",
      "value": "0xECA"
    },
    "3776": {
      "op": "DUP2"
    },
    "3777": {
      "op": "DUP4"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3780": {
      "op": "DUP9"
    },
    "3781": {
      "op": "ADD"
    },
    "3782": {
      "op": "PUSH2",
      "value": "0xBE8"
    },
    "3785": {
      "jump": "i",
      "op": "JUMP"
    },
    "3786": {
      "op": "JUMPDEST"
    },
    "3787": {
      "op": "ADD"
    },
    "3788": {
      "op": "SWAP5"
    },
    "3789": {
      "op": "SWAP4"
    },
    "3790": {
      "op": "POP"
    },
    "3791": {
      "op": "POP"
    },
    "3792": {
      "op": "POP"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "jump": "o",
      "op": "JUMP"
    },
    "3795": {
      "op": "JUMPDEST"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3802": {
      "op": "SHL"
    },
    "3803": {
      "op": "SUB"
    },
    "3804": {
      "op": "DUP6"
    },
    "3805": {
      "op": "DUP2"
    },
    "3806": {
      "op": "AND"
    },
    "3807": {
      "op": "DUP3"
    },
    "3808": {
      "op": "MSTORE"
    },
    "3809": {
      "op": "DUP5"
    },
    "3810": {
      "op": "AND"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3813": {
      "op": "DUP3"
    },
    "3814": {
      "op": "ADD"
    },
    "3815": {
      "op": "MSTORE"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3818": {
      "op": "DUP2"
    },
    "3819": {
      "op": "ADD"
    },
    "3820": {
      "op": "DUP4"
    },
    "3821": {
      "op": "SWAP1"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3827": {
      "op": "DUP3"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "DUP2"
    },
    "3830": {
      "op": "SWAP1"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3834": {
      "op": "SWAP1"
    },
    "3835": {
      "op": "PUSH2",
      "value": "0xF06"
    },
    "3838": {
      "op": "SWAP1"
    },
    "3839": {
      "op": "DUP4"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "DUP5"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xC14"
    },
    "3845": {
      "jump": "i",
      "op": "JUMP"
    },
    "3846": {
      "op": "JUMPDEST"
    },
    "3847": {
      "op": "SWAP7"
    },
    "3848": {
      "op": "SWAP6"
    },
    "3849": {
      "op": "POP"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "POP"
    },
    "3852": {
      "op": "POP"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "POP"
    },
    "3855": {
      "jump": "o",
      "op": "JUMP"
    },
    "3856": {
      "op": "JUMPDEST"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3861": {
      "op": "DUP3"
    },
    "3862": {
      "op": "DUP5"
    },
    "3863": {
      "op": "SUB"
    },
    "3864": {
      "op": "SLT"
    },
    "3865": {
      "op": "ISZERO"
    },
    "3866": {
      "op": "PUSH2",
      "value": "0xF22"
    },
    "3869": {
      "op": "JUMPI"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3872": {
      "op": "DUP1"
    },
    "3873": {
      "op": "REVERT"
    },
    "3874": {
      "op": "JUMPDEST"
    },
    "3875": {
      "op": "DUP2"
    },
    "3876": {
      "op": "MLOAD"
    },
    "3877": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "3880": {
      "op": "DUP2"
    },
    "3881": {
      "op": "PUSH2",
      "value": "0xBB2"
    },
    "3884": {
      "jump": "i",
      "op": "JUMP"
    },
    "3885": {
      "op": "JUMPDEST"
    },
    "3886": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3893": {
      "op": "SHL"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3901": {
      "op": "MSTORE"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3906": {
      "op": "REVERT"
    },
    "3907": {
      "op": "JUMPDEST"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3912": {
      "op": "DUP3"
    },
    "3913": {
      "op": "ADD"
    },
    "3914": {
      "op": "PUSH2",
      "value": "0xF55"
    },
    "3917": {
      "op": "JUMPI"
    },
    "3918": {
      "op": "PUSH2",
      "value": "0xF55"
    },
    "3921": {
      "op": "PUSH2",
      "value": "0xF2D"
    },
    "3924": {
      "jump": "i",
      "op": "JUMP"
    },
    "3925": {
      "op": "JUMPDEST"
    },
    "3926": {
      "op": "POP"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "op": "SWAP1"
    },
    "3931": {
      "jump": "o",
      "op": "JUMP"
    },
    "3932": {
      "op": "JUMPDEST"
    },
    "3933": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3940": {
      "op": "SHL"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3943": {
      "op": "MSTORE"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3948": {
      "op": "MSTORE"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3953": {
      "op": "REVERT"
    },
    "3954": {
      "op": "JUMPDEST"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3957": {
      "op": "DUP3"
    },
    "3958": {
      "op": "PUSH2",
      "value": "0xF81"
    },
    "3961": {
      "op": "JUMPI"
    },
    "3962": {
      "op": "PUSH2",
      "value": "0xF81"
    },
    "3965": {
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "3968": {
      "jump": "i",
      "op": "JUMP"
    },
    "3969": {
      "op": "JUMPDEST"
    },
    "3970": {
      "op": "POP"
    },
    "3971": {
      "op": "DIV"
    },
    "3972": {
      "op": "SWAP1"
    },
    "3973": {
      "jump": "o",
      "op": "JUMP"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3977": {
      "op": "DUP3"
    },
    "3978": {
      "op": "DUP3"
    },
    "3979": {
      "op": "LT"
    },
    "3980": {
      "op": "ISZERO"
    },
    "3981": {
      "op": "PUSH2",
      "value": "0xF98"
    },
    "3984": {
      "op": "JUMPI"
    },
    "3985": {
      "op": "PUSH2",
      "value": "0xF98"
    },
    "3988": {
      "op": "PUSH2",
      "value": "0xF2D"
    },
    "3991": {
      "jump": "i",
      "op": "JUMP"
    },
    "3992": {
      "op": "JUMPDEST"
    },
    "3993": {
      "op": "POP"
    },
    "3994": {
      "op": "SUB"
    },
    "3995": {
      "op": "SWAP1"
    },
    "3996": {
      "jump": "o",
      "op": "JUMP"
    },
    "3997": {
      "op": "JUMPDEST"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4000": {
      "op": "DUP3"
    },
    "4001": {
      "op": "PUSH2",
      "value": "0xFAC"
    },
    "4004": {
      "op": "JUMPI"
    },
    "4005": {
      "op": "PUSH2",
      "value": "0xFAC"
    },
    "4008": {
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "4011": {
      "jump": "i",
      "op": "JUMP"
    },
    "4012": {
      "op": "JUMPDEST"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "op": "MOD"
    },
    "4015": {
      "op": "SWAP1"
    },
    "4016": {
      "jump": "o",
      "op": "JUMP"
    },
    "4017": {
      "op": "JUMPDEST"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4020": {
      "op": "DUP3"
    },
    "4021": {
      "op": "NOT"
    },
    "4022": {
      "op": "DUP3"
    },
    "4023": {
      "op": "GT"
    },
    "4024": {
      "op": "ISZERO"
    },
    "4025": {
      "op": "PUSH2",
      "value": "0xFC4"
    },
    "4028": {
      "op": "JUMPI"
    },
    "4029": {
      "op": "PUSH2",
      "value": "0xFC4"
    },
    "4032": {
      "op": "PUSH2",
      "value": "0xF2D"
    },
    "4035": {
      "jump": "i",
      "op": "JUMP"
    },
    "4036": {
      "op": "JUMPDEST"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "op": "ADD"
    },
    "4039": {
      "op": "SWAP1"
    },
    "4040": {
      "jump": "o",
      "op": "JUMP"
    },
    "4041": {
      "op": "JUMPDEST"
    },
    "4042": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4049": {
      "op": "SHL"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4052": {
      "op": "MSTORE"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4057": {
      "op": "MSTORE"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4062": {
      "op": "REVERT"
    }
  },
  "sha1": "3ec84bd235373e996b7efeee91eea752d6aa4b7c",
  "source": "// SPDX-License-Identifier: MIT\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\nimport '@openzeppelin/contracts/utils/Context.sol';\nimport '@openzeppelin/contracts/utils/Strings.sol';\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\n\nerror ApprovalCallerNotOwnerNorApproved();\nerror ApprovalQueryForNonexistentToken();\nerror ApproveToCaller();\nerror ApprovalToCurrentOwner();\nerror BalanceQueryForZeroAddress();\nerror MintedQueryForZeroAddress();\nerror BurnedQueryForZeroAddress();\nerror AuxQueryForZeroAddress();\nerror MintToZeroAddress();\nerror MintZeroQuantity();\nerror OwnerIndexOutOfBounds();\nerror OwnerQueryForNonexistentToken();\nerror TokenIndexOutOfBounds();\nerror TransferCallerNotOwnerNorApproved();\nerror TransferFromIncorrectOwner();\nerror TransferToNonERC721ReceiverImplementer();\nerror TransferToZeroAddress();\nerror URIQueryForNonexistentToken();\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Compiler will pack this into a single 256bit word.\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n    }\n\n    // Compiler will pack this into a single 256bit word.\n    struct AddressData {\n        // Realistically, 2**64-1 is more than enough.\n        uint64 balance;\n        // Keeps track of mint count with minimal overhead for tokenomics.\n        uint64 numberMinted;\n        // Keeps track of burn count with minimal overhead for tokenomics.\n        uint64 numberBurned;\n        // For miscellaneous variable(s) pertaining to the address\n        // (e.g. number of whitelist mint slots used).\n        // If there are multiple variables, please pack them into a uint64.\n        uint64 aux;\n    }\n\n    // The tokenId of the next token to be minted.\n    uint256 internal _currentIndex;\n\n    // The number of tokens burned.\n    uint256 internal _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\n    mapping(uint256 => TokenOwnership) internal _ownerships;\n\n    // Mapping owner address to address data\n    mapping(address => AddressData) private _addressData;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    /**\n     * To change the starting tokenId, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\n     */\n    function totalSupply() public view returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than _currentIndex - _startTokenId() times\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to _startTokenId()\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return uint256(_addressData[owner].balance);\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        if (owner == address(0)) revert MintedQueryForZeroAddress();\n        return uint256(_addressData[owner].numberMinted);\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        if (owner == address(0)) revert BurnedQueryForZeroAddress();\n        return uint256(_addressData[owner].numberBurned);\n    }\n\n    /**\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        if (owner == address(0)) revert AuxQueryForZeroAddress();\n        return _addressData[owner].aux;\n    }\n\n    /**\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        if (owner == address(0)) revert AuxQueryForZeroAddress();\n        _addressData[owner].aux = aux;\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr && curr < _currentIndex) {\n                TokenOwnership memory ownership = _ownerships[curr];\n                if (!ownership.burned) {\n                    if (ownership.addr != address(0)) {\n                        return ownership;\n                    }\n                    // Invariant:\n                    // There will always be an ownership that has an address and is not burned\n                    // before an ownership that does not have an address and is not burned.\n                    // Hence, curr will not underflow.\n                    while (true) {\n                        curr--;\n                        ownership = _ownerships[curr];\n                        if (ownership.addr != address(0)) {\n                            return ownership;\n                        }\n                    }\n                }\n            }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return ownershipOf(tokenId).addr;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ERC721A.ownerOf(tokenId);\n        if (to == owner) revert ApprovalToCurrentOwner();\n\n        if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {\n            revert ApprovalCallerNotOwnerNorApproved();\n        }\n\n        _approve(to, tokenId, owner);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {    \n        if (operator == _msgSender()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        _transfer(from, to, tokenId);\n        if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {\n            revert TransferToNonERC721ReceiverImplementer();\n        }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _startTokenId() <= tokenId && tokenId < _currentIndex &&\n            !_ownerships[tokenId].burned;\n    }\n\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity, _data, true);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(\n        address to,\n        uint256 quantity,\n        bytes memory _data,\n        bool safe\n    ) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\n        unchecked {\n            _addressData[to].balance += uint64(quantity);\n            _addressData[to].numberMinted += uint64(quantity);\n\n            _ownerships[startTokenId].addr = to;\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\n\n            uint256 updatedIndex = startTokenId;\n            uint256 end = updatedIndex + quantity;\n\n            if (safe && to.isContract()) {\n                do {\n                    emit Transfer(address(0), to, updatedIndex);\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (updatedIndex != end);\n                // Reentrancy protection\n                if (_currentIndex != startTokenId) revert();\n            } else {\n                do {\n                    emit Transfer(address(0), to, updatedIndex++);\n                } while (updatedIndex != end);\n            }\n            _currentIndex = updatedIndex;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) virtual internal {        \n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\n\n        bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||\n            isApprovedForAll(prevOwnership.addr, _msgSender()) ||\n            getApproved(tokenId) == _msgSender());\n\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, prevOwnership.addr);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            _addressData[from].balance -= 1;\n            _addressData[to].balance += 1;\n\n            _ownerships[tokenId].addr = to;\n            _ownerships[tokenId].startTimestamp = uint64(block.timestamp);\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            if (_ownerships[nextTokenId].addr == address(0)) {\n                // This will suffice for checking _exists(nextTokenId),\n                // as a burned slot cannot contain the zero address.\n                if (nextTokenId < _currentIndex) {\n                    _ownerships[nextTokenId].addr = prevOwnership.addr;\n                    _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\n\n        _beforeTokenTransfers(prevOwnership.addr, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, prevOwnership.addr);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            _addressData[prevOwnership.addr].balance -= 1;\n            _addressData[prevOwnership.addr].numberBurned += 1;\n\n            // Keep track of who burned the token, and the timestamp of burning.\n            _ownerships[tokenId].addr = prevOwnership.addr;\n            _ownerships[tokenId].startTimestamp = uint64(block.timestamp);\n            _ownerships[tokenId].burned = true;\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            if (_ownerships[nextTokenId].addr == address(0)) {\n                // This will suffice for checking _exists(nextTokenId),\n                // as a burned slot cannot contain the zero address.\n                if (nextTokenId < _currentIndex) {\n                    _ownerships[nextTokenId].addr = prevOwnership.addr;\n                    _ownerships[nextTokenId].startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(prevOwnership.addr, address(0), tokenId);\n        _afterTokenTransfers(prevOwnership.addr, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        address owner\n    ) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n            return retval == IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n     * minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n}",
  "sourceMap": "1708:20144:10:-:0;;;3600:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3666:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3689:17:10;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;3902:7:10;3716:31;;-1:-1:-1;1708:20144:10;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1708:20144:10;;;-1:-1:-1;1708:20144:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:11;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:11;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:11;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:11:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:11;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1708:20144:10;;;;;;",
  "sourcePath": "contracts/standards/ERC721A.sol",
  "type": "contract"
}