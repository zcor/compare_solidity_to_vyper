{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/ERC721.sol",
    "1": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721.sol",
    "2": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721Receiver.sol",
    "3": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "4": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
    "5": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "6": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Strings.sol",
    "7": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/ERC165.sol",
    "8": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        1312
      ],
      "Context": [
        1333
      ],
      "ERC165": [
        1560
      ],
      "ERC721": [
        855
      ],
      "IERC165": [
        1572
      ],
      "IERC721": [
        971
      ],
      "IERC721Metadata": [
        1016
      ],
      "IERC721Receiver": [
        989
      ],
      "Strings": [
        1536
      ]
    },
    "id": 856,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 39,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 40,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 856,
        "sourceUnit": 972,
        "src": "58:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 41,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 856,
        "sourceUnit": 990,
        "src": "82:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 42,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 856,
        "sourceUnit": 1017,
        "src": "114:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 43,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 856,
        "sourceUnit": 1313,
        "src": "157:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 44,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 856,
        "sourceUnit": 1334,
        "src": "191:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 45,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 856,
        "sourceUnit": 1537,
        "src": "225:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 46,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 856,
        "sourceUnit": 1561,
        "src": "259:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1333,
              "src": "573:7:0"
            },
            "id": 49,
            "nodeType": "InheritanceSpecifier",
            "src": "573:7:0"
          },
          {
            "baseName": {
              "id": 50,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1560,
              "src": "582:6:0"
            },
            "id": 51,
            "nodeType": "InheritanceSpecifier",
            "src": "582:6:0"
          },
          {
            "baseName": {
              "id": 52,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 971,
              "src": "590:7:0"
            },
            "id": 53,
            "nodeType": "InheritanceSpecifier",
            "src": "590:7:0"
          },
          {
            "baseName": {
              "id": 54,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1016,
              "src": "599:15:0"
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "599:15:0"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 47,
          "nodeType": "StructuredDocumentation",
          "src": "307:246:0",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 855,
        "linearizedBaseContracts": [
          855,
          1016,
          971,
          1560,
          1572,
          1333
        ],
        "name": "ERC721",
        "nameLocation": "563:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 58,
            "libraryName": {
              "id": 56,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1312,
              "src": "627:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "621:26:0",
            "typeName": {
              "id": 57,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 61,
            "libraryName": {
              "id": 59,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1536,
              "src": "658:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "652:26:0",
            "typeName": {
              "id": 60,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "670:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "717:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 855,
            "src": "702:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 62,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "702:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "764:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 855,
            "src": "749:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 64,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "749:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 69,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "860:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 855,
            "src": "824:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 66,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "832:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "824:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 67,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "843:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 73,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "954:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 855,
            "src": "918:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "926:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "918:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "937:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 77,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1055:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 855,
            "src": "1019:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 76,
              "keyType": {
                "id": 74,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1027:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1019:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1038:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 83,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1178:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 855,
            "src": "1125:71:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 78,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1133:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1125:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 81,
                "keyType": {
                  "id": 79,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1152:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1144:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 80,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1163:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1372:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1382:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "1390:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1382:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:13:0"
                },
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1405:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "1415:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1405:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:17:0"
                }
              ]
            },
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "1203:108:0",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 100,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1342:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1328:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1363:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1349:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:44:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:0"
            },
            "scope": 855,
            "src": "1316:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1559,
              1571
            ],
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1604:192:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 111,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1633:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 113,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "1653:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$971_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$971_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 112,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1648:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1648:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$971",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1648:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1633:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 117,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1689:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 119,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "1709:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1016_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1016_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 118,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1704:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1704:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1016",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1704:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1689:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1633:104:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 126,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "1777:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 124,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1753:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$855_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1559,
                        "src": "1753:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1753:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1633:156:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 110,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1614:175:0"
                }
              ]
            },
            "documentation": {
              "id": 101,
              "nodeType": "StructuredDocumentation",
              "src": "1435:56:0",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1505:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 107,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 105,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1560,
                  "src": "1572:6:0"
                },
                {
                  "id": 106,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1572,
                  "src": "1580:7:0"
                }
              ],
              "src": "1563:25:0"
            },
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1530:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1523:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1522:20:0"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1598:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:6:0"
            },
            "scope": 855,
            "src": "1496:300:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              896
            ],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1936:124:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 141,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "1954:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1971:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1963:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 142,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1963:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1963:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1954:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1946:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:74:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 150,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2037:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 152,
                    "indexExpression": {
                      "id": 151,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2047:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2037:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 139,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "2030:23:0"
                }
              ]
            },
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "1802:48:0",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1864:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 136,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1909:8:0"
            },
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1882:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1874:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1873:15:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1927:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1926:9:0"
            },
            "scope": 855,
            "src": "1855:205:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              904
            ],
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2198:154:0",
              "statements": [
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2216:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "2208:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2208:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "baseExpression": {
                      "id": 166,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "2224:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 168,
                    "indexExpression": {
                      "id": 167,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2232:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2224:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2208:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 171,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "2258:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2275:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2267:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 172,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2267:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2267:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2258:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2279:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2250:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:73:0"
                },
                {
                  "expression": {
                    "id": 180,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 165,
                    "src": "2340:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 163,
                  "id": 181,
                  "nodeType": "Return",
                  "src": "2333:12:0"
                }
              ]
            },
            "documentation": {
              "id": 156,
              "nodeType": "StructuredDocumentation",
              "src": "2066:46:0",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2126:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 160,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2171:8:0"
            },
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2142:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "2134:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:17:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "2189:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2188:9:0"
            },
            "scope": 855,
            "src": "2117:235:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1001
            ],
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2483:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 190,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63,
                    "src": "2500:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 189,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "2493:12:0"
                }
              ]
            },
            "documentation": {
              "id": 184,
              "nodeType": "StructuredDocumentation",
              "src": "2358:51:0",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2423:4:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 186,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2450:8:0"
            },
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2427:2:0"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2468:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2468:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2467:15:0"
            },
            "scope": 855,
            "src": "2414:98:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1007
            ],
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "2647:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 200,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 65,
                    "src": "2664:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 199,
                  "id": 201,
                  "nodeType": "Return",
                  "src": "2657:14:0"
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "2518:53:0",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2585:6:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 196,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2614:8:0"
            },
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2591:2:0"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2632:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2631:15:0"
            },
            "scope": 855,
            "src": "2576:102:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1015
            ],
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "2832:241:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 214,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "2858:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 213,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "2850:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2850:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2868:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2842:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:76:0"
                },
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2943:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 244,
                      "src": "2929:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2929:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 221,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "2953:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2929:34:0"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 226,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 220,
                              "src": "2986:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2980:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 224,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2980:5:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2980:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2980:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3004:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2980:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3064:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2980:86:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 235,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 220,
                              "src": "3032:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 236,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 206,
                                  "src": "3041:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1418,
                                "src": "3041:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3041:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 233,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3015:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3015:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3008:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3008:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3008:53:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 211,
                  "id": 243,
                  "nodeType": "Return",
                  "src": "2973:93:0"
                }
              ]
            },
            "documentation": {
              "id": 204,
              "nodeType": "StructuredDocumentation",
              "src": "2684:55:0",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2753:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 208,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2799:8:0"
            },
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2770:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2762:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2761:17:0"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "2817:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2816:15:0"
            },
            "scope": 855,
            "src": "2744:329:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "3380:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3397:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 250,
                  "id": 252,
                  "nodeType": "Return",
                  "src": "3390:9:0"
                }
              ]
            },
            "documentation": {
              "id": 246,
              "nodeType": "StructuredDocumentation",
              "src": "3079:230:0",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3323:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3331:2:0"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "3365:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3365:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3364:15:0"
            },
            "scope": 855,
            "src": "3314:92:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              932
            ],
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "3533:331:0",
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3551:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 296,
                      "src": "3543:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3543:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3574:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 265,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "3559:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$855_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 183,
                      "src": "3559:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3559:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 271,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "3600:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 272,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "3606:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3600:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3613:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3592:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3592:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 278,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "3681:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3681:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 280,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "3697:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3681:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 283,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "3723:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 284,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1323,
                                "src": "3730:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3730:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 282,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "3706:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3706:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3681:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3757:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3660:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:165:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:165:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 292,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3845:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 293,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "3849:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 291,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "3836:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3836:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "3836:21:0"
                }
              ]
            },
            "documentation": {
              "id": 255,
              "nodeType": "StructuredDocumentation",
              "src": "3412:46:0",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3472:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 261,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3524:8:0"
            },
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3488:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "3480:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3480:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3500:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "3492:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3479:29:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3533:0:0"
            },
            "scope": 855,
            "src": "3463:401:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              940
            ],
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "4010:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 308,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 300,
                            "src": "4036:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 307,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "4028:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4028:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4046:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4020:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4020:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:73:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 313,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "4111:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 315,
                    "indexExpression": {
                      "id": 314,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "4127:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4111:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 305,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "4104:31:0"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "3870:50:0",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3934:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 302,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3983:8:0"
            },
            "parameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3954:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3946:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:17:0"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "4001:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:9:0"
            },
            "scope": 855,
            "src": "3925:217:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              948
            ],
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "4293:206:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 328,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "4311:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 329,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "4323:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4323:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4311:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4337:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4303:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4303:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:62:0"
                },
                {
                  "expression": {
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 335,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "4376:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 339,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 336,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "4395:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4395:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4376:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 340,
                      "indexExpression": {
                        "id": 338,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4409:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4376:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 341,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "4421:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4376:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "4376:53:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 345,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "4459:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4459:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 347,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "4473:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 348,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "4483:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 344,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "4444:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4444:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "EmitStatement",
                  "src": "4439:53:0"
                }
              ]
            },
            "documentation": {
              "id": 319,
              "nodeType": "StructuredDocumentation",
              "src": "4148:56:0",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4218:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 325,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4284:8:0"
            },
            "parameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4244:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4236:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4236:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4259:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "4254:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4254:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4235:33:0"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4293:0:0"
            },
            "scope": 855,
            "src": "4209:290:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              958
            ],
            "body": {
              "id": 369,
              "nodeType": "Block",
              "src": "4668:59:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 363,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "4685:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "id": 364,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "4704:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4685:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 367,
                    "indexExpression": {
                      "id": 366,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "4711:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4685:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 362,
                  "id": 368,
                  "nodeType": "Return",
                  "src": "4678:42:0"
                }
              ]
            },
            "documentation": {
              "id": 353,
              "nodeType": "StructuredDocumentation",
              "src": "4505:55:0",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4574:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 359,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4644:8:0"
            },
            "parameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4599:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "4591:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4591:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4614:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "4606:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4590:33:0"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "4662:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4662:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4661:6:0"
            },
            "scope": 855,
            "src": "4565:162:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              924
            ],
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "4908:211:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 383,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "4997:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4997:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 385,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 377,
                            "src": "5011:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 382,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "4978:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4978:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5021:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4970:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4970:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 391,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "5094:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 392,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "5100:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 393,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "5104:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 390,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "5084:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5084:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "5084:28:0"
                }
              ]
            },
            "documentation": {
              "id": 371,
              "nodeType": "StructuredDocumentation",
              "src": "4733:51:0",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4798:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4899:8:0"
            },
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4828:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4820:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4820:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4850:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4842:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4870:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "4862:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4810:73:0"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:0"
            },
            "scope": 855,
            "src": "4789:330:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              914
            ],
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "5308:56:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 409,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "5335:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 410,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "5341:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 411,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "5345:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5354:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 408,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        416,
                        446
                      ],
                      "referencedDeclaration": 446,
                      "src": "5318:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5318:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "5318:39:0"
                }
              ]
            },
            "documentation": {
              "id": 398,
              "nodeType": "StructuredDocumentation",
              "src": "5125:55:0",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5194:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 406,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5299:8:0"
            },
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5228:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "5220:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5220:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5250:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "5242:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5242:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5270:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "5262:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5262:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5210:73:0"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5308:0:0"
            },
            "scope": 855,
            "src": "5185:179:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              970
            ],
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "5581:169:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 431,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "5618:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5618:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 433,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "5632:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 430,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "5599:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5599:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5642:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5591:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5591:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "5591:103:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 439,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "5718:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 440,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "5724:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 441,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "5728:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 442,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "5737:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 438,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "5704:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5704:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "5704:39:0"
                }
              ]
            },
            "documentation": {
              "id": 417,
              "nodeType": "StructuredDocumentation",
              "src": "5370:55:0",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5439:16:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 427,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5572:8:0"
            },
            "parameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5473:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5465:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5495:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5487:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5487:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5515:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5507:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5545:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "5532:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5532:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5455:101:0"
            },
            "returnParameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5581:0:0"
            },
            "scope": 855,
            "src": "5430:320:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "6753:166:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 459,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 449,
                        "src": "6773:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 460,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "6779:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 461,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "6783:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 458,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 755,
                      "src": "6763:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6763:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "6763:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 466,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 449,
                            "src": "6832:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 467,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "6838:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 468,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "6842:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 469,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "6851:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 465,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "6809:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6809:48:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6859:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6801:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6801:111:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "6801:111:0"
                }
              ]
            },
            "documentation": {
              "id": 447,
              "nodeType": "StructuredDocumentation",
              "src": "5756:851:0",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6621:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6652:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6644:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6644:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6674:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6666:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6694:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6686:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6686:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6724:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6711:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6711:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6634:101:0"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6753:0:0"
            },
            "scope": 855,
            "src": "6612:307:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "7293:54:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 483,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "7310:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 485,
                      "indexExpression": {
                        "id": 484,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "7318:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7310:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7338:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7330:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7330:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7330:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7310:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 482,
                  "id": 491,
                  "nodeType": "Return",
                  "src": "7303:37:0"
                }
              ]
            },
            "documentation": {
              "id": 476,
              "nodeType": "StructuredDocumentation",
              "src": "6925:292:0",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7231:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7247:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "7239:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7239:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7238:17:0"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "7287:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7286:6:0"
            },
            "scope": 855,
            "src": "7222:125:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 533,
              "nodeType": "Block",
              "src": "7604:245:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 505,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 498,
                            "src": "7630:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 504,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "7622:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7622:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7640:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7614:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7614:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "7614:73:0"
                },
                {
                  "assignments": [
                    511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 511,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7705:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 533,
                      "src": "7697:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 510,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7697:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 516,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 514,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "7728:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 512,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "7713:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$855_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 183,
                      "src": "7713:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7713:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7697:39:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 517,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "7754:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 518,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "7765:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7754:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 521,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 498,
                                  "src": "7786:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 520,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 318,
                                "src": "7774:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7774:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 523,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "7798:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7774:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7754:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 527,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "7826:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 528,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "7833:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 526,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "7809:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7809:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7754:87:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 531,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7753:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 502,
                  "id": 532,
                  "nodeType": "Return",
                  "src": "7746:96:0"
                }
              ]
            },
            "documentation": {
              "id": 494,
              "nodeType": "StructuredDocumentation",
              "src": "7353:147:0",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 534,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7514:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7541:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "7533:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7533:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7558:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "7550:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7550:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7532:34:0"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 534,
                  "src": "7598:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7598:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7597:6:0"
            },
            "scope": 855,
            "src": "7505:344:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "8244:43:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 543,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "8264:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 544,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 539,
                        "src": "8268:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8277:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 542,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        549,
                        578
                      ],
                      "referencedDeclaration": 578,
                      "src": "8254:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8254:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "8254:26:0"
                }
              ]
            },
            "documentation": {
              "id": 535,
              "nodeType": "StructuredDocumentation",
              "src": "7855:319:0",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8188:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8206:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "8198:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8198:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8218:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "8210:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8210:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8197:29:0"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8244:0:0"
            },
            "scope": 855,
            "src": "8179:108:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "8623:196:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 560,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "8639:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 561,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "8643:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 559,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "8633:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8633:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "8633:18:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8713:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8705:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 566,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8705:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8705:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 570,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 552,
                            "src": "8717:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 571,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "8721:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 572,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "8730:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 565,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "8682:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8682:54:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8750:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8661:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8661:151:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "8661:151:0"
                }
              ]
            },
            "documentation": {
              "id": 550,
              "nodeType": "StructuredDocumentation",
              "src": "8293:210:0",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8517:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8544:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "8536:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8536:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8564:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "8556:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8556:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8594:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "8581:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8581:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8526:79:0"
            },
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8623:0:0"
            },
            "scope": 855,
            "src": "8508:311:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 634,
              "nodeType": "Block",
              "src": "9202:311:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 587,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 581,
                          "src": "9220:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9234:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9226:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 588,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9226:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9226:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9220:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9238:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9212:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9212:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "9212:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9291:17:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 598,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "9300:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 597,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "9292:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9292:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9310:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9283:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9283:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "9283:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9381:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9373:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 605,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9373:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9373:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 609,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "9385:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 610,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "9389:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 604,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "9352:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9352:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "9352:45:0"
                },
                {
                  "expression": {
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 613,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "9408:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 615,
                      "indexExpression": {
                        "id": 614,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "9418:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9408:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9425:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9408:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "9408:18:0"
                },
                {
                  "expression": {
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 619,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "9436:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 621,
                      "indexExpression": {
                        "id": 620,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "9444:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9436:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 622,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "9455:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9436:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "9436:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9490:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9482:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 626,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9482:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9482:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 630,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "9494:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 631,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "9498:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 625,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "9473:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9473:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "EmitStatement",
                  "src": "9468:38:0"
                }
              ]
            },
            "documentation": {
              "id": 579,
              "nodeType": "StructuredDocumentation",
              "src": "8825:311:0",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9150:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9164:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "9156:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9156:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9176:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 635,
                  "src": "9168:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9168:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9155:29:0"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9202:0:0"
            },
            "scope": 855,
            "src": "9141:372:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "9779:299:0",
              "statements": [
                {
                  "assignments": [
                    642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 642,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9797:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "9789:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 641,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9789:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 647,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 645,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "9820:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 643,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "9805:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$855_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 183,
                      "src": "9805:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9805:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9789:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 649,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "9860:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9875:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9867:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9867:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9867:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 654,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "9879:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 648,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "9839:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9839:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "9839:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9942:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9934:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 658,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9934:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9934:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 662,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "9946:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 657,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "9925:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9925:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "9925:29:0"
                },
                {
                  "expression": {
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 665,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "9965:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 667,
                      "indexExpression": {
                        "id": 666,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "9975:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9965:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9985:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9965:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "9965:21:0"
                },
                {
                  "expression": {
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9996:23:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 671,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "10003:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 673,
                      "indexExpression": {
                        "id": 672,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "10011:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10003:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "9996:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 677,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "10044:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10059:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10051:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 678,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10051:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10051:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 682,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "10063:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 676,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "10035:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10035:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 684,
                  "nodeType": "EmitStatement",
                  "src": "10030:41:0"
                }
              ]
            },
            "documentation": {
              "id": 636,
              "nodeType": "StructuredDocumentation",
              "src": "9519:206:0",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9739:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9753:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "9745:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9745:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9744:17:0"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9779:0:0"
            },
            "scope": 855,
            "src": "9730:348:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 754,
              "nodeType": "Block",
              "src": "10511:451:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 699,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "10544:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 697,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 855,
                              "src": "10529:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$855_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 183,
                            "src": "10529:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10529:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 701,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "10556:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10529:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10562:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10521:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10521:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "10521:85:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 707,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 691,
                          "src": "10624:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10638:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10630:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10630:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10630:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10624:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10642:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10616:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10616:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "10616:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 717,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "10713:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 718,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "10719:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 719,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "10723:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 716,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "10692:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10692:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "10692:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10810:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10802:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 723,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10802:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10802:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 727,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "10814:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 722,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "10793:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10793:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "10793:29:0"
                },
                {
                  "expression": {
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 730,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "10833:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 732,
                      "indexExpression": {
                        "id": 731,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "10843:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10833:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10852:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10833:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "10833:20:0"
                },
                {
                  "expression": {
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 736,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "10863:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 738,
                      "indexExpression": {
                        "id": 737,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "10873:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10863:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10880:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10863:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "10863:18:0"
                },
                {
                  "expression": {
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 742,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "10891:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 744,
                      "indexExpression": {
                        "id": 743,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "10899:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10891:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 745,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "10910:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10891:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "10891:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 749,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "10937:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 750,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "10943:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 751,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "10947:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 748,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "10928:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10928:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 753,
                  "nodeType": "EmitStatement",
                  "src": "10923:32:0"
                }
              ]
            },
            "documentation": {
              "id": 687,
              "nodeType": "StructuredDocumentation",
              "src": "10084:313:0",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10411:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10438:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "10430:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10430:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10460:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "10452:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10452:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 693,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10480:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 755,
                  "src": "10472:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10472:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10420:73:0"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10511:0:0"
            },
            "scope": 855,
            "src": "10402:560:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "11137:107:0",
              "statements": [
                {
                  "expression": {
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 763,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "11147:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 765,
                      "indexExpression": {
                        "id": 764,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "11163:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11147:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 766,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 758,
                      "src": "11174:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11147:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "11147:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 772,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "11215:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 770,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 855,
                            "src": "11200:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$855_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 183,
                          "src": "11200:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11200:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 774,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "11225:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 775,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "11229:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 769,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 879,
                      "src": "11191:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11191:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "EmitStatement",
                  "src": "11186:51:0"
                }
              ]
            },
            "documentation": {
              "id": 756,
              "nodeType": "StructuredDocumentation",
              "src": "10968:100:0",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11082:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11099:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "11091:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11091:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11111:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "11103:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11103:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11090:29:0"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11137:0:0"
            },
            "scope": 855,
            "src": "11073:171:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "11953:626:0",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 793,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "11967:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1036,
                      "src": "11967:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11967:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 840,
                    "nodeType": "Block",
                    "src": "12537:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12558:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 792,
                        "id": 839,
                        "nodeType": "Return",
                        "src": "12551:11:0"
                      }
                    ]
                  },
                  "id": 841,
                  "nodeType": "IfStatement",
                  "src": "11963:610:0",
                  "trueBody": {
                    "id": 837,
                    "nodeType": "Block",
                    "src": "11984:547:0",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 817,
                              "nodeType": "Block",
                              "src": "12099:95:0",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 815,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 809,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 807,
                                      "src": "12124:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 811,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 784,
                                              "src": "12150:2:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 810,
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 989,
                                            "src": "12134:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$989_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
                                          "id": 812,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12134:19:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$989",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
                                        "id": 813,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 988,
                                        "src": "12134:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 814,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12134:45:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12124:55:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 792,
                                  "id": 816,
                                  "nodeType": "Return",
                                  "src": "12117:62:0"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 818,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 808,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 807,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12091:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 818,
                                  "src": "12084:13:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 806,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12084:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12083:15:0"
                            },
                            "src": "12075:119:0"
                          },
                          {
                            "block": {
                              "id": 834,
                              "nodeType": "Block",
                              "src": "12223:298:0",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 822,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 820,
                                        "src": "12245:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 823,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12245:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 824,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12262:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12245:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 832,
                                    "nodeType": "Block",
                                    "src": "12372:135:0",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12403:86:0",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12440:2:0",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12444:6:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12436:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12436:15:0"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12459:6:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12453:5:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12453:13:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12429:6:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12429:38:0"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12429:38:0"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 820,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12444:6:0",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 820,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12459:6:0",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 831,
                                        "nodeType": "InlineAssembly",
                                        "src": "12394:95:0"
                                      }
                                    ]
                                  },
                                  "id": 833,
                                  "nodeType": "IfStatement",
                                  "src": "12241:266:0",
                                  "trueBody": {
                                    "id": 830,
                                    "nodeType": "Block",
                                    "src": "12265:101:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 827,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12294:52:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 826,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12287:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 828,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12287:60:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 829,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12287:60:0"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 835,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 821,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 820,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12215:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 835,
                                  "src": "12202:19:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 819,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12202:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12201:21:0"
                            },
                            "src": "12195:326:0"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 800,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1323,
                                "src": "12039:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12039:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 802,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "12053:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 803,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "12059:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 804,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "12068:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 797,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 784,
                                  "src": "12018:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 796,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 989,
                                "src": "12002:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$989_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12002:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$989",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 988,
                            "src": "12002:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12002:72:0",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 836,
                        "nodeType": "TryStatement",
                        "src": "11998:523:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 780,
              "nodeType": "StructuredDocumentation",
              "src": "11250:542:0",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11806:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11846:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "11838:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11838:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11868:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "11860:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11860:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11888:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "11880:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11880:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11918:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "11905:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11905:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11828:101:0"
            },
            "returnParameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "11947:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11947:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11946:6:0"
            },
            "scope": 855,
            "src": "11797:782:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "13255:2:0",
              "statements": []
            },
            "documentation": {
              "id": 844,
              "nodeType": "StructuredDocumentation",
              "src": "12585:545:0",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13144:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13182:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "13174:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13174:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13204:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "13196:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13196:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13224:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "13216:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13216:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13164:73:0"
            },
            "returnParameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13255:0:0"
            },
            "scope": 855,
            "src": "13135:122:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 856,
        "src": "554:12705:0",
        "usedErrors": []
      }
    ],
    "src": "33:13227:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014c9380380620014c98339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61123880620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d4b565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dc0565b61012461011f366004610dd3565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e08565b6103a6565b005b61014f61015f366004610e32565b6104bb565b61014f610172366004610e32565b6104ec565b610124610185366004610dd3565b610507565b61019d610198366004610e6e565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e89565b610614565b61014f6101d4366004610edb565b6106d8565b6101046101e7366004610dd3565b610710565b6100e76101fa366004610fb7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fea565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fea565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b683836107f8565b505050565b6104c53382610866565b6104e15760405162461bcd60e51b815260040161038190611024565b6104b683838361095d565b6104b6838383604051806020016040528060008152506106d8565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fea565b336001600160a01b0383160361066c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e23383610866565b6106fe5760405162461bcd60e51b815260040161038190611024565b61070a84848484610afd565b50505050565b6000818152600260205260409020546060906001600160a01b031661078f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a660408051602081019091526000815290565b905060008151116107c657604051806020016040528060008152506107f1565b806107d084610b30565b6040516020016107e1929190611075565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082d82610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108df5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108ea83610507565b9050806001600160a01b0316846001600160a01b031614806109255750836001600160a01b031661091a8461030c565b6001600160a01b0316145b8061095557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097082610507565b6001600160a01b0316146109d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a456000826107f8565b6001600160a01b0383166000908152600360205260408120805460019290610a6e9084906110ba565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9c9084906110d1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b0884848461095d565b610b1484848484610c31565b61070a5760405162461bcd60e51b8152600401610381906110e9565b606081600003610b575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b815780610b6b8161113b565b9150610b7a9050600a8361116a565b9150610b5b565b60008167ffffffffffffffff811115610b9c57610b9c610ec5565b6040519080825280601f01601f191660200182016040528015610bc6576020820181803683370190505b5090505b841561095557610bdb6001836110ba565b9150610be8600a8661117e565b610bf39060306110d1565b60f81b818381518110610c0857610c08611192565b60200101906001600160f81b031916908160001a905350610c2a600a8661116a565b9450610bca565b60006001600160a01b0384163b15610d2757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c759033908990889088906004016111a8565b6020604051808303816000875af1925050508015610cb0575060408051601f3d908101601f19168201909252610cad918101906111e5565b60015b610d0d573d808015610cde576040519150601f19603f3d011682016040523d82523d6000602084013e610ce3565b606091505b508051600003610d055760405162461bcd60e51b8152600401610381906110e9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610955565b506001949350505050565b6001600160e01b031981168114610d4857600080fd5b50565b600060208284031215610d5d57600080fd5b81356107f181610d32565b60005b83811015610d83578181015183820152602001610d6b565b8381111561070a5750506000910152565b60008151808452610dac816020860160208601610d68565b601f01601f19169290920160200192915050565b6020815260006107f16020830184610d94565b600060208284031215610de557600080fd5b5035919050565b80356001600160a01b0381168114610e0357600080fd5b919050565b60008060408385031215610e1b57600080fd5b610e2483610dec565b946020939093013593505050565b600080600060608486031215610e4757600080fd5b610e5084610dec565b9250610e5e60208501610dec565b9150604084013590509250925092565b600060208284031215610e8057600080fd5b6107f182610dec565b60008060408385031215610e9c57600080fd5b610ea583610dec565b915060208301358015158114610eba57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ef157600080fd5b610efa85610dec565b9350610f0860208601610dec565b925060408501359150606085013567ffffffffffffffff80821115610f2c57600080fd5b818701915087601f830112610f4057600080fd5b813581811115610f5257610f52610ec5565b604051601f8201601f19908116603f01168101908382118183101715610f7a57610f7a610ec5565b816040528281528a6020848701011115610f9357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fca57600080fd5b610fd383610dec565b9150610fe160208401610dec565b90509250929050565b600181811c90821680610ffe57607f821691505b60208210810361101e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611087818460208801610d68565b83519083019061109b818360208801610d68565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110cc576110cc6110a4565b500390565b600082198211156110e4576110e46110a4565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161114d5761114d6110a4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261117957611179611154565b500490565b60008261118d5761118d611154565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111db90830184610d94565b9695505050505050565b6000602082840312156111f757600080fd5b81516107f181610d3256fea264697066735822122088237d4a170cc97cb7951264f19676d3156a7f1317d87192665110d84aedeb4364736f6c634300080d0033",
  "bytecodeSha1": "b17454a274f5a02ff18673706bc65ae0297ddc95",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC721._checkOnERC721Received": {
          "60": [
            12245,
            12263,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "59": [
            6809,
            6857,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            10529,
            10560,
            true
          ],
          "58": [
            10624,
            10640,
            true
          ]
        },
        "ERC721.approve": {
          "49": [
            3600,
            3611,
            true
          ],
          "50": [
            3681,
            3702,
            true
          ],
          "51": [
            3706,
            3743,
            true
          ]
        },
        "ERC721.balanceOf": {
          "53": [
            1954,
            1973,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            5599,
            5640,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "54": [
            4311,
            4335,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            2980,
            3005,
            true
          ]
        },
        "ERC721.transferFrom": {
          "52": [
            4978,
            5019,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Strings.toString": {
          "61": [
            548,
            558,
            false
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {
        "ERC721._approve": {
          "26": [
            11147,
            11176
          ],
          "27": [
            11186,
            11237
          ]
        },
        "ERC721._baseURI": {
          "24": [
            3390,
            3399
          ]
        },
        "ERC721._checkOnERC721Received": {
          "46": [
            12287,
            12347
          ],
          "47": [
            12117,
            12179
          ],
          "48": [
            12551,
            12562
          ]
        },
        "ERC721._exists": {
          "4": [
            7303,
            7340
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            7614,
            7687
          ],
          "29": [
            7746,
            7842
          ]
        },
        "ERC721._safeTransfer": {
          "37": [
            6763,
            6791
          ],
          "38": [
            6801,
            6912
          ]
        },
        "ERC721._transfer": {
          "30": [
            10521,
            10606
          ],
          "31": [
            10616,
            10681
          ],
          "32": [
            10793,
            10822
          ],
          "33": [
            10833,
            10853
          ],
          "34": [
            10863,
            10881
          ],
          "35": [
            10891,
            10912
          ],
          "36": [
            10923,
            10955
          ]
        },
        "ERC721.approve": {
          "7": [
            3592,
            3649
          ],
          "9": [
            3660,
            3825
          ],
          "10": [
            3836,
            3857
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            1946,
            2020
          ],
          "16": [
            2030,
            2053
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4020,
            4093
          ],
          "6": [
            4104,
            4135
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4678,
            4720
          ]
        },
        "ERC721.name": {
          "3": [
            2493,
            2505
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2250,
            2323
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5318,
            5357
          ],
          "21": [
            5591,
            5694
          ],
          "22": [
            5704,
            5743
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4303,
            4365
          ],
          "19": [
            4376,
            4429
          ],
          "20": [
            4439,
            4492
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1614,
            1789
          ]
        },
        "ERC721.symbol": {
          "17": [
            2657,
            2671
          ]
        },
        "ERC721.tokenURI": {
          "23": [
            2842,
            2918
          ],
          "25": [
            2973,
            3066
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4970,
            5073
          ],
          "12": [
            5084,
            5112
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "Address.isContract": {
          "45": [
            1073,
            1088
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "8": [
            658,
            675
          ]
        }
      },
      "6": {
        "Strings.toString": {
          "39": [
            574,
            584
          ],
          "40": [
            690,
            698
          ],
          "41": [
            712,
            722
          ],
          "42": [
            824,
            835
          ],
          "43": [
            849,
            905
          ],
          "44": [
            919,
            930
          ]
        }
      },
      "7": {
        "ERC165.supportsInterface": {
          "2": [
            864,
            911
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d4b565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dc0565b61012461011f366004610dd3565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e08565b6103a6565b005b61014f61015f366004610e32565b6104bb565b61014f610172366004610e32565b6104ec565b610124610185366004610dd3565b610507565b61019d610198366004610e6e565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e89565b610614565b61014f6101d4366004610edb565b6106d8565b6101046101e7366004610dd3565b610710565b6100e76101fa366004610fb7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fea565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fea565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b683836107f8565b505050565b6104c53382610866565b6104e15760405162461bcd60e51b815260040161038190611024565b6104b683838361095d565b6104b6838383604051806020016040528060008152506106d8565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fea565b336001600160a01b0383160361066c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106e23383610866565b6106fe5760405162461bcd60e51b815260040161038190611024565b61070a84848484610afd565b50505050565b6000818152600260205260409020546060906001600160a01b031661078f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006107a660408051602081019091526000815290565b905060008151116107c657604051806020016040528060008152506107f1565b806107d084610b30565b6040516020016107e1929190611075565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061082d82610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108df5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b60006108ea83610507565b9050806001600160a01b0316846001600160a01b031614806109255750836001600160a01b031661091a8461030c565b6001600160a01b0316145b8061095557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661097082610507565b6001600160a01b0316146109d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b038216610a3a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610a456000826107f8565b6001600160a01b0383166000908152600360205260408120805460019290610a6e9084906110ba565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a9c9084906110d1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b0884848461095d565b610b1484848484610c31565b61070a5760405162461bcd60e51b8152600401610381906110e9565b606081600003610b575750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b815780610b6b8161113b565b9150610b7a9050600a8361116a565b9150610b5b565b60008167ffffffffffffffff811115610b9c57610b9c610ec5565b6040519080825280601f01601f191660200182016040528015610bc6576020820181803683370190505b5090505b841561095557610bdb6001836110ba565b9150610be8600a8661117e565b610bf39060306110d1565b60f81b818381518110610c0857610c08611192565b60200101906001600160f81b031916908160001a905350610c2a600a8661116a565b9450610bca565b60006001600160a01b0384163b15610d2757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c759033908990889088906004016111a8565b6020604051808303816000875af1925050508015610cb0575060408051601f3d908101601f19168201909252610cad918101906111e5565b60015b610d0d573d808015610cde576040519150601f19603f3d011682016040523d82523d6000602084013e610ce3565b606091505b508051600003610d055760405162461bcd60e51b8152600401610381906110e9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610955565b506001949350505050565b6001600160e01b031981168114610d4857600080fd5b50565b600060208284031215610d5d57600080fd5b81356107f181610d32565b60005b83811015610d83578181015183820152602001610d6b565b8381111561070a5750506000910152565b60008151808452610dac816020860160208601610d68565b601f01601f19169290920160200192915050565b6020815260006107f16020830184610d94565b600060208284031215610de557600080fd5b5035919050565b80356001600160a01b0381168114610e0357600080fd5b919050565b60008060408385031215610e1b57600080fd5b610e2483610dec565b946020939093013593505050565b600080600060608486031215610e4757600080fd5b610e5084610dec565b9250610e5e60208501610dec565b9150604084013590509250925092565b600060208284031215610e8057600080fd5b6107f182610dec565b60008060408385031215610e9c57600080fd5b610ea583610dec565b915060208301358015158114610eba57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ef157600080fd5b610efa85610dec565b9350610f0860208601610dec565b925060408501359150606085013567ffffffffffffffff80821115610f2c57600080fd5b818701915087601f830112610f4057600080fd5b813581811115610f5257610f52610ec5565b604051601f8201601f19908116603f01168101908382118183101715610f7a57610f7a610ec5565b816040528281528a6020848701011115610f9357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fca57600080fd5b610fd383610dec565b9150610fe160208401610dec565b90509250929050565b600181811c90821680610ffe57607f821691505b60208210810361101e57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611087818460208801610d68565b83519083019061109b818360208801610d68565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110cc576110cc6110a4565b500390565b600082198211156110e4576110e46110a4565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161114d5761114d6110a4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261117957611179611154565b500490565b60008261118d5761118d611154565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111db90830184610d94565b9695505050505050565b6000602082840312156111f757600080fd5b81516107f181610d3256fea264697066735822122088237d4a170cc97cb7951264f19676d3156a7f1317d87192665110d84aedeb4364736f6c634300080d0033",
  "deployedSourceMap": "554:12705:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:10;;558:22;540:41;;528:2;513:18;1496:300:0;;;;;;;;2414:98;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:10;;;1674:51;;1662:2;1647:18;3925:217:0;1528:203:10;3463:401:0;;;;;;:::i;:::-;;:::i;:::-;;4789:330;;;;;;:::i;:::-;;:::i;5185:179::-;;;;;;:::i;:::-;;:::i;2117:235::-;;;;;;:::i;:::-;;:::i;1855:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:10;;;2831:2;2816:18;1855:205:0;2697:177:10;2576:102:0;;;:::i;4209:290::-;;;;;;:::i;:::-;;:::i;5430:320::-;;;;;;:::i;:::-;;:::i;2744:329::-;;;;;;:::i;:::-;;:::i;4565:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4685:25:0;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162;1496:300;1598:4;-1:-1:-1;;;;;;1633:40:0;;-1:-1:-1;;;1633:40:0;;:104;;-1:-1:-1;;;;;;;1689:48:0;;-1:-1:-1;;;1689:48:0;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:7;;;1753:36:0;1614:175;1496:300;-1:-1:-1;;1496:300:0:o;2414:98::-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:0;4020:73;;;;-1:-1:-1;;;4020:73:0;;5358:2:10;4020:73:0;;;5340:21:10;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:10;;;5480:42;5539:19;;4020:73:0;;;;;;;;;-1:-1:-1;4111:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:0;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:0;:2;-1:-1:-1;;;;;3600:11:0;;3592:57;;;;-1:-1:-1;;;3592:57:0;;5771:2:10;3592:57:0;;;5753:21:10;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:10;;;5893:31;5941:19;;3592:57:0;5569:397:10;3592:57:0;665:10:5;-1:-1:-1;;;;;3681:21:0;;;;:62;;-1:-1:-1;3706:37:0;3723:5;665:10:5;4565:162:0;:::i;3706:37::-;3660:165;;;;-1:-1:-1;;;3660:165:0;;6173:2:10;3660:165:0;;;6155:21:10;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3660:165:0;5971:420:10;3660:165:0;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;4789:330::-;4978:41;665:10:5;5011:7:0;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:0;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;5185:179::-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;2117:235::-;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:0;;2250:73;;;;-1:-1:-1;;;2250:73:0;;7016:2:10;2250:73:0;;;6998:21:10;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:10;;;7138:39;7194:19;;2250:73:0;6814:405:10;1855:205:0;1927:7;-1:-1:-1;;;;;1954:19:0;;1946:74;;;;-1:-1:-1;;;1946:74:0;;7426:2:10;1946:74:0;;;7408:21:10;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:10;;;7548:40;7605:19;;1946:74:0;7224:406:10;1946:74:0;-1:-1:-1;;;;;;2037:16:0;;;;;:9;:16;;;;;;;1855:205::o;2576:102::-;2632:13;2664:7;2657:14;;;;;:::i;4209:290::-;665:10:5;-1:-1:-1;;;;;4311:24:0;;;4303:62;;;;-1:-1:-1;;;4303:62:0;;7837:2:10;4303:62:0;;;7819:21:10;7876:2;7856:18;;;7849:30;7915:27;7895:18;;;7888:55;7960:18;;4303:62:0;7635:349:10;4303:62:0;665:10:5;4376:32:0;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;4376:53:0;;;;;;;;;;4444:48;;540:41:10;;;4376:42:0;;665:10:5;4444:48:0;;513:18:10;4444:48:0;;;;;;;4209:290;;:::o;5430:320::-;5599:41;665:10:5;5632:7:0;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:0;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;2744:329::-;7287:4;7310:16;;;:7;:16;;;;;;2817:13;;-1:-1:-1;;;;;7310:16:0;2842:76;;;;-1:-1:-1;;;2842:76:0;;8191:2:10;2842:76:0;;;8173:21:10;8230:2;8210:18;;;8203:30;8269:34;8249:18;;;8242:62;-1:-1:-1;;;8320:18:10;;;8313:45;8375:19;;2842:76:0;7989:411:10;2842:76:0;2929:21;2953:10;3390:9;;;;;;;;;-1:-1:-1;3390:9:0;;;3314:92;2953:10;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;2744:329;-1:-1:-1;;;2744:329:0:o;11073:171::-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:0;-1:-1:-1;;;;;11147:29:0;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:0;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:0;7614:73;;;;-1:-1:-1;;;7614:73:0;;9082:2:10;7614:73:0;;;9064:21:10;9121:2;9101:18;;;9094:30;9160:34;9140:18;;;9133:62;-1:-1:-1;;;9211:18:10;;;9204:42;9263:19;;7614:73:0;8880:408:10;7614:73:0;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:0;:7;-1:-1:-1;;;;;7754:16:0;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:0;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:0;;7754:51;:87;;;-1:-1:-1;;;;;;4685:25:0;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7809:32;7746:96;7505:344;-1:-1:-1;;;;7505:344:0:o;10402:560::-;10556:4;-1:-1:-1;;;;;10529:31:0;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:0;;10521:85;;;;-1:-1:-1;;;10521:85:0;;9495:2:10;10521:85:0;;;9477:21:10;9534:2;9514:18;;;9507:30;9573:34;9553:18;;;9546:62;-1:-1:-1;;;9624:18:10;;;9617:39;9673:19;;10521:85:0;9293:405:10;10521:85:0;-1:-1:-1;;;;;10624:16:0;;10616:65;;;;-1:-1:-1;;;10616:65:0;;9905:2:10;10616:65:0;;;9887:21:10;9944:2;9924:18;;;9917:30;9983:34;9963:18;;;9956:62;-1:-1:-1;;;10034:18:10;;;10027:34;10078:19;;10616:65:0;9703:400:10;10616:65:0;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:0;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:0;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:0;-1:-1:-1;;;;;10891:21:0;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;6612:307::-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:0;;;;;;;:::i;275:703:6:-;331:13;548:5;557:1;548:10;544:51;;-1:-1:-1;;574:10:6;;;;;;;;;;;;-1:-1:-1;;;574:10:6;;;;;275:703::o;544:51::-;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:6;;-1:-1:-1;720:2:6;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:6;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:6;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;849:56:6;;;;;;;;-1:-1:-1;919:11:6;928:2;919:11;;:::i;:::-;;;791:150;;11797:782:0;11947:4;-1:-1:-1;;;;;11967:13:0;;1034:20:4;1080:8;11963:610:0;;12002:72;;-1:-1:-1;;;12002:72:0;;-1:-1:-1;;;;;12002:36:0;;;;;:72;;665:10:5;;12053:4:0;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:0;;;;;;;;-1:-1:-1;;12002:72:0;;;;;;;;;;;;:::i;:::-;;;11998:523;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12245:6;:13;12262:1;12245:18;12241:266;;12287:60;;-1:-1:-1;;;12287:60:0;;;;;;;:::i;12241:266::-;12459:6;12453:13;12444:6;12440:2;12436:15;12429:38;11998:523;-1:-1:-1;;;;;;12124:55:0;-1:-1:-1;;;12124:55:0;;-1:-1:-1;12117:62:0;;11963:610;-1:-1:-1;12558:4:0;11797:782;;;;;;:::o;14:131:10:-;-1:-1:-1;;;;;;88:32:10;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:10;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:10;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:10:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:10;;1343:180;-1:-1:-1;1343:180:10:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:10;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:10:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:10;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:10;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8405:470::-;8584:3;8622:6;8616:13;8638:53;8684:6;8679:3;8672:4;8664:6;8660:17;8638:53;:::i;:::-;8754:13;;8713:16;;;;8776:57;8754:13;8713:16;8810:4;8798:17;;8776:57;:::i;:::-;8849:20;;8405:470;-1:-1:-1;;;;8405:470:10:o;10108:127::-;10169:10;10164:3;10160:20;10157:1;10150:31;10200:4;10197:1;10190:15;10224:4;10221:1;10214:15;10240:125;10280:4;10308:1;10305;10302:8;10299:34;;;10313:18;;:::i;:::-;-1:-1:-1;10350:9:10;;10240:125::o;10370:128::-;10410:3;10441:1;10437:6;10434:1;10431:13;10428:39;;;10447:18;;:::i;:::-;-1:-1:-1;10483:9:10;;10370:128::o;10503:414::-;10705:2;10687:21;;;10744:2;10724:18;;;10717:30;10783:34;10778:2;10763:18;;10756:62;-1:-1:-1;;;10849:2:10;10834:18;;10827:48;10907:3;10892:19;;10503:414::o;10922:135::-;10961:3;10982:17;;;10979:43;;11002:18;;:::i;:::-;-1:-1:-1;11049:1:10;11038:13;;10922:135::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:120;11234:1;11260;11250:35;;11265:18;;:::i;:::-;-1:-1:-1;11299:9:10;;11194:120::o;11319:112::-;11351:1;11377;11367:35;;11382:18;;:::i;:::-;-1:-1:-1;11416:9:10;;11319:112::o;11436:127::-;11497:10;11492:3;11488:20;11485:1;11478:31;11528:4;11525:1;11518:15;11552:4;11549:1;11542:15;11568:489;-1:-1:-1;;;;;11837:15:10;;;11819:34;;11889:15;;11884:2;11869:18;;11862:43;11936:2;11921:18;;11914:34;;;11984:3;11979:2;11964:18;;11957:31;;;11762:4;;12005:46;;12031:19;;12023:6;12005:46;:::i;:::-;11997:54;11568:489;-1:-1:-1;;;;;;11568:489:10:o;12062:249::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:30;12275:5;12251:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    554,
    13259
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE08 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE32 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE89 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEDB JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFEA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFEA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x7F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFEA JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6E2 CALLER DUP4 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x70A DUP5 DUP5 DUP5 DUP5 PUSH2 0xAFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A6 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F1 JUMP JUMPDEST DUP1 PUSH2 0x7D0 DUP5 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7E1 SWAP3 SWAP2 SWAP1 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x82D DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EA DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x925 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x91A DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x955 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x970 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xA45 PUSH1 0x0 DUP3 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA6E SWAP1 DUP5 SWAP1 PUSH2 0x10BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA9C SWAP1 DUP5 SWAP1 PUSH2 0x10D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xB08 DUP5 DUP5 DUP5 PUSH2 0x95D JUMP JUMPDEST PUSH2 0xB14 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB57 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB81 JUMPI DUP1 PUSH2 0xB6B DUP2 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP PUSH2 0xB7A SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x116A JUMP JUMPDEST SWAP2 POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB9C PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBC6 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x955 JUMPI PUSH2 0xBDB PUSH1 0x1 DUP4 PUSH2 0x10BA JUMP JUMPDEST SWAP2 POP PUSH2 0xBE8 PUSH1 0xA DUP7 PUSH2 0x117E JUMP JUMPDEST PUSH2 0xBF3 SWAP1 PUSH1 0x30 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC08 JUMPI PUSH2 0xC08 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC2A PUSH1 0xA DUP7 PUSH2 0x116A JUMP JUMPDEST SWAP5 POP PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC75 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCB0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCAD SWAP2 DUP2 ADD SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD0D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCDE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x955 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7F1 DUP2 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD83 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD6B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x70A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDAC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD68 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE24 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE50 DUP5 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP PUSH2 0xE5E PUSH1 0x20 DUP6 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F1 DUP3 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA5 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEFA DUP6 PUSH2 0xDEC JUMP JUMPDEST SWAP4 POP PUSH2 0xF08 PUSH1 0x20 DUP7 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF52 JUMPI PUSH2 0xF52 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF7A JUMPI PUSH2 0xF7A PUSH2 0xEC5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD3 DUP4 PUSH2 0xDEC JUMP JUMPDEST SWAP2 POP PUSH2 0xFE1 PUSH1 0x20 DUP5 ADD PUSH2 0xDEC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFFE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x101E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1087 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD68 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x109B DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD68 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10CC JUMPI PUSH2 0x10CC PUSH2 0x10A4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10E4 JUMPI PUSH2 0x10E4 PUSH2 0x10A4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x114D JUMPI PUSH2 0x114D PUSH2 0x10A4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1179 JUMPI PUSH2 0x1179 PUSH2 0x1154 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x1154 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11DB SWAP1 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7F1 DUP2 PUSH2 0xD32 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x23 PUSH30 0x4A170CC97CB7951264F19676D3156A7F1317D87192665110D84AEDEB4364 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "REVERT",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        554,
        13259
      ],
      "op": "REVERT",
      "path": "0"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4B"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SUB",
      "path": "0"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "RETURN",
      "path": "0"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC0"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD3"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE08"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "0"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "STOP",
      "path": "0"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE32"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BB"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMP",
      "path": "0"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE32"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "0"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EC"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD3"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6E"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "0"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57E"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "0"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x605"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE89"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x614"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDB"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D8"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD3"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x710"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB7"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "0"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "0"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP3",
      "path": "0"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "0"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1598,
        1602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "AND",
      "path": "0"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "EQ",
      "path": "0"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1673
      ],
      "op": "DUP1",
      "path": "0"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "DUP3",
      "path": "0"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "AND",
      "path": "0"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1689,
        1737
      ],
      "op": "EQ",
      "path": "0"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1633,
        1789
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "7"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "7"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1753,
        1789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1614,
        1789
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1496,
        1796
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1496,
        1796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2468,
        2481
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2500,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "0"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "0"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "0"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "0"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "LT",
      "path": "0"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "0"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DIV",
      "path": "0"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MUL",
      "path": "0"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "0"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMP",
      "path": "0"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP2",
      "path": "0"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP1",
      "path": "0"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP4",
      "path": "0"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "GT",
      "path": "0"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SUB",
      "path": "0"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "AND",
      "path": "0"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "DUP3",
      "path": "0"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "ADD",
      "path": "0"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "0"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "0"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "0"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "0"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "0"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2493,
        2505
      ],
      "op": "POP",
      "path": "0"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2414,
        2512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2414,
        2512
      ],
      "op": "JUMP",
      "path": "0"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4001,
        4008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "0"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP2",
      "path": "0"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP3",
      "path": "0"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "ADD",
      "path": "0"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "DUP1",
      "path": "0"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SUB",
      "path": "0"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "AND",
      "path": "0"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4111,
        4135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3925,
        4142
      ],
      "op": "JUMP",
      "path": "0"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3574,
        3581
      ],
      "op": "DUP3",
      "path": "0"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMP",
      "path": "0"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3559,
        3582
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3543,
        3582
      ],
      "op": "POP",
      "path": "0"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3606,
        3611
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "0"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3602
      ],
      "op": "DUP4",
      "path": "0"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "AND",
      "path": "0"
    },
    "968": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3600,
        3611
      ],
      "op": "SUB",
      "path": "0"
    },
    "969": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E"
    },
    "972": {
      "branch": 49,
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "973": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "975": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "989": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "ADD",
      "path": "0"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "1053": {
      "op": "JUMP"
    },
    "1054": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1055": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 8
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 9
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "AND",
      "path": "0"
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "EQ",
      "path": "0"
    },
    "1067": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3702
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1068": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43A"
    },
    "1071": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3743
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43A"
    },
    "1076": {
      "fn": "ERC721.approve",
      "offset": [
        3723,
        3728
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1077": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4565,
        4727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA"
    },
    "1081": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4565,
        4727
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1082": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3706,
        3743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1083": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AC"
    },
    "1086": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1089": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "ADD",
      "path": "0"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "fn": "ERC721.approve",
      "offset": [
        3660,
        3825
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x4B6"
    },
    "1200": {
      "fn": "ERC721.approve",
      "offset": [
        3845,
        3847
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3856
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F8"
    },
    "1205": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1206": {
      "fn": "ERC721.approve",
      "offset": [
        3836,
        3857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3533,
        3864
      ],
      "op": "POP",
      "path": "0"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "0"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3463,
        3864
      ],
      "op": "POP",
      "path": "0"
    },
    "1210": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3463,
        3864
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4789,
        5119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x4C5"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1216": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5011,
        5018
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        4996
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x866"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1221": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4978,
        5019
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E1"
    },
    "1225": {
      "branch": 52,
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "ADD",
      "path": "0"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1024"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4970,
        5073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5112
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x4B6"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5094,
        5098
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5100,
        5102
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5104,
        5111
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5084,
        5093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95D"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5084,
        5112
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1260": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5185,
        5364
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x4B6"
    },
    "1264": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5335,
        5339
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5341,
        5343
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5345,
        5352
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1269": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1273": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1280": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5357
      ],
      "op": "POP",
      "path": "0"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D8"
    },
    "1286": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5318,
        5357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2117,
        2352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2189,
        2196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1295": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1297": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1300": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "AND",
      "path": "0"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2224,
        2240
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1313": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x274"
    },
    "1316": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1317": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1319": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1331": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1333": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "ADD",
      "path": "0"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1340": {
      "op": "DUP3"
    },
    "1341": {
      "op": "ADD"
    },
    "1342": {
      "op": "MSTORE"
    },
    "1343": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1378": {
      "op": "DUP3"
    },
    "1379": {
      "op": "ADD"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1396": {
      "op": "DUP3"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "MSTORE"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1401": {
      "op": "ADD"
    },
    "1402": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "1405": {
      "op": "JUMP"
    },
    "1406": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1927,
        1934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "SUB"
    },
    "1417": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1418": {
      "branch": 53,
      "fn": "ERC721.balanceOf",
      "offset": [
        1954,
        1973
      ],
      "op": "AND",
      "path": "0"
    },
    "1419": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E9"
    },
    "1422": {
      "branch": 53,
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1425": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1439": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "ADD",
      "path": "0"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1484": {
      "op": "DUP3"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "1512": {
      "op": "JUMP"
    },
    "1513": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1946,
        2020
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1514": {
      "op": "POP"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "op": "SUB"
    },
    "1523": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "AND",
      "path": "0",
      "statement": 16
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1526": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1531": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1533": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1536": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2037,
        2053
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1855,
        2060
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1541": {
      "fn": "ERC721.symbol",
      "offset": [
        2576,
        2678
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1544": {
      "fn": "ERC721.symbol",
      "offset": [
        2664,
        2671
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "1546": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x289"
    },
    "1551": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2657,
        2671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEA"
    },
    "1555": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2657,
        2671
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1556": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1557": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1564": {
      "op": "SHL"
    },
    "1565": {
      "op": "SUB"
    },
    "1566": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 18
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "AND",
      "path": "0"
    },
    "1568": {
      "branch": 54,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4311,
        4335
      ],
      "op": "SUB",
      "path": "0"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66C"
    },
    "1572": {
      "branch": 54,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1573": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1575": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1584": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1589": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1590": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "ADD",
      "path": "0"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "DUP3"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "1643": {
      "op": "JUMP"
    },
    "1644": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4303,
        4365
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1645": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1646": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x0"
    },
    "1648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1649": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1650": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1651": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4394
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1655": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1656": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1657": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1658": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1660": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1661": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1662": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4408
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "op": "SUB"
    },
    "1671": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1672": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "AND",
      "path": "0"
    },
    "1673": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1674": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1675": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1676": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1677": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1678": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1679": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1680": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1681": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1682": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1683": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1684": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1687": {
      "op": "NOT"
    },
    "1688": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "AND",
      "path": "0"
    },
    "1689": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1690": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1691": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1692": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "OR",
      "path": "0"
    },
    "1695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4429
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1698": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 20
    },
    "1699": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1700": {
      "op": "SWAP1"
    },
    "1701": {
      "op": "DUP2"
    },
    "1702": {
      "op": "MSTORE"
    },
    "1703": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4376,
        4418
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1705": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1706": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1739": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1743": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1744": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1745": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1746": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SUB",
      "path": "0"
    },
    "1747": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1748": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4444,
        4492
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1749": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "0"
    },
    "1750": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4209,
        4499
      ],
      "op": "POP",
      "path": "0"
    },
    "1751": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4209,
        4499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1752": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1753": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0x6E2"
    },
    "1756": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1757": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5632,
        5639
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1758": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x866"
    },
    "1761": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1762": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5640
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1763": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FE"
    },
    "1766": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1767": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1770": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1778": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1779": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1781": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "ADD",
      "path": "0"
    },
    "1782": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "1785": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1786": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1024"
    },
    "1789": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1790": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5591,
        5694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1791": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5743
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0x70A"
    },
    "1794": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5718,
        5722
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1795": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5724,
        5726
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1796": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5728,
        5735
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1797": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5737,
        5742
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1798": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5717
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "1801": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5704,
        5743
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1802": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5704,
        5743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1803": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "0"
    },
    "1804": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "0"
    },
    "1805": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "0"
    },
    "1806": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5430,
        5750
      ],
      "op": "POP",
      "path": "0"
    },
    "1807": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5430,
        5750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1809": {
      "fn": "ERC721._exists",
      "offset": [
        7287,
        7291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1811": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1812": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1813": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1814": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1816": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1818": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1819": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1821": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1822": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1823": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1824": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2817,
        2830
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2817,
        2830
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1833": {
      "op": "SHL"
    },
    "1834": {
      "op": "SUB"
    },
    "1835": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "0"
    },
    "1836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0x78F"
    },
    "1839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1856": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1857": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "ADD",
      "path": "0"
    },
    "1858": {
      "op": "MSTORE"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1863": {
      "op": "DUP3"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1901": {
      "op": "DUP3"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "MSTORE"
    },
    "1904": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1922": {
      "op": "SHL"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1925": {
      "op": "DUP3"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "MSTORE"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "1934": {
      "op": "JUMP"
    },
    "1935": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2842,
        2918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1936": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1938": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2953,
        2963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A6"
    },
    "1941": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x40"
    },
    "1943": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1944": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1945": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1947": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1948": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "ADD",
      "path": "0"
    },
    "1949": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1950": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1951": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1955": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1956": {
      "fn": "ERC721._baseURI",
      "offset": [
        3390,
        3399
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1957": {
      "fn": "ERC721._baseURI",
      "offset": [
        3314,
        3406
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1958": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2953,
        2963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1959": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2929,
        2963
      ],
      "op": "POP",
      "path": "0"
    },
    "1961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3004,
        3005
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x0"
    },
    "1963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2986,
        2993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1964": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3001
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1965": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3005
      ],
      "op": "GT",
      "path": "0"
    },
    "1966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C6"
    },
    "1969": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1970": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1972": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1973": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1974": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1976": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "POP",
      "path": "0"
    },
    "1986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F1"
    },
    "1989": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1990": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3032,
        3039
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3059
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D0"
    },
    "1995": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3048
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1996": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB30"
    },
    "1999": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3041,
        3059
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2000": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3041,
        3059
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2001": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2004": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "ADD",
      "path": "0"
    },
    "2007": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E1"
    },
    "2010": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2011": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1075"
    },
    "2016": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3015,
        3060
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2017": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2021": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2023": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2024": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2025": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SUB",
      "path": "0"
    },
    "2026": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SUB",
      "path": "0"
    },
    "2027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2030": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2032": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3015,
        3060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2033": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2980,
        3066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2973,
        3066
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2744,
        3073
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2744,
        3073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2040": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2041": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "2043": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2044": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2045": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2046": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2048": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2050": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2051": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2053": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2054": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2055": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2056": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "SUB"
    },
    "2065": {
      "op": "NOT"
    },
    "2066": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "0"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2073": {
      "op": "SHL"
    },
    "2074": {
      "op": "SUB"
    },
    "2075": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2076": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "AND",
      "path": "0"
    },
    "2077": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2078": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2079": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "OR",
      "path": "0"
    },
    "2080": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2081": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2082": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11176
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2083": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2084": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2085": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0x82D"
    },
    "2088": {
      "fn": "ERC721._approve",
      "offset": [
        11147,
        11171
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2089": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "2092": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2093": {
      "fn": "ERC721._approve",
      "offset": [
        11200,
        11223
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "op": "SUB"
    },
    "2102": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "AND",
      "path": "0"
    },
    "2103": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2136": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2138": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2139": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2141": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2142": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2143": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2144": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SUB",
      "path": "0"
    },
    "2145": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2146": {
      "fn": "ERC721._approve",
      "offset": [
        11191,
        11237
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2147": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "0"
    },
    "2148": {
      "fn": "ERC721._approve",
      "offset": [
        11073,
        11244
      ],
      "op": "POP",
      "path": "0"
    },
    "2149": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11073,
        11244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2151": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7598,
        7602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2153": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2154": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2155": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2156": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2158": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2160": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2161": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2163": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2164": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2165": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "op": "SUB"
    },
    "2174": {
      "fn": "ERC721._exists",
      "offset": [
        7310,
        7326
      ],
      "op": "AND",
      "path": "0"
    },
    "2175": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x8DF"
    },
    "2178": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2179": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2188": {
      "op": "SHL"
    },
    "2189": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2190": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2193": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2195": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2196": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "ADD",
      "path": "0"
    },
    "2197": {
      "op": "MSTORE"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2202": {
      "op": "DUP3"
    },
    "2203": {
      "op": "ADD"
    },
    "2204": {
      "op": "MSTORE"
    },
    "2205": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2240": {
      "op": "DUP3"
    },
    "2241": {
      "op": "ADD"
    },
    "2242": {
      "op": "MSTORE"
    },
    "2243": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2261": {
      "op": "DUP3"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2266": {
      "op": "ADD"
    },
    "2267": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "2270": {
      "op": "JUMP"
    },
    "2271": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7614,
        7687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2272": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "2277": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7728,
        7735
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7727
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "2281": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2282": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7713,
        7736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2284": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7697,
        7736
      ],
      "op": "POP",
      "path": "0"
    },
    "2285": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7765,
        7770
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 29
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "SUB"
    },
    "2294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "0"
    },
    "2295": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7761
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2302": {
      "op": "SHL"
    },
    "2303": {
      "op": "SUB"
    },
    "2304": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "AND",
      "path": "0"
    },
    "2305": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7770
      ],
      "op": "EQ",
      "path": "0"
    },
    "2306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2307": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x925"
    },
    "2310": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "POP",
      "path": "0"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7798,
        7805
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2319": {
      "op": "SHL"
    },
    "2320": {
      "op": "SUB"
    },
    "2321": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "0"
    },
    "2322": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91A"
    },
    "2325": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7786,
        7793
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2326": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30C"
    },
    "2329": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2330": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7794
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2337": {
      "op": "SHL"
    },
    "2338": {
      "op": "SUB"
    },
    "2339": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "AND",
      "path": "0"
    },
    "2340": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7805
      ],
      "op": "EQ",
      "path": "0"
    },
    "2341": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7805
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2342": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2343": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "2346": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7754,
        7841
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2347": {
      "op": "POP"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2357": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2358": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "AND",
      "path": "0"
    },
    "2359": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4662,
        4666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2361": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2362": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2363": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2364": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2366": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2368": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2369": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2370": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2371": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2373": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2374": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4710
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "0"
    },
    "2379": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2382": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2388": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4685,
        4720
      ],
      "op": "AND",
      "path": "0"
    },
    "2389": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7809,
        7841
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2390": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7746,
        7842
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2391": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7505,
        7849
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2392": {
      "op": "POP"
    },
    "2393": {
      "op": "POP"
    },
    "2394": {
      "op": "POP"
    },
    "2395": {
      "op": "POP"
    },
    "2396": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7505,
        7849
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2397": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2398": {
      "fn": "ERC721._transfer",
      "offset": [
        10556,
        10560
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 30
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2405": {
      "op": "SHL"
    },
    "2406": {
      "op": "SUB"
    },
    "2407": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "0"
    },
    "2408": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x970"
    },
    "2411": {
      "fn": "ERC721._transfer",
      "offset": [
        10544,
        10551
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2412": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "2415": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2416": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10552
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "op": "SUB"
    },
    "2425": {
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "AND",
      "path": "0"
    },
    "2426": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10529,
        10560
      ],
      "op": "EQ",
      "path": "0"
    },
    "2427": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D8"
    },
    "2430": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2431": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2440": {
      "op": "SHL"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2442": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2445": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2447": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "ADD",
      "path": "0"
    },
    "2449": {
      "op": "MSTORE"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2454": {
      "op": "DUP3"
    },
    "2455": {
      "op": "ADD"
    },
    "2456": {
      "op": "MSTORE"
    },
    "2457": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2492": {
      "op": "DUP3"
    },
    "2493": {
      "op": "ADD"
    },
    "2494": {
      "op": "MSTORE"
    },
    "2495": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2507": {
      "op": "SHL"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2510": {
      "op": "DUP3"
    },
    "2511": {
      "op": "ADD"
    },
    "2512": {
      "op": "MSTORE"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "2519": {
      "op": "JUMP"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        10521,
        10606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 31
    },
    "2530": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10624,
        10640
      ],
      "op": "AND",
      "path": "0"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3A"
    },
    "2534": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2544": {
      "op": "SHL"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "ADD",
      "path": "0"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2556": {
      "op": "DUP1"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2595": {
      "op": "DUP3"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "MSTORE"
    },
    "2598": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2605": {
      "op": "SHL"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2608": {
      "op": "DUP3"
    },
    "2609": {
      "op": "ADD"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2613": {
      "op": "ADD"
    },
    "2614": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "2617": {
      "op": "JUMP"
    },
    "2618": {
      "fn": "ERC721._transfer",
      "offset": [
        10616,
        10681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2619": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xA45"
    },
    "2622": {
      "fn": "ERC721._transfer",
      "offset": [
        10810,
        10811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2624": {
      "fn": "ERC721._transfer",
      "offset": [
        10814,
        10821
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2625": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F8"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2629": {
      "fn": "ERC721._transfer",
      "offset": [
        10793,
        10822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 33
    },
    "2639": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "AND",
      "path": "0"
    },
    "2640": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2642": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2643": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2644": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2645": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2647": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2649": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2650": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2652": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2653": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2654": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2658": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2659": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10848
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2660": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6E"
    },
    "2663": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2664": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2665": {
      "fn": "ERC721._transfer",
      "offset": [
        10852,
        10853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BA"
    },
    "2669": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2670": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        10833,
        10853
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 34
    },
    "2685": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "AND",
      "path": "0"
    },
    "2686": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2688": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2689": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2690": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2691": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2693": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2695": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2696": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2698": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2699": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2700": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2701": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2704": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2705": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10876
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2706": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9C"
    },
    "2709": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2710": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2711": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2712": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D1"
    },
    "2715": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2716": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2717": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2718": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2719": {
      "fn": "ERC721._transfer",
      "offset": [
        10863,
        10881
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2720": {
      "op": "POP"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x0"
    },
    "2724": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2725": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2726": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2727": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10898
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2729": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2731": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2732": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2734": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2735": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2736": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2737": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2738": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "op": "NOT"
    },
    "2748": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "0"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2755": {
      "op": "SHL"
    },
    "2756": {
      "op": "SUB"
    },
    "2757": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2758": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2759": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "AND",
      "path": "0"
    },
    "2760": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2761": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2762": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "OR",
      "path": "0"
    },
    "2763": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2764": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2765": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10912
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2766": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 36
    },
    "2767": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2768": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2769": {
      "fn": "ERC721._transfer",
      "offset": [
        10891,
        10907
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2770": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2771": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2772": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "AND",
      "path": "0"
    },
    "2773": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2774": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2807": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2808": {
      "fn": "ERC721._transfer",
      "offset": [
        10928,
        10955
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2809": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "0"
    },
    "2810": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "0"
    },
    "2811": {
      "fn": "ERC721._transfer",
      "offset": [
        10402,
        10962
      ],
      "op": "POP",
      "path": "0"
    },
    "2812": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10402,
        10962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2813": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2814": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0xB08"
    },
    "2817": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6777
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2818": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6779,
        6781
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2819": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6783,
        6790
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2820": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95D"
    },
    "2823": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2824": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6763,
        6791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2825": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0xB14"
    },
    "2828": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6832,
        6836
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2829": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6838,
        6840
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2830": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6842,
        6849
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2831": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6851,
        6856
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2832": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC31"
    },
    "2835": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2836": {
      "branch": 59,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6809,
        6857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2837": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70A"
    },
    "2840": {
      "branch": 59,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2843": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2850": {
      "op": "SHL"
    },
    "2851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2852": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "ADD",
      "path": "0"
    },
    "2856": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "2859": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2860": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6801,
        6912
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E9"
    },
    "2863": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6801,
        6912
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2864": {
      "fn": "Strings.toString",
      "offset": [
        275,
        978
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2865": {
      "fn": "Strings.toString",
      "offset": [
        331,
        344
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2867": {
      "fn": "Strings.toString",
      "offset": [
        548,
        553
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2868": {
      "fn": "Strings.toString",
      "offset": [
        557,
        558
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2870": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        548,
        558
      ],
      "op": "SUB",
      "path": "6"
    },
    "2871": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB57"
    },
    "2874": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "op": "POP"
    },
    "2877": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 39,
      "value": "0x40"
    },
    "2879": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2881": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2882": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "6"
    },
    "2884": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2885": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2886": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2887": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2889": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "ADD",
      "path": "6"
    },
    "2900": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        574,
        584
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2902": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        275,
        978
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        544,
        595
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        619,
        624
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        604,
        616
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        665,
        674
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB81"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 40
    },
    "2915": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB6B"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2919": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x113B"
    },
    "2922": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        690,
        698
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        690,
        698
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 41,
      "value": "0xB7A"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "fn": "Strings.toString",
      "offset": [
        720,
        722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116A"
    },
    "2937": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        712,
        722
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        712,
        722
      ],
      "op": "POP",
      "path": "6"
    },
    "2941": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB5B"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        658,
        733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2946": {
      "fn": "Strings.toString",
      "offset": [
        742,
        761
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        774,
        780
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "GT",
      "path": "6"
    },
    "2960": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2961": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB9C"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB9C"
    },
    "2968": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC5"
    },
    "2971": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        764,
        781
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2976": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2981": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "NOT",
      "path": "6"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "AND",
      "path": "6"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "2991": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBC6"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "ADD",
      "path": "6"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        764,
        781
      ],
      "op": "POP",
      "path": "6"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        742,
        781
      ],
      "op": "POP",
      "path": "6"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        798,
        808
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x955"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 42,
      "value": "0xBDB"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        834,
        835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10BA"
    },
    "3034": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        824,
        835
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        824,
        835
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3037": {
      "op": "POP"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 43,
      "value": "0xBE8"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        892,
        897
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117E"
    },
    "3047": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        892,
        902
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        892,
        902
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBF3"
    },
    "3052": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3053": {
      "fn": "Strings.toString",
      "offset": [
        879,
        881
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x30"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10D1"
    },
    "3058": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        879,
        903
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        879,
        903
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xF8"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        866,
        905
      ],
      "op": "SHL",
      "path": "6"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        849,
        855
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        856,
        862
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3066": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "LT",
      "path": "6"
    },
    "3069": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC08"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC08"
    },
    "3076": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1192"
    },
    "3079": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        849,
        863
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3081": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "6"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        849,
        863
      ],
      "op": "ADD",
      "path": "6"
    },
    "3085": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3092": {
      "op": "SHL"
    },
    "3093": {
      "op": "SUB"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "NOT",
      "path": "6"
    },
    "3095": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "AND",
      "path": "6"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3098": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3100": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "BYTE",
      "path": "6"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3102": {
      "fn": "Strings.toString",
      "offset": [
        849,
        905
      ],
      "op": "MSTORE8",
      "path": "6"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 44,
      "value": "0xC2A"
    },
    "3107": {
      "fn": "Strings.toString",
      "offset": [
        928,
        930
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3110": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116A"
    },
    "3113": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        930
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3114": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3115": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3116": {
      "fn": "Strings.toString",
      "offset": [
        919,
        930
      ],
      "op": "POP",
      "path": "6"
    },
    "3117": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCA"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        791,
        941
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11947,
        11951
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3130": {
      "op": "SHL"
    },
    "3131": {
      "op": "SUB"
    },
    "3132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11967,
        11980
      ],
      "op": "AND",
      "path": "0"
    },
    "3134": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "3135": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "4",
      "statement": 45
    },
    "3136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD27"
    },
    "3139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3140": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3143": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3150": {
      "op": "SHL"
    },
    "3151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "op": "SUB"
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "AND",
      "path": "0"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x150B7A02"
    },
    "3169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC75"
    },
    "3173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3174": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3175": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "DUP10",
      "path": "0"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12053,
        12057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12059,
        12066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12068,
        12073
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "0"
    },
    "3185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A8"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SUB",
      "path": "0"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "GAS",
      "path": "0"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "CALL",
      "path": "0"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "0"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "0"
    },
    "3207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "POP",
      "path": "0"
    },
    "3208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB0"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "0"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3227": {
      "op": "NOT"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "AND",
      "path": "0"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "0"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCAD"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "ADD",
      "path": "0"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E5"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12002,
        12074
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0D"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDE"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "0"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "NOT",
      "path": "0"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "0"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "AND",
      "path": "0"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "0"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "ADD",
      "path": "0"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE3"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "0"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "POP",
      "path": "0"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12262,
        12263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3305": {
      "branch": 60,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12245,
        12263
      ],
      "op": "SUB",
      "path": "0"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD05"
    },
    "3309": {
      "branch": 60,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x40"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3313": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "ADD",
      "path": "0"
    },
    "3325": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "3328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12287,
        12347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E9"
    },
    "3332": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12287,
        12347
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12241,
        12507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3334": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12459,
        12465
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12453,
        12466
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12444,
        12450
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12440,
        12442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12436,
        12451
      ],
      "op": "ADD",
      "path": "0"
    },
    "3340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12429,
        12467
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11998,
        12521
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3348": {
      "op": "SHL"
    },
    "3349": {
      "op": "SUB"
    },
    "3350": {
      "op": "NOT"
    },
    "3351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "AND",
      "path": "0",
      "statement": 47
    },
    "3352": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "EQ",
      "path": "0"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12124,
        12179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3362": {
      "op": "POP"
    },
    "3363": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "3366": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12117,
        12179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3367": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11963,
        12573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12558,
        12562
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x1"
    },
    "3371": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "0"
    },
    "3374": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "0"
    },
    "3375": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "0"
    },
    "3376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11797,
        12579
      ],
      "op": "POP",
      "path": "0"
    },
    "3377": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11797,
        12579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3378": {
      "op": "JUMPDEST"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3385": {
      "op": "SHL"
    },
    "3386": {
      "op": "SUB"
    },
    "3387": {
      "op": "NOT"
    },
    "3388": {
      "op": "DUP2"
    },
    "3389": {
      "op": "AND"
    },
    "3390": {
      "op": "DUP2"
    },
    "3391": {
      "op": "EQ"
    },
    "3392": {
      "op": "PUSH2",
      "value": "0xD48"
    },
    "3395": {
      "op": "JUMPI"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3398": {
      "op": "DUP1"
    },
    "3399": {
      "op": "REVERT"
    },
    "3400": {
      "op": "JUMPDEST"
    },
    "3401": {
      "op": "POP"
    },
    "3402": {
      "jump": "o",
      "op": "JUMP"
    },
    "3403": {
      "op": "JUMPDEST"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3408": {
      "op": "DUP3"
    },
    "3409": {
      "op": "DUP5"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "op": "SLT"
    },
    "3412": {
      "op": "ISZERO"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xD5D"
    },
    "3416": {
      "op": "JUMPI"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3419": {
      "op": "DUP1"
    },
    "3420": {
      "op": "REVERT"
    },
    "3421": {
      "op": "JUMPDEST"
    },
    "3422": {
      "op": "DUP2"
    },
    "3423": {
      "op": "CALLDATALOAD"
    },
    "3424": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "3427": {
      "op": "DUP2"
    },
    "3428": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "3431": {
      "jump": "i",
      "op": "JUMP"
    },
    "3432": {
      "op": "JUMPDEST"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3435": {
      "op": "JUMPDEST"
    },
    "3436": {
      "op": "DUP4"
    },
    "3437": {
      "op": "DUP2"
    },
    "3438": {
      "op": "LT"
    },
    "3439": {
      "op": "ISZERO"
    },
    "3440": {
      "op": "PUSH2",
      "value": "0xD83"
    },
    "3443": {
      "op": "JUMPI"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "DUP2"
    },
    "3446": {
      "op": "ADD"
    },
    "3447": {
      "op": "MLOAD"
    },
    "3448": {
      "op": "DUP4"
    },
    "3449": {
      "op": "DUP3"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "MSTORE"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3454": {
      "op": "ADD"
    },
    "3455": {
      "op": "PUSH2",
      "value": "0xD6B"
    },
    "3458": {
      "op": "JUMP"
    },
    "3459": {
      "op": "JUMPDEST"
    },
    "3460": {
      "op": "DUP4"
    },
    "3461": {
      "op": "DUP2"
    },
    "3462": {
      "op": "GT"
    },
    "3463": {
      "op": "ISZERO"
    },
    "3464": {
      "op": "PUSH2",
      "value": "0x70A"
    },
    "3467": {
      "op": "JUMPI"
    },
    "3468": {
      "op": "POP"
    },
    "3469": {
      "op": "POP"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3472": {
      "op": "SWAP2"
    },
    "3473": {
      "op": "ADD"
    },
    "3474": {
      "op": "MSTORE"
    },
    "3475": {
      "jump": "o",
      "op": "JUMP"
    },
    "3476": {
      "op": "JUMPDEST"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3479": {
      "op": "DUP2"
    },
    "3480": {
      "op": "MLOAD"
    },
    "3481": {
      "op": "DUP1"
    },
    "3482": {
      "op": "DUP5"
    },
    "3483": {
      "op": "MSTORE"
    },
    "3484": {
      "op": "PUSH2",
      "value": "0xDAC"
    },
    "3487": {
      "op": "DUP2"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3490": {
      "op": "DUP7"
    },
    "3491": {
      "op": "ADD"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3494": {
      "op": "DUP7"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "3499": {
      "jump": "i",
      "op": "JUMP"
    },
    "3500": {
      "op": "JUMPDEST"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3503": {
      "op": "ADD"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3506": {
      "op": "NOT"
    },
    "3507": {
      "op": "AND"
    },
    "3508": {
      "op": "SWAP3"
    },
    "3509": {
      "op": "SWAP1"
    },
    "3510": {
      "op": "SWAP3"
    },
    "3511": {
      "op": "ADD"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "op": "SWAP3"
    },
    "3516": {
      "op": "SWAP2"
    },
    "3517": {
      "op": "POP"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "jump": "o",
      "op": "JUMP"
    },
    "3520": {
      "op": "JUMPDEST"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3523": {
      "op": "DUP2"
    },
    "3524": {
      "op": "MSTORE"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3527": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3532": {
      "op": "DUP4"
    },
    "3533": {
      "op": "ADD"
    },
    "3534": {
      "op": "DUP5"
    },
    "3535": {
      "op": "PUSH2",
      "value": "0xD94"
    },
    "3538": {
      "jump": "i",
      "op": "JUMP"
    },
    "3539": {
      "op": "JUMPDEST"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3544": {
      "op": "DUP3"
    },
    "3545": {
      "op": "DUP5"
    },
    "3546": {
      "op": "SUB"
    },
    "3547": {
      "op": "SLT"
    },
    "3548": {
      "op": "ISZERO"
    },
    "3549": {
      "op": "PUSH2",
      "value": "0xDE5"
    },
    "3552": {
      "op": "JUMPI"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3555": {
      "op": "DUP1"
    },
    "3556": {
      "op": "REVERT"
    },
    "3557": {
      "op": "JUMPDEST"
    },
    "3558": {
      "op": "POP"
    },
    "3559": {
      "op": "CALLDATALOAD"
    },
    "3560": {
      "op": "SWAP2"
    },
    "3561": {
      "op": "SWAP1"
    },
    "3562": {
      "op": "POP"
    },
    "3563": {
      "jump": "o",
      "op": "JUMP"
    },
    "3564": {
      "op": "JUMPDEST"
    },
    "3565": {
      "op": "DUP1"
    },
    "3566": {
      "op": "CALLDATALOAD"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3573": {
      "op": "SHL"
    },
    "3574": {
      "op": "SUB"
    },
    "3575": {
      "op": "DUP2"
    },
    "3576": {
      "op": "AND"
    },
    "3577": {
      "op": "DUP2"
    },
    "3578": {
      "op": "EQ"
    },
    "3579": {
      "op": "PUSH2",
      "value": "0xE03"
    },
    "3582": {
      "op": "JUMPI"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3585": {
      "op": "DUP1"
    },
    "3586": {
      "op": "REVERT"
    },
    "3587": {
      "op": "JUMPDEST"
    },
    "3588": {
      "op": "SWAP2"
    },
    "3589": {
      "op": "SWAP1"
    },
    "3590": {
      "op": "POP"
    },
    "3591": {
      "jump": "o",
      "op": "JUMP"
    },
    "3592": {
      "op": "JUMPDEST"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3595": {
      "op": "DUP1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3598": {
      "op": "DUP4"
    },
    "3599": {
      "op": "DUP6"
    },
    "3600": {
      "op": "SUB"
    },
    "3601": {
      "op": "SLT"
    },
    "3602": {
      "op": "ISZERO"
    },
    "3603": {
      "op": "PUSH2",
      "value": "0xE1B"
    },
    "3606": {
      "op": "JUMPI"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3609": {
      "op": "DUP1"
    },
    "3610": {
      "op": "REVERT"
    },
    "3611": {
      "op": "JUMPDEST"
    },
    "3612": {
      "op": "PUSH2",
      "value": "0xE24"
    },
    "3615": {
      "op": "DUP4"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3619": {
      "jump": "i",
      "op": "JUMP"
    },
    "3620": {
      "op": "JUMPDEST"
    },
    "3621": {
      "op": "SWAP5"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3624": {
      "op": "SWAP4"
    },
    "3625": {
      "op": "SWAP1"
    },
    "3626": {
      "op": "SWAP4"
    },
    "3627": {
      "op": "ADD"
    },
    "3628": {
      "op": "CALLDATALOAD"
    },
    "3629": {
      "op": "SWAP4"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "op": "POP"
    },
    "3632": {
      "op": "POP"
    },
    "3633": {
      "jump": "o",
      "op": "JUMP"
    },
    "3634": {
      "op": "JUMPDEST"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3637": {
      "op": "DUP1"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3642": {
      "op": "DUP5"
    },
    "3643": {
      "op": "DUP7"
    },
    "3644": {
      "op": "SUB"
    },
    "3645": {
      "op": "SLT"
    },
    "3646": {
      "op": "ISZERO"
    },
    "3647": {
      "op": "PUSH2",
      "value": "0xE47"
    },
    "3650": {
      "op": "JUMPI"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3653": {
      "op": "DUP1"
    },
    "3654": {
      "op": "REVERT"
    },
    "3655": {
      "op": "JUMPDEST"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3659": {
      "op": "DUP5"
    },
    "3660": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3663": {
      "jump": "i",
      "op": "JUMP"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "SWAP3"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "op": "PUSH2",
      "value": "0xE5E"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3672": {
      "op": "DUP6"
    },
    "3673": {
      "op": "ADD"
    },
    "3674": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3677": {
      "jump": "i",
      "op": "JUMP"
    },
    "3678": {
      "op": "JUMPDEST"
    },
    "3679": {
      "op": "SWAP2"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3683": {
      "op": "DUP5"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "op": "CALLDATALOAD"
    },
    "3686": {
      "op": "SWAP1"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "op": "SWAP3"
    },
    "3689": {
      "op": "POP"
    },
    "3690": {
      "op": "SWAP3"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "op": "SWAP3"
    },
    "3693": {
      "jump": "o",
      "op": "JUMP"
    },
    "3694": {
      "op": "JUMPDEST"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3699": {
      "op": "DUP3"
    },
    "3700": {
      "op": "DUP5"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "op": "SLT"
    },
    "3703": {
      "op": "ISZERO"
    },
    "3704": {
      "op": "PUSH2",
      "value": "0xE80"
    },
    "3707": {
      "op": "JUMPI"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3710": {
      "op": "DUP1"
    },
    "3711": {
      "op": "REVERT"
    },
    "3712": {
      "op": "JUMPDEST"
    },
    "3713": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3720": {
      "jump": "i",
      "op": "JUMP"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3724": {
      "op": "DUP1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3727": {
      "op": "DUP4"
    },
    "3728": {
      "op": "DUP6"
    },
    "3729": {
      "op": "SUB"
    },
    "3730": {
      "op": "SLT"
    },
    "3731": {
      "op": "ISZERO"
    },
    "3732": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "3735": {
      "op": "JUMPI"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3738": {
      "op": "DUP1"
    },
    "3739": {
      "op": "REVERT"
    },
    "3740": {
      "op": "JUMPDEST"
    },
    "3741": {
      "op": "PUSH2",
      "value": "0xEA5"
    },
    "3744": {
      "op": "DUP4"
    },
    "3745": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3748": {
      "jump": "i",
      "op": "JUMP"
    },
    "3749": {
      "op": "JUMPDEST"
    },
    "3750": {
      "op": "SWAP2"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3754": {
      "op": "DUP4"
    },
    "3755": {
      "op": "ADD"
    },
    "3756": {
      "op": "CALLDATALOAD"
    },
    "3757": {
      "op": "DUP1"
    },
    "3758": {
      "op": "ISZERO"
    },
    "3759": {
      "op": "ISZERO"
    },
    "3760": {
      "op": "DUP2"
    },
    "3761": {
      "op": "EQ"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xEBA"
    },
    "3765": {
      "op": "JUMPI"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "DUP1"
    },
    "3769": {
      "op": "REVERT"
    },
    "3770": {
      "op": "JUMPDEST"
    },
    "3771": {
      "op": "DUP1"
    },
    "3772": {
      "op": "SWAP2"
    },
    "3773": {
      "op": "POP"
    },
    "3774": {
      "op": "POP"
    },
    "3775": {
      "op": "SWAP3"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "SWAP3"
    },
    "3778": {
      "op": "SWAP1"
    },
    "3779": {
      "op": "POP"
    },
    "3780": {
      "jump": "o",
      "op": "JUMP"
    },
    "3781": {
      "op": "JUMPDEST"
    },
    "3782": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3789": {
      "op": "SHL"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3797": {
      "op": "MSTORE"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3802": {
      "op": "REVERT"
    },
    "3803": {
      "op": "JUMPDEST"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3806": {
      "op": "DUP1"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3809": {
      "op": "DUP1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3812": {
      "op": "DUP6"
    },
    "3813": {
      "op": "DUP8"
    },
    "3814": {
      "op": "SUB"
    },
    "3815": {
      "op": "SLT"
    },
    "3816": {
      "op": "ISZERO"
    },
    "3817": {
      "op": "PUSH2",
      "value": "0xEF1"
    },
    "3820": {
      "op": "JUMPI"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3823": {
      "op": "DUP1"
    },
    "3824": {
      "op": "REVERT"
    },
    "3825": {
      "op": "JUMPDEST"
    },
    "3826": {
      "op": "PUSH2",
      "value": "0xEFA"
    },
    "3829": {
      "op": "DUP6"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3833": {
      "jump": "i",
      "op": "JUMP"
    },
    "3834": {
      "op": "JUMPDEST"
    },
    "3835": {
      "op": "SWAP4"
    },
    "3836": {
      "op": "POP"
    },
    "3837": {
      "op": "PUSH2",
      "value": "0xF08"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3842": {
      "op": "DUP7"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3847": {
      "jump": "i",
      "op": "JUMP"
    },
    "3848": {
      "op": "JUMPDEST"
    },
    "3849": {
      "op": "SWAP3"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3853": {
      "op": "DUP6"
    },
    "3854": {
      "op": "ADD"
    },
    "3855": {
      "op": "CALLDATALOAD"
    },
    "3856": {
      "op": "SWAP2"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3860": {
      "op": "DUP6"
    },
    "3861": {
      "op": "ADD"
    },
    "3862": {
      "op": "CALLDATALOAD"
    },
    "3863": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3872": {
      "op": "DUP1"
    },
    "3873": {
      "op": "DUP3"
    },
    "3874": {
      "op": "GT"
    },
    "3875": {
      "op": "ISZERO"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3879": {
      "op": "JUMPI"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3882": {
      "op": "DUP1"
    },
    "3883": {
      "op": "REVERT"
    },
    "3884": {
      "op": "JUMPDEST"
    },
    "3885": {
      "op": "DUP2"
    },
    "3886": {
      "op": "DUP8"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "op": "SWAP2"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "op": "DUP8"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3893": {
      "op": "DUP4"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "SLT"
    },
    "3896": {
      "op": "PUSH2",
      "value": "0xF40"
    },
    "3899": {
      "op": "JUMPI"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3902": {
      "op": "DUP1"
    },
    "3903": {
      "op": "REVERT"
    },
    "3904": {
      "op": "JUMPDEST"
    },
    "3905": {
      "op": "DUP2"
    },
    "3906": {
      "op": "CALLDATALOAD"
    },
    "3907": {
      "op": "DUP2"
    },
    "3908": {
      "op": "DUP2"
    },
    "3909": {
      "op": "GT"
    },
    "3910": {
      "op": "ISZERO"
    },
    "3911": {
      "op": "PUSH2",
      "value": "0xF52"
    },
    "3914": {
      "op": "JUMPI"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0xF52"
    },
    "3918": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "3921": {
      "jump": "i",
      "op": "JUMP"
    },
    "3922": {
      "op": "JUMPDEST"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3925": {
      "op": "MLOAD"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3928": {
      "op": "DUP3"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3932": {
      "op": "NOT"
    },
    "3933": {
      "op": "SWAP1"
    },
    "3934": {
      "op": "DUP2"
    },
    "3935": {
      "op": "AND"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3938": {
      "op": "ADD"
    },
    "3939": {
      "op": "AND"
    },
    "3940": {
      "op": "DUP2"
    },
    "3941": {
      "op": "ADD"
    },
    "3942": {
      "op": "SWAP1"
    },
    "3943": {
      "op": "DUP4"
    },
    "3944": {
      "op": "DUP3"
    },
    "3945": {
      "op": "GT"
    },
    "3946": {
      "op": "DUP2"
    },
    "3947": {
      "op": "DUP4"
    },
    "3948": {
      "op": "LT"
    },
    "3949": {
      "op": "OR"
    },
    "3950": {
      "op": "ISZERO"
    },
    "3951": {
      "op": "PUSH2",
      "value": "0xF7A"
    },
    "3954": {
      "op": "JUMPI"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0xF7A"
    },
    "3958": {
      "op": "PUSH2",
      "value": "0xEC5"
    },
    "3961": {
      "jump": "i",
      "op": "JUMP"
    },
    "3962": {
      "op": "JUMPDEST"
    },
    "3963": {
      "op": "DUP2"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3966": {
      "op": "MSTORE"
    },
    "3967": {
      "op": "DUP3"
    },
    "3968": {
      "op": "DUP2"
    },
    "3969": {
      "op": "MSTORE"
    },
    "3970": {
      "op": "DUP11"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3973": {
      "op": "DUP5"
    },
    "3974": {
      "op": "DUP8"
    },
    "3975": {
      "op": "ADD"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "op": "GT"
    },
    "3978": {
      "op": "ISZERO"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3982": {
      "op": "JUMPI"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3985": {
      "op": "DUP1"
    },
    "3986": {
      "op": "REVERT"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "DUP3"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3991": {
      "op": "DUP7"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3995": {
      "op": "DUP4"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "CALLDATACOPY"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4002": {
      "op": "DUP5"
    },
    "4003": {
      "op": "DUP4"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "MSTORE"
    },
    "4007": {
      "op": "DUP1"
    },
    "4008": {
      "op": "SWAP6"
    },
    "4009": {
      "op": "POP"
    },
    "4010": {
      "op": "POP"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "op": "POP"
    },
    "4015": {
      "op": "SWAP3"
    },
    "4016": {
      "op": "SWAP6"
    },
    "4017": {
      "op": "SWAP2"
    },
    "4018": {
      "op": "SWAP5"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "SWAP3"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "jump": "o",
      "op": "JUMP"
    },
    "4023": {
      "op": "JUMPDEST"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4029": {
      "op": "DUP4"
    },
    "4030": {
      "op": "DUP6"
    },
    "4031": {
      "op": "SUB"
    },
    "4032": {
      "op": "SLT"
    },
    "4033": {
      "op": "ISZERO"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xFCA"
    },
    "4037": {
      "op": "JUMPI"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4040": {
      "op": "DUP1"
    },
    "4041": {
      "op": "REVERT"
    },
    "4042": {
      "op": "JUMPDEST"
    },
    "4043": {
      "op": "PUSH2",
      "value": "0xFD3"
    },
    "4046": {
      "op": "DUP4"
    },
    "4047": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "4050": {
      "jump": "i",
      "op": "JUMP"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "SWAP2"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "op": "PUSH2",
      "value": "0xFE1"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4059": {
      "op": "DUP5"
    },
    "4060": {
      "op": "ADD"
    },
    "4061": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "4064": {
      "jump": "i",
      "op": "JUMP"
    },
    "4065": {
      "op": "JUMPDEST"
    },
    "4066": {
      "op": "SWAP1"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "op": "SWAP3"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "SWAP3"
    },
    "4071": {
      "op": "SWAP1"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "jump": "o",
      "op": "JUMP"
    },
    "4074": {
      "op": "JUMPDEST"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4077": {
      "op": "DUP2"
    },
    "4078": {
      "op": "DUP2"
    },
    "4079": {
      "op": "SHR"
    },
    "4080": {
      "op": "SWAP1"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "AND"
    },
    "4083": {
      "op": "DUP1"
    },
    "4084": {
      "op": "PUSH2",
      "value": "0xFFE"
    },
    "4087": {
      "op": "JUMPI"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4090": {
      "op": "DUP3"
    },
    "4091": {
      "op": "AND"
    },
    "4092": {
      "op": "SWAP2"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "op": "JUMPDEST"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4097": {
      "op": "DUP3"
    },
    "4098": {
      "op": "LT"
    },
    "4099": {
      "op": "DUP2"
    },
    "4100": {
      "op": "SUB"
    },
    "4101": {
      "op": "PUSH2",
      "value": "0x101E"
    },
    "4104": {
      "op": "JUMPI"
    },
    "4105": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4112": {
      "op": "SHL"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4115": {
      "op": "MSTORE"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4120": {
      "op": "MSTORE"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4125": {
      "op": "REVERT"
    },
    "4126": {
      "op": "JUMPDEST"
    },
    "4127": {
      "op": "POP"
    },
    "4128": {
      "op": "SWAP2"
    },
    "4129": {
      "op": "SWAP1"
    },
    "4130": {
      "op": "POP"
    },
    "4131": {
      "jump": "o",
      "op": "JUMP"
    },
    "4132": {
      "op": "JUMPDEST"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4135": {
      "op": "DUP1"
    },
    "4136": {
      "op": "DUP3"
    },
    "4137": {
      "op": "MSTORE"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4140": {
      "op": "SWAP1"
    },
    "4141": {
      "op": "DUP3"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "op": "MSTORE"
    },
    "4144": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4179": {
      "op": "DUP3"
    },
    "4180": {
      "op": "ADD"
    },
    "4181": {
      "op": "MSTORE"
    },
    "4182": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4202": {
      "op": "SHL"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4205": {
      "op": "DUP3"
    },
    "4206": {
      "op": "ADD"
    },
    "4207": {
      "op": "MSTORE"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "SWAP1"
    },
    "4212": {
      "jump": "o",
      "op": "JUMP"
    },
    "4213": {
      "op": "JUMPDEST"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4216": {
      "op": "DUP4"
    },
    "4217": {
      "op": "MLOAD"
    },
    "4218": {
      "op": "PUSH2",
      "value": "0x1087"
    },
    "4221": {
      "op": "DUP2"
    },
    "4222": {
      "op": "DUP5"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4225": {
      "op": "DUP9"
    },
    "4226": {
      "op": "ADD"
    },
    "4227": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "4230": {
      "jump": "i",
      "op": "JUMP"
    },
    "4231": {
      "op": "JUMPDEST"
    },
    "4232": {
      "op": "DUP4"
    },
    "4233": {
      "op": "MLOAD"
    },
    "4234": {
      "op": "SWAP1"
    },
    "4235": {
      "op": "DUP4"
    },
    "4236": {
      "op": "ADD"
    },
    "4237": {
      "op": "SWAP1"
    },
    "4238": {
      "op": "PUSH2",
      "value": "0x109B"
    },
    "4241": {
      "op": "DUP2"
    },
    "4242": {
      "op": "DUP4"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4245": {
      "op": "DUP9"
    },
    "4246": {
      "op": "ADD"
    },
    "4247": {
      "op": "PUSH2",
      "value": "0xD68"
    },
    "4250": {
      "jump": "i",
      "op": "JUMP"
    },
    "4251": {
      "op": "JUMPDEST"
    },
    "4252": {
      "op": "ADD"
    },
    "4253": {
      "op": "SWAP5"
    },
    "4254": {
      "op": "SWAP4"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "op": "POP"
    },
    "4258": {
      "op": "POP"
    },
    "4259": {
      "jump": "o",
      "op": "JUMP"
    },
    "4260": {
      "op": "JUMPDEST"
    },
    "4261": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4268": {
      "op": "SHL"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4281": {
      "op": "REVERT"
    },
    "4282": {
      "op": "JUMPDEST"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "DUP3"
    },
    "4287": {
      "op": "LT"
    },
    "4288": {
      "op": "ISZERO"
    },
    "4289": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4292": {
      "op": "JUMPI"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4296": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "4299": {
      "jump": "i",
      "op": "JUMP"
    },
    "4300": {
      "op": "JUMPDEST"
    },
    "4301": {
      "op": "POP"
    },
    "4302": {
      "op": "SUB"
    },
    "4303": {
      "op": "SWAP1"
    },
    "4304": {
      "jump": "o",
      "op": "JUMP"
    },
    "4305": {
      "op": "JUMPDEST"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4308": {
      "op": "DUP3"
    },
    "4309": {
      "op": "NOT"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "GT"
    },
    "4312": {
      "op": "ISZERO"
    },
    "4313": {
      "op": "PUSH2",
      "value": "0x10E4"
    },
    "4316": {
      "op": "JUMPI"
    },
    "4317": {
      "op": "PUSH2",
      "value": "0x10E4"
    },
    "4320": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "4323": {
      "jump": "i",
      "op": "JUMP"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "POP"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "op": "SWAP1"
    },
    "4328": {
      "jump": "o",
      "op": "JUMP"
    },
    "4329": {
      "op": "JUMPDEST"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4332": {
      "op": "DUP1"
    },
    "4333": {
      "op": "DUP3"
    },
    "4334": {
      "op": "MSTORE"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4337": {
      "op": "SWAP1"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "ADD"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4400": {
      "op": "SHL"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "op": "MSTORE"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "SWAP1"
    },
    "4410": {
      "jump": "o",
      "op": "JUMP"
    },
    "4411": {
      "op": "JUMPDEST"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "DUP3"
    },
    "4417": {
      "op": "ADD"
    },
    "4418": {
      "op": "PUSH2",
      "value": "0x114D"
    },
    "4421": {
      "op": "JUMPI"
    },
    "4422": {
      "op": "PUSH2",
      "value": "0x114D"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "4428": {
      "jump": "i",
      "op": "JUMP"
    },
    "4429": {
      "op": "JUMPDEST"
    },
    "4430": {
      "op": "POP"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "op": "SWAP1"
    },
    "4435": {
      "jump": "o",
      "op": "JUMP"
    },
    "4436": {
      "op": "JUMPDEST"
    },
    "4437": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4444": {
      "op": "SHL"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4447": {
      "op": "MSTORE"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4452": {
      "op": "MSTORE"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4457": {
      "op": "REVERT"
    },
    "4458": {
      "op": "JUMPDEST"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4461": {
      "op": "DUP3"
    },
    "4462": {
      "op": "PUSH2",
      "value": "0x1179"
    },
    "4465": {
      "op": "JUMPI"
    },
    "4466": {
      "op": "PUSH2",
      "value": "0x1179"
    },
    "4469": {
      "op": "PUSH2",
      "value": "0x1154"
    },
    "4472": {
      "jump": "i",
      "op": "JUMP"
    },
    "4473": {
      "op": "JUMPDEST"
    },
    "4474": {
      "op": "POP"
    },
    "4475": {
      "op": "DIV"
    },
    "4476": {
      "op": "SWAP1"
    },
    "4477": {
      "jump": "o",
      "op": "JUMP"
    },
    "4478": {
      "op": "JUMPDEST"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4481": {
      "op": "DUP3"
    },
    "4482": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4485": {
      "op": "JUMPI"
    },
    "4486": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4489": {
      "op": "PUSH2",
      "value": "0x1154"
    },
    "4492": {
      "jump": "i",
      "op": "JUMP"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "POP"
    },
    "4495": {
      "op": "MOD"
    },
    "4496": {
      "op": "SWAP1"
    },
    "4497": {
      "jump": "o",
      "op": "JUMP"
    },
    "4498": {
      "op": "JUMPDEST"
    },
    "4499": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4506": {
      "op": "SHL"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4509": {
      "op": "MSTORE"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4514": {
      "op": "MSTORE"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4519": {
      "op": "REVERT"
    },
    "4520": {
      "op": "JUMPDEST"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "op": "SUB"
    },
    "4529": {
      "op": "DUP6"
    },
    "4530": {
      "op": "DUP2"
    },
    "4531": {
      "op": "AND"
    },
    "4532": {
      "op": "DUP3"
    },
    "4533": {
      "op": "MSTORE"
    },
    "4534": {
      "op": "DUP5"
    },
    "4535": {
      "op": "AND"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4538": {
      "op": "DUP3"
    },
    "4539": {
      "op": "ADD"
    },
    "4540": {
      "op": "MSTORE"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4543": {
      "op": "DUP2"
    },
    "4544": {
      "op": "ADD"
    },
    "4545": {
      "op": "DUP4"
    },
    "4546": {
      "op": "SWAP1"
    },
    "4547": {
      "op": "MSTORE"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4552": {
      "op": "DUP3"
    },
    "4553": {
      "op": "ADD"
    },
    "4554": {
      "op": "DUP2"
    },
    "4555": {
      "op": "SWAP1"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4559": {
      "op": "SWAP1"
    },
    "4560": {
      "op": "PUSH2",
      "value": "0x11DB"
    },
    "4563": {
      "op": "SWAP1"
    },
    "4564": {
      "op": "DUP4"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "DUP5"
    },
    "4567": {
      "op": "PUSH2",
      "value": "0xD94"
    },
    "4570": {
      "jump": "i",
      "op": "JUMP"
    },
    "4571": {
      "op": "JUMPDEST"
    },
    "4572": {
      "op": "SWAP7"
    },
    "4573": {
      "op": "SWAP6"
    },
    "4574": {
      "op": "POP"
    },
    "4575": {
      "op": "POP"
    },
    "4576": {
      "op": "POP"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "jump": "o",
      "op": "JUMP"
    },
    "4581": {
      "op": "JUMPDEST"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4586": {
      "op": "DUP3"
    },
    "4587": {
      "op": "DUP5"
    },
    "4588": {
      "op": "SUB"
    },
    "4589": {
      "op": "SLT"
    },
    "4590": {
      "op": "ISZERO"
    },
    "4591": {
      "op": "PUSH2",
      "value": "0x11F7"
    },
    "4594": {
      "op": "JUMPI"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4597": {
      "op": "DUP1"
    },
    "4598": {
      "op": "REVERT"
    },
    "4599": {
      "op": "JUMPDEST"
    },
    "4600": {
      "op": "DUP2"
    },
    "4601": {
      "op": "MLOAD"
    },
    "4602": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "4605": {
      "op": "DUP2"
    },
    "4606": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "4609": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "42bbb6ca8f45cc325bde14c9bdaf85e31eeb6fe9",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "554:12705:0:-:0;;;1316:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1382:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1405:17:0;;;;:7;;:17;;;;;:::i;:::-;;1316:113;;554:12705;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;554:12705:0;;;-1:-1:-1;554:12705:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:10;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:10;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:10:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:10;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;554:12705:0;;;;;;",
  "sourcePath": "/Users/gerrithall/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}