{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "name": "interface_id",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/VyperNFT.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 35,
        "end_lineno": 6,
        "level": 0,
        "lineno": 6,
        "module": "vyper.interfaces",
        "name": "ERC165",
        "node_id": 1,
        "src": "240:35:0"
      },
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 35,
        "end_lineno": 7,
        "level": 0,
        "lineno": 7,
        "module": "vyper.interfaces",
        "name": "ERC721",
        "node_id": 3,
        "src": "276:35:0"
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 18,
          "end_lineno": 9,
          "id": "ERC721",
          "lineno": 9,
          "node_id": 8,
          "src": "325:6:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 9,
        "lineno": 9,
        "node_id": 5,
        "simple": 1,
        "src": "313:18:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 9,
          "id": "implements",
          "lineno": 9,
          "node_id": 6,
          "src": "313:10:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 18,
          "end_lineno": 10,
          "id": "ERC165",
          "lineno": 10,
          "node_id": 13,
          "src": "344:6:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 10,
        "lineno": 10,
        "node_id": 10,
        "simple": 1,
        "src": "332:18:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 10,
          "id": "implements",
          "lineno": 10,
          "node_id": 11,
          "src": "332:10:0"
        },
        "value": null
      },
      {
        "ast_type": "InterfaceDef",
        "body": [
          {
            "args": {
              "args": [
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 23,
                    "end_col_offset": 30,
                    "end_lineno": 15,
                    "id": "address",
                    "lineno": 15,
                    "node_id": 19,
                    "src": "485:7:0"
                  },
                  "arg": "_operator",
                  "ast_type": "arg",
                  "col_offset": 12,
                  "end_col_offset": 30,
                  "end_lineno": 15,
                  "lineno": 15,
                  "node_id": 18,
                  "src": "474:18:0"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 26,
                    "end_lineno": 16,
                    "id": "address",
                    "lineno": 16,
                    "node_id": 22,
                    "src": "513:7:0"
                  },
                  "arg": "_from",
                  "ast_type": "arg",
                  "col_offset": 12,
                  "end_col_offset": 26,
                  "end_lineno": 16,
                  "lineno": 16,
                  "node_id": 21,
                  "src": "506:14:0"
                },
                {
                  "annotation": {
                    "ast_type": "Name",
                    "col_offset": 22,
                    "end_col_offset": 29,
                    "end_lineno": 17,
                    "id": "uint256",
                    "lineno": 17,
                    "node_id": 25,
                    "src": "544:7:0"
                  },
                  "arg": "_tokenId",
                  "ast_type": "arg",
                  "col_offset": 12,
                  "end_col_offset": 29,
                  "end_lineno": 17,
                  "lineno": 17,
                  "node_id": 24,
                  "src": "534:17:0"
                },
                {
                  "annotation": {
                    "ast_type": "Subscript",
                    "col_offset": 19,
                    "end_col_offset": 30,
                    "end_lineno": 18,
                    "lineno": 18,
                    "node_id": 28,
                    "slice": {
                      "ast_type": "Index",
                      "col_offset": 19,
                      "end_col_offset": 30,
                      "end_lineno": 18,
                      "lineno": 18,
                      "node_id": 33,
                      "src": "572:11:0",
                      "value": {
                        "ast_type": "Int",
                        "col_offset": 25,
                        "end_col_offset": 29,
                        "end_lineno": 18,
                        "lineno": 18,
                        "node_id": 31,
                        "src": "578:4:0",
                        "value": 1024
                      }
                    },
                    "src": "572:11:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 19,
                      "end_col_offset": 24,
                      "end_lineno": 18,
                      "id": "Bytes",
                      "lineno": 18,
                      "node_id": 29,
                      "src": "572:5:0"
                    }
                  },
                  "arg": "_data",
                  "ast_type": "arg",
                  "col_offset": 12,
                  "end_col_offset": 30,
                  "end_lineno": 18,
                  "lineno": 18,
                  "node_id": 27,
                  "src": "565:18:0"
                }
              ],
              "ast_type": "arguments",
              "col_offset": 12,
              "default": null,
              "defaults": [],
              "end_col_offset": 30,
              "end_lineno": 18,
              "lineno": 15,
              "node_id": 17,
              "src": "474:109:0"
            },
            "ast_type": "FunctionDef",
            "body": [
              {
                "ast_type": "Expr",
                "col_offset": 22,
                "end_col_offset": 26,
                "end_lineno": 19,
                "lineno": 19,
                "node_id": 34,
                "src": "606:4:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 26,
                  "end_lineno": 19,
                  "id": "view",
                  "lineno": 19,
                  "node_id": 35,
                  "src": "606:4:0"
                }
              }
            ],
            "col_offset": 4,
            "decorator_list": [],
            "doc_string": null,
            "end_col_offset": 26,
            "end_lineno": 19,
            "lineno": 14,
            "name": "onERC721Received",
            "node_id": 16,
            "pos": null,
            "returns": {
              "ast_type": "Name",
              "col_offset": 13,
              "end_col_offset": 20,
              "end_lineno": 19,
              "id": "bytes32",
              "lineno": 19,
              "node_id": 37,
              "src": "597:7:0"
            },
            "src": "440:170:0"
          }
        ],
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 19,
        "lineno": 13,
        "name": "ERC721Receiver",
        "node_id": 15,
        "src": "410:200:0"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 27,
                  "end_lineno": 30,
                  "id": "address",
                  "lineno": 30,
                  "node_id": 46,
                  "src": "1240:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 12,
              "end_col_offset": 28,
              "end_lineno": 30,
              "func": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 19,
                "end_lineno": 30,
                "id": "indexed",
                "lineno": 30,
                "node_id": 44,
                "src": "1232:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 30,
              "node_id": 43,
              "src": "1232:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 30,
            "lineno": 30,
            "node_id": 40,
            "simple": 1,
            "src": "1224:24:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 30,
              "id": "sender",
              "lineno": 30,
              "node_id": 41,
              "src": "1224:6:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 31,
                  "id": "address",
                  "lineno": 31,
                  "node_id": 54,
                  "src": "1271:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 31,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 31,
                "id": "indexed",
                "lineno": 31,
                "node_id": 52,
                "src": "1263:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 31,
              "node_id": 51,
              "src": "1263:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 31,
            "lineno": 31,
            "node_id": 48,
            "simple": 1,
            "src": "1253:26:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 31,
              "id": "receiver",
              "lineno": 31,
              "node_id": 49,
              "src": "1253:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 32,
                  "id": "uint256",
                  "lineno": 32,
                  "node_id": 62,
                  "src": "1301:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 13,
              "end_col_offset": 29,
              "end_lineno": 32,
              "func": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 32,
                "id": "indexed",
                "lineno": 32,
                "node_id": 60,
                "src": "1293:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 32,
              "node_id": 59,
              "src": "1293:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 32,
            "lineno": 32,
            "node_id": 56,
            "simple": 1,
            "src": "1284:25:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 11,
              "end_lineno": 32,
              "id": "tokenId",
              "lineno": 32,
              "node_id": 57,
              "src": "1284:7:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 29,
        "end_lineno": 32,
        "lineno": 29,
        "name": "Transfer",
        "node_id": 39,
        "src": "1204:105:0"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 41,
                  "id": "address",
                  "lineno": 41,
                  "node_id": 71,
                  "src": "1739:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 41,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 18,
                "end_lineno": 41,
                "id": "indexed",
                "lineno": 41,
                "node_id": 69,
                "src": "1731:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 41,
              "node_id": 68,
              "src": "1731:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 41,
            "lineno": 41,
            "node_id": 65,
            "simple": 1,
            "src": "1724:23:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 41,
              "id": "owner",
              "lineno": 41,
              "node_id": 66,
              "src": "1724:5:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 42,
                  "id": "address",
                  "lineno": 42,
                  "node_id": 79,
                  "src": "1770:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 42,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 42,
                "id": "indexed",
                "lineno": 42,
                "node_id": 77,
                "src": "1762:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 42,
              "node_id": 76,
              "src": "1762:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 42,
            "lineno": 42,
            "node_id": 73,
            "simple": 1,
            "src": "1752:26:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 42,
              "id": "approved",
              "lineno": 42,
              "node_id": 74,
              "src": "1752:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 43,
                  "id": "uint256",
                  "lineno": 43,
                  "node_id": 87,
                  "src": "1800:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 13,
              "end_col_offset": 29,
              "end_lineno": 43,
              "func": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 43,
                "id": "indexed",
                "lineno": 43,
                "node_id": 85,
                "src": "1792:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 43,
              "node_id": 84,
              "src": "1792:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 43,
            "lineno": 43,
            "node_id": 81,
            "simple": 1,
            "src": "1783:25:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 11,
              "end_lineno": 43,
              "id": "tokenId",
              "lineno": 43,
              "node_id": 82,
              "src": "1783:7:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 29,
        "end_lineno": 43,
        "lineno": 40,
        "name": "Approval",
        "node_id": 64,
        "src": "1704:104:0"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 52,
                  "id": "address",
                  "lineno": 52,
                  "node_id": 96,
                  "src": "2179:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 52,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 18,
                "end_lineno": 52,
                "id": "indexed",
                "lineno": 52,
                "node_id": 94,
                "src": "2171:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 52,
              "node_id": 93,
              "src": "2171:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 52,
            "lineno": 52,
            "node_id": 90,
            "simple": 1,
            "src": "2164:23:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 52,
              "id": "owner",
              "lineno": 52,
              "node_id": 91,
              "src": "2164:5:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 53,
                  "id": "address",
                  "lineno": 53,
                  "node_id": 104,
                  "src": "2210:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 53,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 53,
                "id": "indexed",
                "lineno": 53,
                "node_id": 102,
                "src": "2202:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 53,
              "node_id": 101,
              "src": "2202:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 53,
            "lineno": 53,
            "node_id": 98,
            "simple": 1,
            "src": "2192:26:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 53,
              "id": "operator",
              "lineno": 53,
              "node_id": 99,
              "src": "2192:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 14,
              "end_col_offset": 18,
              "end_lineno": 54,
              "id": "bool",
              "lineno": 54,
              "node_id": 109,
              "src": "2233:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 54,
            "lineno": 54,
            "node_id": 106,
            "simple": 1,
            "src": "2223:14:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 54,
              "id": "approved",
              "lineno": 54,
              "node_id": 107,
              "src": "2223:8:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 54,
        "lineno": 51,
        "name": "ApprovalForAll",
        "node_id": 89,
        "src": "2138:99:0"
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 11,
          "end_col_offset": 36,
          "end_lineno": 58,
          "lineno": 58,
          "node_id": 114,
          "slice": {
            "ast_type": "Index",
            "col_offset": 11,
            "end_col_offset": 36,
            "end_lineno": 58,
            "lineno": 58,
            "node_id": 124,
            "src": "2307:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 19,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 58,
                  "id": "uint256",
                  "lineno": 58,
                  "node_id": 118,
                  "src": "2315:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 28,
                  "end_col_offset": 35,
                  "end_lineno": 58,
                  "id": "address",
                  "lineno": 58,
                  "node_id": 120,
                  "src": "2324:7:0"
                }
              ],
              "end_col_offset": 35,
              "end_lineno": 58,
              "lineno": 58,
              "node_id": 117,
              "src": "2315:16:0"
            }
          },
          "src": "2307:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 18,
            "end_lineno": 58,
            "id": "HashMap",
            "lineno": 58,
            "node_id": 115,
            "src": "2307:7:0"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 36,
        "end_lineno": 58,
        "lineno": 58,
        "node_id": 111,
        "simple": 1,
        "src": "2296:36:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 58,
          "id": "idToOwner",
          "lineno": 58,
          "node_id": 112,
          "src": "2296:9:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 15,
          "end_col_offset": 40,
          "end_lineno": 61,
          "lineno": 61,
          "node_id": 128,
          "slice": {
            "ast_type": "Index",
            "col_offset": 15,
            "end_col_offset": 40,
            "end_lineno": 61,
            "lineno": 61,
            "node_id": 138,
            "src": "2397:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 23,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 23,
                  "end_col_offset": 30,
                  "end_lineno": 61,
                  "id": "uint256",
                  "lineno": 61,
                  "node_id": 132,
                  "src": "2405:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 32,
                  "end_col_offset": 39,
                  "end_lineno": 61,
                  "id": "address",
                  "lineno": 61,
                  "node_id": 134,
                  "src": "2414:7:0"
                }
              ],
              "end_col_offset": 39,
              "end_lineno": 61,
              "lineno": 61,
              "node_id": 131,
              "src": "2405:16:0"
            }
          },
          "src": "2397:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 22,
            "end_lineno": 61,
            "id": "HashMap",
            "lineno": 61,
            "node_id": 129,
            "src": "2397:7:0"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 40,
        "end_lineno": 61,
        "lineno": 61,
        "node_id": 125,
        "simple": 1,
        "src": "2382:40:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 13,
          "end_lineno": 61,
          "id": "idToApprovals",
          "lineno": 61,
          "node_id": 126,
          "src": "2382:13:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 21,
          "end_col_offset": 46,
          "end_lineno": 64,
          "lineno": 64,
          "node_id": 142,
          "slice": {
            "ast_type": "Index",
            "col_offset": 21,
            "end_col_offset": 46,
            "end_lineno": 64,
            "lineno": 64,
            "node_id": 152,
            "src": "2503:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 29,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 36,
                  "end_lineno": 64,
                  "id": "address",
                  "lineno": 64,
                  "node_id": 146,
                  "src": "2511:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 45,
                  "end_lineno": 64,
                  "id": "uint256",
                  "lineno": 64,
                  "node_id": 148,
                  "src": "2520:7:0"
                }
              ],
              "end_col_offset": 45,
              "end_lineno": 64,
              "lineno": 64,
              "node_id": 145,
              "src": "2511:16:0"
            }
          },
          "src": "2503:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 21,
            "end_col_offset": 28,
            "end_lineno": 64,
            "id": "HashMap",
            "lineno": 64,
            "node_id": 143,
            "src": "2503:7:0"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 46,
        "end_lineno": 64,
        "lineno": 64,
        "node_id": 139,
        "simple": 1,
        "src": "2482:46:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 19,
          "end_lineno": 64,
          "id": "ownerToNFTokenCount",
          "lineno": 64,
          "node_id": 140,
          "src": "2482:19:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 18,
          "end_col_offset": 58,
          "end_lineno": 67,
          "lineno": 67,
          "node_id": 156,
          "slice": {
            "ast_type": "Index",
            "col_offset": 18,
            "end_col_offset": 58,
            "end_lineno": 67,
            "lineno": 67,
            "node_id": 175,
            "src": "2616:40:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 26,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 33,
                  "end_lineno": 67,
                  "id": "address",
                  "lineno": 67,
                  "node_id": 160,
                  "src": "2624:7:0"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 35,
                  "end_col_offset": 57,
                  "end_lineno": 67,
                  "lineno": 67,
                  "node_id": 162,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 35,
                    "end_col_offset": 57,
                    "end_lineno": 67,
                    "lineno": 67,
                    "node_id": 172,
                    "src": "2633:22:0",
                    "value": {
                      "ast_type": "Tuple",
                      "col_offset": 43,
                      "elements": [
                        {
                          "ast_type": "Name",
                          "col_offset": 43,
                          "end_col_offset": 50,
                          "end_lineno": 67,
                          "id": "address",
                          "lineno": 67,
                          "node_id": 166,
                          "src": "2641:7:0"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 52,
                          "end_col_offset": 56,
                          "end_lineno": 67,
                          "id": "bool",
                          "lineno": 67,
                          "node_id": 168,
                          "src": "2650:4:0"
                        }
                      ],
                      "end_col_offset": 56,
                      "end_lineno": 67,
                      "lineno": 67,
                      "node_id": 165,
                      "src": "2641:13:0"
                    }
                  },
                  "src": "2633:22:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 35,
                    "end_col_offset": 42,
                    "end_lineno": 67,
                    "id": "HashMap",
                    "lineno": 67,
                    "node_id": 163,
                    "src": "2633:7:0"
                  }
                }
              ],
              "end_col_offset": 57,
              "end_lineno": 67,
              "lineno": 67,
              "node_id": 159,
              "src": "2624:31:0"
            }
          },
          "src": "2616:40:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 25,
            "end_lineno": 67,
            "id": "HashMap",
            "lineno": 67,
            "node_id": 157,
            "src": "2616:7:0"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 58,
        "end_lineno": 67,
        "lineno": 67,
        "node_id": 153,
        "simple": 1,
        "src": "2598:58:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 16,
          "end_lineno": 67,
          "id": "ownerToOperators",
          "lineno": 67,
          "node_id": 154,
          "src": "2598:16:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 8,
          "end_col_offset": 15,
          "end_lineno": 70,
          "id": "address",
          "lineno": 70,
          "node_id": 179,
          "src": "2713:7:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 15,
        "end_lineno": 70,
        "lineno": 70,
        "node_id": 176,
        "simple": 1,
        "src": "2705:15:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 70,
          "id": "minter",
          "lineno": 70,
          "node_id": 177,
          "src": "2705:6:0"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Subscript",
              "col_offset": 31,
              "end_col_offset": 40,
              "end_lineno": 73,
              "lineno": 73,
              "node_id": 187,
              "slice": {
                "ast_type": "Index",
                "col_offset": 31,
                "end_col_offset": 40,
                "end_lineno": 73,
                "lineno": 73,
                "node_id": 192,
                "src": "2806:9:0",
                "value": {
                  "ast_type": "Int",
                  "col_offset": 38,
                  "end_col_offset": 39,
                  "end_lineno": 73,
                  "lineno": 73,
                  "node_id": 190,
                  "src": "2813:1:0",
                  "value": 5
                }
              },
              "src": "2806:9:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 37,
                "end_lineno": 73,
                "id": "bytes4",
                "lineno": 73,
                "node_id": 188,
                "src": "2806:6:0"
              }
            }
          ],
          "ast_type": "Call",
          "col_offset": 22,
          "end_col_offset": 41,
          "end_lineno": 73,
          "func": {
            "ast_type": "Name",
            "col_offset": 22,
            "end_col_offset": 30,
            "end_lineno": 73,
            "id": "constant",
            "lineno": 73,
            "node_id": 185,
            "src": "2797:8:0"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 73,
          "node_id": 184,
          "src": "2797:19:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 1,
        "end_lineno": 79,
        "lineno": 73,
        "node_id": 181,
        "simple": 1,
        "src": "2775:208:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 20,
          "end_lineno": 73,
          "id": "SUPPORTED_INTERFACES",
          "lineno": 73,
          "node_id": 182,
          "src": "2775:20:0"
        },
        "value": {
          "ast_type": "List",
          "col_offset": 44,
          "elements": [
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 74,
              "lineno": 74,
              "node_id": 194,
              "src": "2825:10:0",
              "value": "0x01FFC9A7"
            },
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 75,
              "lineno": 75,
              "node_id": 195,
              "src": "2851:10:0",
              "value": "0x80AC58CD"
            },
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 76,
              "lineno": 76,
              "node_id": 196,
              "src": "2877:10:0",
              "value": "0x150B7A02"
            },
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 77,
              "lineno": 77,
              "node_id": 197,
              "src": "2916:10:0",
              "value": "0x5B5E139F"
            },
            {
              "ast_type": "Hex",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 78,
              "lineno": 78,
              "node_id": 198,
              "src": "2950:10:0",
              "value": "0x780E9D63"
            }
          ],
          "end_col_offset": 1,
          "end_lineno": 79,
          "lineno": 73,
          "node_id": 193,
          "src": "2819:164:0"
        }
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 13,
          "end_col_offset": 20,
          "end_lineno": 81,
          "id": "uint256",
          "lineno": 81,
          "node_id": 203,
          "src": "2998:7:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 20,
        "end_lineno": 81,
        "lineno": 81,
        "node_id": 200,
        "simple": 1,
        "src": "2985:20:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 11,
          "end_lineno": 81,
          "id": "totalMinted",
          "lineno": 81,
          "node_id": 201,
          "src": "2985:11:0"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Subscript",
              "col_offset": 16,
              "end_col_offset": 26,
              "end_lineno": 82,
              "lineno": 82,
              "node_id": 211,
              "slice": {
                "ast_type": "Index",
                "col_offset": 16,
                "end_col_offset": 26,
                "end_lineno": 82,
                "lineno": 82,
                "node_id": 216,
                "src": "3022:10:0",
                "value": {
                  "ast_type": "Int",
                  "col_offset": 23,
                  "end_col_offset": 25,
                  "end_lineno": 82,
                  "lineno": 82,
                  "node_id": 214,
                  "src": "3029:2:0",
                  "value": 32
                }
              },
              "src": "3022:10:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 22,
                "end_lineno": 82,
                "id": "String",
                "lineno": 82,
                "node_id": 212,
                "src": "3022:6:0"
              }
            }
          ],
          "ast_type": "Call",
          "col_offset": 6,
          "end_col_offset": 27,
          "end_lineno": 82,
          "func": {
            "ast_type": "Name",
            "col_offset": 6,
            "end_col_offset": 15,
            "end_lineno": 82,
            "id": "immutable",
            "lineno": 82,
            "node_id": 209,
            "src": "3012:9:0"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 82,
          "node_id": 208,
          "src": "3012:21:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 27,
        "end_lineno": 82,
        "lineno": 82,
        "node_id": 205,
        "simple": 1,
        "src": "3006:27:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 4,
          "end_lineno": 82,
          "id": "NAME",
          "lineno": 82,
          "node_id": 206,
          "src": "3006:4:0"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Subscript",
              "col_offset": 18,
              "end_col_offset": 28,
              "end_lineno": 83,
              "lineno": 83,
              "node_id": 223,
              "slice": {
                "ast_type": "Index",
                "col_offset": 18,
                "end_col_offset": 28,
                "end_lineno": 83,
                "lineno": 83,
                "node_id": 228,
                "src": "3052:10:0",
                "value": {
                  "ast_type": "Int",
                  "col_offset": 25,
                  "end_col_offset": 27,
                  "end_lineno": 83,
                  "lineno": 83,
                  "node_id": 226,
                  "src": "3059:2:0",
                  "value": 32
                }
              },
              "src": "3052:10:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 24,
                "end_lineno": 83,
                "id": "String",
                "lineno": 83,
                "node_id": 224,
                "src": "3052:6:0"
              }
            }
          ],
          "ast_type": "Call",
          "col_offset": 8,
          "end_col_offset": 29,
          "end_lineno": 83,
          "func": {
            "ast_type": "Name",
            "col_offset": 8,
            "end_col_offset": 17,
            "end_lineno": 83,
            "id": "immutable",
            "lineno": 83,
            "node_id": 221,
            "src": "3042:9:0"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 83,
          "node_id": 220,
          "src": "3042:21:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 29,
        "end_lineno": 83,
        "lineno": 83,
        "node_id": 217,
        "simple": 1,
        "src": "3034:29:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 83,
          "id": "SYMBOL",
          "lineno": 83,
          "node_id": 218,
          "src": "3034:6:0"
        },
        "value": null
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 88,
          "lineno": 88,
          "node_id": 230,
          "src": "3077:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 92,
            "lineno": 92,
            "node_id": 233,
            "src": "3144:24:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "minter",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 92,
              "lineno": 92,
              "node_id": 234,
              "src": "3144:11:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 92,
                "id": "self",
                "lineno": 92,
                "node_id": 235,
                "src": "3144:4:0"
              }
            },
            "value": {
              "ast_type": "Attribute",
              "attr": "sender",
              "col_offset": 18,
              "end_col_offset": 28,
              "end_lineno": 92,
              "lineno": 92,
              "node_id": 238,
              "src": "3158:10:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 21,
                "end_lineno": 92,
                "id": "msg",
                "lineno": 92,
                "node_id": 239,
                "src": "3158:3:0"
              }
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 93,
            "lineno": 93,
            "node_id": 242,
            "src": "3173:14:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 8,
              "end_lineno": 93,
              "id": "NAME",
              "lineno": 93,
              "node_id": 243,
              "src": "3173:4:0"
            },
            "value": {
              "ast_type": "Str",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 93,
              "lineno": 93,
              "node_id": 245,
              "src": "3180:7:0",
              "value": "Token"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 94,
            "lineno": 94,
            "node_id": 246,
            "src": "3192:14:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 94,
              "id": "SYMBOL",
              "lineno": 94,
              "node_id": 247,
              "src": "3192:6:0"
            },
            "value": {
              "ast_type": "Str",
              "col_offset": 13,
              "end_col_offset": 18,
              "end_lineno": 94,
              "lineno": 94,
              "node_id": 249,
              "src": "3201:5:0",
              "value": "TKN"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 87,
            "id": "external",
            "lineno": 87,
            "node_id": 250,
            "src": "3068:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 91,
          "lineno": 89,
          "node_id": 252,
          "src": "3097:42:0",
          "value": "\n    @dev Contract constructor.\n    "
        },
        "end_col_offset": 18,
        "end_lineno": 94,
        "lineno": 88,
        "name": "__init__",
        "node_id": 229,
        "pos": null,
        "returns": null,
        "src": "3077:129:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 36,
                "end_col_offset": 42,
                "end_lineno": 99,
                "id": "bytes4",
                "lineno": 99,
                "node_id": 256,
                "src": "3261:6:0"
              },
              "arg": "interface_id",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 42,
              "end_lineno": 99,
              "lineno": 99,
              "node_id": 255,
              "src": "3247:20:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 22,
          "default": null,
          "defaults": [],
          "end_col_offset": 42,
          "end_lineno": 99,
          "lineno": 99,
          "node_id": 254,
          "src": "3247:20:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 47,
            "end_lineno": 104,
            "lineno": 104,
            "node_id": 260,
            "src": "3401:43:0",
            "value": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 47,
              "end_lineno": 104,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 23,
                "end_lineno": 104,
                "id": "interface_id",
                "lineno": 104,
                "node_id": 262,
                "src": "3408:12:0"
              },
              "lineno": 104,
              "node_id": 261,
              "op": {
                "ast_type": "In",
                "col_offset": 11,
                "end_col_offset": 47,
                "end_lineno": 104,
                "lineno": 104,
                "node_id": 264,
                "src": "3408:36:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 47,
                "end_lineno": 104,
                "id": "SUPPORTED_INTERFACES",
                "lineno": 104,
                "node_id": 265,
                "src": "3424:20:0"
              },
              "src": "3408:36:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 97,
            "id": "pure",
            "lineno": 97,
            "node_id": 267,
            "src": "3210:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 98,
            "id": "external",
            "lineno": 98,
            "node_id": 269,
            "src": "3216:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 103,
          "lineno": 100,
          "node_id": 273,
          "src": "3282:114:0",
          "value": "\n    @dev Interface identification is specified in ERC-165.\n    @param interface_id Id of the interface\n    "
        },
        "end_col_offset": 47,
        "end_lineno": 104,
        "lineno": 99,
        "name": "supportsInterface",
        "node_id": 253,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 47,
          "end_col_offset": 51,
          "end_lineno": 99,
          "id": "bool",
          "lineno": 99,
          "node_id": 271,
          "src": "3272:4:0"
        },
        "src": "3225:219:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 22,
                "end_col_offset": 29,
                "end_lineno": 111,
                "id": "address",
                "lineno": 111,
                "node_id": 277,
                "src": "3509:7:0"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 14,
              "end_col_offset": 29,
              "end_lineno": 111,
              "lineno": 111,
              "node_id": 276,
              "src": "3501:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 14,
          "default": null,
          "defaults": [],
          "end_col_offset": 29,
          "end_lineno": 111,
          "lineno": 111,
          "node_id": 275,
          "src": "3501:15:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 117,
            "lineno": 117,
            "msg": null,
            "node_id": 281,
            "src": "3769:29:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 33,
              "end_lineno": 117,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 17,
                "end_lineno": 117,
                "id": "_owner",
                "lineno": 117,
                "node_id": 283,
                "src": "3776:6:0"
              },
              "lineno": 117,
              "node_id": 282,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 33,
                "end_lineno": 117,
                "lineno": 117,
                "node_id": 1043,
                "src": "3776:22:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 21,
                "end_col_offset": 33,
                "end_lineno": 117,
                "id": "ZERO_ADDRESS",
                "lineno": 117,
                "node_id": 286,
                "src": "3786:12:0"
              },
              "src": "3776:22:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 43,
            "end_lineno": 118,
            "lineno": 118,
            "node_id": 288,
            "src": "3803:39:0",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 43,
              "end_lineno": 118,
              "lineno": 118,
              "node_id": 289,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 43,
                "end_lineno": 118,
                "lineno": 118,
                "node_id": 297,
                "src": "3810:32:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 42,
                  "end_lineno": 118,
                  "id": "_owner",
                  "lineno": 118,
                  "node_id": 294,
                  "src": "3835:6:0"
                }
              },
              "src": "3810:32:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "ownerToNFTokenCount",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 118,
                "lineno": 118,
                "node_id": 290,
                "src": "3810:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 118,
                  "id": "self",
                  "lineno": 118,
                  "node_id": 291,
                  "src": "3810:4:0"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 109,
            "id": "view",
            "lineno": 109,
            "node_id": 298,
            "src": "3472:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 110,
            "id": "external",
            "lineno": 110,
            "node_id": 300,
            "src": "3478:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 116,
          "lineno": 112,
          "node_id": 304,
          "src": "3534:230:0",
          "value": "\n    @dev Returns the number of NFTs owned by `_owner`.\n         Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.\n    @param _owner Address for whom to query the balance.\n    "
        },
        "end_col_offset": 43,
        "end_lineno": 118,
        "lineno": 111,
        "name": "balanceOf",
        "node_id": 274,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 34,
          "end_col_offset": 41,
          "end_lineno": 111,
          "id": "uint256",
          "lineno": 111,
          "node_id": 302,
          "src": "3521:7:0"
        },
        "src": "3487:355:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 22,
                "end_col_offset": 29,
                "end_lineno": 123,
                "id": "uint256",
                "lineno": 123,
                "node_id": 308,
                "src": "3883:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 29,
              "end_lineno": 123,
              "lineno": 123,
              "node_id": 307,
              "src": "3873:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 29,
          "end_lineno": 123,
          "lineno": 123,
          "node_id": 306,
          "src": "3873:17:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 129,
              "id": "address",
              "lineno": 129,
              "node_id": 315,
              "src": "4082:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 129,
            "lineno": 129,
            "node_id": 312,
            "simple": 1,
            "src": "4075:41:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 129,
              "id": "owner",
              "lineno": 129,
              "node_id": 313,
              "src": "4075:5:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 45,
              "end_lineno": 129,
              "lineno": 129,
              "node_id": 317,
              "slice": {
                "ast_type": "Index",
                "col_offset": 21,
                "end_col_offset": 45,
                "end_lineno": 129,
                "lineno": 129,
                "node_id": 325,
                "src": "4092:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 44,
                  "end_lineno": 129,
                  "id": "_tokenId",
                  "lineno": 129,
                  "node_id": 322,
                  "src": "4107:8:0"
                }
              },
              "src": "4092:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 129,
                "lineno": 129,
                "node_id": 318,
                "src": "4092:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 129,
                  "id": "self",
                  "lineno": 129,
                  "node_id": 319,
                  "src": "4092:4:0"
                }
              }
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 131,
            "lineno": 131,
            "msg": null,
            "node_id": 326,
            "src": "4167:28:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 131,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 16,
                "end_lineno": 131,
                "id": "owner",
                "lineno": 131,
                "node_id": 328,
                "src": "4174:5:0"
              },
              "lineno": 131,
              "node_id": 327,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 131,
                "lineno": 131,
                "node_id": 1043,
                "src": "4174:21:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 20,
                "end_col_offset": 32,
                "end_lineno": 131,
                "id": "ZERO_ADDRESS",
                "lineno": 131,
                "node_id": 331,
                "src": "4183:12:0"
              },
              "src": "4174:21:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 16,
            "end_lineno": 132,
            "lineno": 132,
            "node_id": 333,
            "src": "4200:12:0",
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 16,
              "end_lineno": 132,
              "id": "owner",
              "lineno": 132,
              "node_id": 334,
              "src": "4207:5:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 121,
            "id": "view",
            "lineno": 121,
            "node_id": 336,
            "src": "3846:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 122,
            "id": "external",
            "lineno": 122,
            "node_id": 338,
            "src": "3852:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 128,
          "lineno": 124,
          "node_id": 342,
          "src": "3908:162:0",
          "value": "\n    @dev Returns the address of the owner of the NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId The identifier for an NFT.\n    "
        },
        "end_col_offset": 16,
        "end_lineno": 132,
        "lineno": 123,
        "name": "ownerOf",
        "node_id": 305,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 34,
          "end_col_offset": 41,
          "end_lineno": 123,
          "id": "address",
          "lineno": 123,
          "node_id": 340,
          "src": "3895:7:0"
        },
        "src": "3861:351:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 26,
                "end_col_offset": 33,
                "end_lineno": 137,
                "id": "uint256",
                "lineno": 137,
                "node_id": 346,
                "src": "4257:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 16,
              "end_col_offset": 33,
              "end_lineno": 137,
              "lineno": 137,
              "node_id": 345,
              "src": "4247:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 16,
          "default": null,
          "defaults": [],
          "end_col_offset": 33,
          "end_lineno": 137,
          "lineno": 137,
          "node_id": 344,
          "src": "4247:17:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 51,
            "end_lineno": 144,
            "lineno": 144,
            "msg": null,
            "node_id": 350,
            "src": "4506:47:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 51,
              "end_lineno": 144,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 144,
                "lineno": 144,
                "node_id": 352,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 35,
                  "end_lineno": 144,
                  "lineno": 144,
                  "node_id": 360,
                  "src": "4513:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 144,
                    "id": "_tokenId",
                    "lineno": 144,
                    "node_id": 357,
                    "src": "4528:8:0"
                  }
                },
                "src": "4513:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 144,
                  "lineno": 144,
                  "node_id": 353,
                  "src": "4513:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 144,
                    "id": "self",
                    "lineno": 144,
                    "node_id": 354,
                    "src": "4513:4:0"
                  }
                }
              },
              "lineno": 144,
              "node_id": 351,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 51,
                "end_lineno": 144,
                "lineno": 144,
                "node_id": 1043,
                "src": "4513:40:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 51,
                "end_lineno": 144,
                "id": "ZERO_ADDRESS",
                "lineno": 144,
                "node_id": 362,
                "src": "4541:12:0"
              },
              "src": "4513:40:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 39,
            "end_lineno": 145,
            "lineno": 145,
            "node_id": 364,
            "src": "4558:35:0",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 39,
              "end_lineno": 145,
              "lineno": 145,
              "node_id": 365,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 39,
                "end_lineno": 145,
                "lineno": 145,
                "node_id": 373,
                "src": "4565:28:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 38,
                  "end_lineno": 145,
                  "id": "_tokenId",
                  "lineno": 145,
                  "node_id": 370,
                  "src": "4584:8:0"
                }
              },
              "src": "4565:28:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToApprovals",
                "col_offset": 11,
                "end_col_offset": 29,
                "end_lineno": 145,
                "lineno": 145,
                "node_id": 366,
                "src": "4565:18:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 145,
                  "id": "self",
                  "lineno": 145,
                  "node_id": 367,
                  "src": "4565:4:0"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 135,
            "id": "view",
            "lineno": 135,
            "node_id": 374,
            "src": "4216:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 136,
            "id": "external",
            "lineno": 136,
            "node_id": 376,
            "src": "4222:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 142,
          "lineno": 138,
          "node_id": 380,
          "src": "4282:173:0",
          "value": "\n    @dev Get the approved address for a single NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId ID of the NFT to query the approval of.\n    "
        },
        "end_col_offset": 39,
        "end_lineno": 145,
        "lineno": 137,
        "name": "getApproved",
        "node_id": 343,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 38,
          "end_col_offset": 45,
          "end_lineno": 137,
          "id": "address",
          "lineno": 137,
          "node_id": 378,
          "src": "4269:7:0"
        },
        "src": "4231:362:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 29,
                "end_col_offset": 36,
                "end_lineno": 150,
                "id": "address",
                "lineno": 150,
                "node_id": 384,
                "src": "4641:7:0"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 21,
              "end_col_offset": 36,
              "end_lineno": 150,
              "lineno": 150,
              "node_id": 383,
              "src": "4633:15:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 49,
                "end_col_offset": 56,
                "end_lineno": 150,
                "id": "address",
                "lineno": 150,
                "node_id": 387,
                "src": "4661:7:0"
              },
              "arg": "_operator",
              "ast_type": "arg",
              "col_offset": 38,
              "end_col_offset": 56,
              "end_lineno": 150,
              "lineno": 150,
              "node_id": 386,
              "src": "4650:18:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 21,
          "default": null,
          "defaults": [],
          "end_col_offset": 56,
          "end_lineno": 150,
          "lineno": 150,
          "node_id": 382,
          "src": "4633:35:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 156,
            "lineno": 156,
            "node_id": 391,
            "src": "4885:49:0",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 53,
              "end_lineno": 156,
              "lineno": 156,
              "node_id": 392,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 53,
                "end_lineno": 156,
                "lineno": 156,
                "node_id": 405,
                "src": "4892:42:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 43,
                  "end_col_offset": 52,
                  "end_lineno": 156,
                  "id": "_operator",
                  "lineno": 156,
                  "node_id": 402,
                  "src": "4924:9:0"
                }
              },
              "src": "4892:42:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 12,
                "end_col_offset": 41,
                "end_lineno": 156,
                "lineno": 156,
                "node_id": 393,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 12,
                  "end_col_offset": 41,
                  "end_lineno": 156,
                  "lineno": 156,
                  "node_id": 401,
                  "src": "4893:29:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 34,
                    "end_col_offset": 40,
                    "end_lineno": 156,
                    "id": "_owner",
                    "lineno": 156,
                    "node_id": 398,
                    "src": "4915:6:0"
                  }
                },
                "src": "4893:29:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "ownerToOperators",
                  "col_offset": 12,
                  "end_col_offset": 33,
                  "end_lineno": 156,
                  "lineno": 156,
                  "node_id": 394,
                  "src": "4893:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 12,
                    "end_col_offset": 16,
                    "end_lineno": 156,
                    "id": "self",
                    "lineno": 156,
                    "node_id": 395,
                    "src": "4893:4:0"
                  }
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 148,
            "id": "view",
            "lineno": 148,
            "node_id": 406,
            "src": "4597:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 149,
            "id": "external",
            "lineno": 149,
            "node_id": 408,
            "src": "4603:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 155,
          "lineno": 151,
          "node_id": 412,
          "src": "4683:197:0",
          "value": "\n    @dev Checks if `_operator` is an approved operator for `_owner`.\n    @param _owner The address that owns the NFTs.\n    @param _operator The address that acts on behalf of the owner.\n    "
        },
        "end_col_offset": 53,
        "end_lineno": 156,
        "lineno": 150,
        "name": "isApprovedForAll",
        "node_id": 381,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 61,
          "end_col_offset": 65,
          "end_lineno": 150,
          "id": "bool",
          "lineno": 150,
          "node_id": 410,
          "src": "4673:4:0"
        },
        "src": "4612:322:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 163,
                "id": "address",
                "lineno": 163,
                "node_id": 416,
                "src": "5021:7:0"
              },
              "arg": "_spender",
              "ast_type": "arg",
              "col_offset": 23,
              "end_col_offset": 40,
              "end_lineno": 163,
              "lineno": 163,
              "node_id": 415,
              "src": "5011:17:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 52,
                "end_col_offset": 59,
                "end_lineno": 163,
                "id": "uint256",
                "lineno": 163,
                "node_id": 419,
                "src": "5040:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 42,
              "end_col_offset": 59,
              "end_lineno": 163,
              "lineno": 163,
              "node_id": 418,
              "src": "5030:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 23,
          "default": null,
          "defaults": [],
          "end_col_offset": 59,
          "end_lineno": 163,
          "lineno": 163,
          "node_id": 414,
          "src": "5011:36:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 171,
              "id": "address",
              "lineno": 171,
              "node_id": 426,
              "src": "5412:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 171,
            "lineno": 171,
            "node_id": 423,
            "simple": 1,
            "src": "5405:41:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 171,
              "id": "owner",
              "lineno": 171,
              "node_id": 424,
              "src": "5405:5:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 45,
              "end_lineno": 171,
              "lineno": 171,
              "node_id": 428,
              "slice": {
                "ast_type": "Index",
                "col_offset": 21,
                "end_col_offset": 45,
                "end_lineno": 171,
                "lineno": 171,
                "node_id": 436,
                "src": "5422:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 44,
                  "end_lineno": 171,
                  "id": "_tokenId",
                  "lineno": 171,
                  "node_id": 433,
                  "src": "5437:8:0"
                }
              },
              "src": "5422:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 171,
                "lineno": 171,
                "node_id": 429,
                "src": "5422:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 171,
                  "id": "self",
                  "lineno": 171,
                  "node_id": 430,
                  "src": "5422:4:0"
                }
              }
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 20,
              "end_col_offset": 24,
              "end_lineno": 172,
              "id": "bool",
              "lineno": 172,
              "node_id": 440,
              "src": "5467:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 172,
            "lineno": 172,
            "node_id": 437,
            "simple": 1,
            "src": "5451:40:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 18,
              "end_lineno": 172,
              "id": "spenderIsOwner",
              "lineno": 172,
              "node_id": 438,
              "src": "5451:14:0"
            },
            "value": {
              "ast_type": "Compare",
              "col_offset": 27,
              "end_col_offset": 44,
              "end_lineno": 172,
              "left": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 32,
                "end_lineno": 172,
                "id": "owner",
                "lineno": 172,
                "node_id": 443,
                "src": "5474:5:0"
              },
              "lineno": 172,
              "node_id": 442,
              "op": {
                "ast_type": "Eq",
                "col_offset": 27,
                "end_col_offset": 44,
                "end_lineno": 172,
                "lineno": 172,
                "node_id": 1026,
                "src": "5474:17:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 36,
                "end_col_offset": 44,
                "end_lineno": 172,
                "id": "_spender",
                "lineno": 172,
                "node_id": 446,
                "src": "5483:8:0"
              },
              "src": "5474:17:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 23,
              "end_col_offset": 27,
              "end_lineno": 173,
              "id": "bool",
              "lineno": 173,
              "node_id": 451,
              "src": "5515:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 70,
            "end_lineno": 173,
            "lineno": 173,
            "node_id": 448,
            "simple": 1,
            "src": "5496:66:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 21,
              "end_lineno": 173,
              "id": "spenderIsApproved",
              "lineno": 173,
              "node_id": 449,
              "src": "5496:17:0"
            },
            "value": {
              "ast_type": "Compare",
              "col_offset": 30,
              "end_col_offset": 70,
              "end_lineno": 173,
              "left": {
                "ast_type": "Name",
                "col_offset": 30,
                "end_col_offset": 38,
                "end_lineno": 173,
                "id": "_spender",
                "lineno": 173,
                "node_id": 454,
                "src": "5522:8:0"
              },
              "lineno": 173,
              "node_id": 453,
              "op": {
                "ast_type": "Eq",
                "col_offset": 30,
                "end_col_offset": 70,
                "end_lineno": 173,
                "lineno": 173,
                "node_id": 1026,
                "src": "5522:40:0"
              },
              "right": {
                "ast_type": "Subscript",
                "col_offset": 42,
                "end_col_offset": 70,
                "end_lineno": 173,
                "lineno": 173,
                "node_id": 457,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 42,
                  "end_col_offset": 70,
                  "end_lineno": 173,
                  "lineno": 173,
                  "node_id": 465,
                  "src": "5534:28:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 61,
                    "end_col_offset": 69,
                    "end_lineno": 173,
                    "id": "_tokenId",
                    "lineno": 173,
                    "node_id": 462,
                    "src": "5553:8:0"
                  }
                },
                "src": "5534:28:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToApprovals",
                  "col_offset": 42,
                  "end_col_offset": 60,
                  "end_lineno": 173,
                  "lineno": 173,
                  "node_id": 458,
                  "src": "5534:18:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 42,
                    "end_col_offset": 46,
                    "end_lineno": 173,
                    "id": "self",
                    "lineno": 173,
                    "node_id": 459,
                    "src": "5534:4:0"
                  }
                }
              },
              "src": "5522:40:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 29,
              "end_col_offset": 33,
              "end_lineno": 174,
              "id": "bool",
              "lineno": 174,
              "node_id": 469,
              "src": "5592:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 76,
            "end_lineno": 174,
            "lineno": 174,
            "node_id": 466,
            "simple": 1,
            "src": "5567:72:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 174,
              "id": "spenderIsApprovedForAll",
              "lineno": 174,
              "node_id": 467,
              "src": "5567:23:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 36,
              "end_col_offset": 76,
              "end_lineno": 174,
              "lineno": 174,
              "node_id": 471,
              "slice": {
                "ast_type": "Index",
                "col_offset": 36,
                "end_col_offset": 76,
                "end_lineno": 174,
                "lineno": 174,
                "node_id": 484,
                "src": "5599:40:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 67,
                  "end_col_offset": 75,
                  "end_lineno": 174,
                  "id": "_spender",
                  "lineno": 174,
                  "node_id": 481,
                  "src": "5630:8:0"
                }
              },
              "src": "5599:40:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 37,
                "end_col_offset": 65,
                "end_lineno": 174,
                "lineno": 174,
                "node_id": 472,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 37,
                  "end_col_offset": 65,
                  "end_lineno": 174,
                  "lineno": 174,
                  "node_id": 480,
                  "src": "5600:28:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 59,
                    "end_col_offset": 64,
                    "end_lineno": 174,
                    "id": "owner",
                    "lineno": 174,
                    "node_id": 477,
                    "src": "5622:5:0"
                  }
                },
                "src": "5600:28:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "ownerToOperators",
                  "col_offset": 37,
                  "end_col_offset": 58,
                  "end_lineno": 174,
                  "lineno": 174,
                  "node_id": 473,
                  "src": "5600:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 37,
                    "end_col_offset": 41,
                    "end_lineno": 174,
                    "id": "self",
                    "lineno": 174,
                    "node_id": 474,
                    "src": "5600:4:0"
                  }
                }
              }
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 75,
            "end_lineno": 175,
            "lineno": 175,
            "node_id": 485,
            "src": "5644:71:0",
            "value": {
              "ast_type": "BoolOp",
              "col_offset": 11,
              "end_col_offset": 75,
              "end_lineno": 175,
              "lineno": 175,
              "node_id": 486,
              "op": {
                "ast_type": "Or",
                "col_offset": 11,
                "end_col_offset": 75,
                "end_lineno": 175,
                "lineno": 175,
                "node_id": 928,
                "src": "5651:64:0"
              },
              "src": "5651:64:0",
              "values": [
                {
                  "ast_type": "BoolOp",
                  "col_offset": 12,
                  "end_col_offset": 47,
                  "end_lineno": 175,
                  "lineno": 175,
                  "node_id": 488,
                  "op": {
                    "ast_type": "Or",
                    "col_offset": 12,
                    "end_col_offset": 47,
                    "end_lineno": 175,
                    "lineno": 175,
                    "node_id": 928,
                    "src": "5652:35:0"
                  },
                  "src": "5652:35:0",
                  "values": [
                    {
                      "ast_type": "Name",
                      "col_offset": 12,
                      "end_col_offset": 26,
                      "end_lineno": 175,
                      "id": "spenderIsOwner",
                      "lineno": 175,
                      "node_id": 490,
                      "src": "5652:14:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 30,
                      "end_col_offset": 47,
                      "end_lineno": 175,
                      "id": "spenderIsApproved",
                      "lineno": 175,
                      "node_id": 492,
                      "src": "5670:17:0"
                    }
                  ]
                },
                {
                  "ast_type": "Name",
                  "col_offset": 52,
                  "end_col_offset": 75,
                  "end_lineno": 175,
                  "id": "spenderIsApprovedForAll",
                  "lineno": 175,
                  "node_id": 494,
                  "src": "5692:23:0"
                }
              ]
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 161,
            "id": "view",
            "lineno": 161,
            "node_id": 496,
            "src": "4973:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 162,
            "id": "internal",
            "lineno": 162,
            "node_id": 498,
            "src": "4979:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 170,
          "lineno": 164,
          "node_id": 502,
          "src": "5062:338:0",
          "value": "\n    @dev Returns whether the given spender can transfer a given token ID\n    @param spender address of the spender to query\n    @param tokenId uint256 ID of the token to be transferred\n    @return bool whether the msg.sender is approved for the given token ID,\n        is an operator of the owner, or is the owner of the token\n    "
        },
        "end_col_offset": 75,
        "end_lineno": 175,
        "lineno": 163,
        "name": "_isApprovedOrOwner",
        "node_id": 413,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 64,
          "end_col_offset": 68,
          "end_lineno": 163,
          "id": "bool",
          "lineno": 163,
          "node_id": 500,
          "src": "5052:4:0"
        },
        "src": "4988:727:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 21,
                "end_col_offset": 28,
                "end_lineno": 179,
                "id": "address",
                "lineno": 179,
                "node_id": 506,
                "src": "5749:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 16,
              "end_col_offset": 28,
              "end_lineno": 179,
              "lineno": 179,
              "node_id": 505,
              "src": "5744:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 40,
                "end_col_offset": 47,
                "end_lineno": 179,
                "id": "uint256",
                "lineno": 179,
                "node_id": 509,
                "src": "5768:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 30,
              "end_col_offset": 47,
              "end_lineno": 179,
              "lineno": 179,
              "node_id": 508,
              "src": "5758:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 16,
          "default": null,
          "defaults": [],
          "end_col_offset": 47,
          "end_lineno": 179,
          "lineno": 179,
          "node_id": 504,
          "src": "5744:31:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 51,
            "end_lineno": 185,
            "lineno": 185,
            "msg": null,
            "node_id": 513,
            "src": "5934:47:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 51,
              "end_lineno": 185,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 185,
                "lineno": 185,
                "node_id": 515,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 35,
                  "end_lineno": 185,
                  "lineno": 185,
                  "node_id": 523,
                  "src": "5941:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 185,
                    "id": "_tokenId",
                    "lineno": 185,
                    "node_id": 520,
                    "src": "5956:8:0"
                  }
                },
                "src": "5941:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 185,
                  "lineno": 185,
                  "node_id": 516,
                  "src": "5941:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 185,
                    "id": "self",
                    "lineno": 185,
                    "node_id": 517,
                    "src": "5941:4:0"
                  }
                }
              },
              "lineno": 185,
              "node_id": 514,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 51,
                "end_lineno": 185,
                "lineno": 185,
                "node_id": 1026,
                "src": "5941:40:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 51,
                "end_lineno": 185,
                "id": "ZERO_ADDRESS",
                "lineno": 185,
                "node_id": 525,
                "src": "5969:12:0"
              },
              "src": "5941:40:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 187,
            "lineno": 187,
            "node_id": 527,
            "src": "6009:30:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 28,
              "end_lineno": 187,
              "lineno": 187,
              "node_id": 528,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 187,
                "lineno": 187,
                "node_id": 536,
                "src": "6009:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 27,
                  "end_lineno": 187,
                  "id": "_tokenId",
                  "lineno": 187,
                  "node_id": 533,
                  "src": "6024:8:0"
                }
              },
              "src": "6009:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 187,
                "lineno": 187,
                "node_id": 529,
                "src": "6009:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 187,
                  "id": "self",
                  "lineno": 187,
                  "node_id": 530,
                  "src": "6009:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 31,
              "end_col_offset": 34,
              "end_lineno": 187,
              "id": "_to",
              "lineno": 187,
              "node_id": 537,
              "src": "6036:3:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 189,
            "lineno": 189,
            "node_id": 539,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 38,
              "end_lineno": 189,
              "lineno": 189,
              "node_id": 1081,
              "src": "6072:34:0"
            },
            "src": "6072:34:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 189,
              "lineno": 189,
              "node_id": 540,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 33,
                "end_lineno": 189,
                "lineno": 189,
                "node_id": 548,
                "src": "6072:29:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 32,
                  "end_lineno": 189,
                  "id": "_to",
                  "lineno": 189,
                  "node_id": 545,
                  "src": "6097:3:0"
                }
              },
              "src": "6072:29:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "ownerToNFTokenCount",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 189,
                "lineno": 189,
                "node_id": 541,
                "src": "6072:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 189,
                  "id": "self",
                  "lineno": 189,
                  "node_id": 542,
                  "src": "6072:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 37,
              "end_col_offset": 38,
              "end_lineno": 189,
              "lineno": 189,
              "node_id": 550,
              "src": "6105:1:0",
              "value": 1
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 178,
            "id": "internal",
            "lineno": 178,
            "node_id": 551,
            "src": "5719:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 183,
          "lineno": 180,
          "node_id": 553,
          "src": "5782:100:0",
          "value": "\n    @dev Add a NFT to a given address\n         Throws if `_tokenId` is owned by someone.\n    "
        },
        "end_col_offset": 38,
        "end_lineno": 189,
        "lineno": 179,
        "name": "_addTokenTo",
        "node_id": 503,
        "pos": null,
        "returns": null,
        "src": "5728:378:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 28,
                "end_col_offset": 35,
                "end_lineno": 193,
                "id": "address",
                "lineno": 193,
                "node_id": 557,
                "src": "6147:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 21,
              "end_col_offset": 35,
              "end_lineno": 193,
              "lineno": 193,
              "node_id": 556,
              "src": "6140:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 47,
                "end_col_offset": 54,
                "end_lineno": 193,
                "id": "uint256",
                "lineno": 193,
                "node_id": 560,
                "src": "6166:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 37,
              "end_col_offset": 54,
              "end_lineno": 193,
              "lineno": 193,
              "node_id": 559,
              "src": "6156:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 21,
          "default": null,
          "defaults": [],
          "end_col_offset": 54,
          "end_lineno": 193,
          "lineno": 193,
          "node_id": 555,
          "src": "6140:33:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 199,
            "lineno": 199,
            "msg": null,
            "node_id": 564,
            "src": "6341:40:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 44,
              "end_lineno": 199,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 199,
                "lineno": 199,
                "node_id": 566,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 35,
                  "end_lineno": 199,
                  "lineno": 199,
                  "node_id": 574,
                  "src": "6348:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 199,
                    "id": "_tokenId",
                    "lineno": 199,
                    "node_id": 571,
                    "src": "6363:8:0"
                  }
                },
                "src": "6348:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 199,
                  "lineno": 199,
                  "node_id": 567,
                  "src": "6348:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 199,
                    "id": "self",
                    "lineno": 199,
                    "node_id": 568,
                    "src": "6348:4:0"
                  }
                }
              },
              "lineno": 199,
              "node_id": 565,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 44,
                "end_lineno": 199,
                "lineno": 199,
                "node_id": 1026,
                "src": "6348:33:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 44,
                "end_lineno": 199,
                "id": "_from",
                "lineno": 199,
                "node_id": 576,
                "src": "6376:5:0"
              },
              "src": "6348:33:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 43,
            "end_lineno": 201,
            "lineno": 201,
            "node_id": 578,
            "src": "6409:39:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 28,
              "end_lineno": 201,
              "lineno": 201,
              "node_id": 579,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 201,
                "lineno": 201,
                "node_id": 587,
                "src": "6409:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 27,
                  "end_lineno": 201,
                  "id": "_tokenId",
                  "lineno": 201,
                  "node_id": 584,
                  "src": "6424:8:0"
                }
              },
              "src": "6409:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 201,
                "lineno": 201,
                "node_id": 580,
                "src": "6409:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 201,
                  "id": "self",
                  "lineno": 201,
                  "node_id": 581,
                  "src": "6409:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 31,
              "end_col_offset": 43,
              "end_lineno": 201,
              "id": "ZERO_ADDRESS",
              "lineno": 201,
              "node_id": 588,
              "src": "6436:12:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 203,
            "lineno": 203,
            "node_id": 590,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 203,
              "lineno": 203,
              "node_id": 600,
              "src": "6481:36:0"
            },
            "src": "6481:36:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 203,
              "lineno": 203,
              "node_id": 591,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 35,
                "end_lineno": 203,
                "lineno": 203,
                "node_id": 599,
                "src": "6481:31:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 34,
                  "end_lineno": 203,
                  "id": "_from",
                  "lineno": 203,
                  "node_id": 596,
                  "src": "6506:5:0"
                }
              },
              "src": "6481:31:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "ownerToNFTokenCount",
                "col_offset": 4,
                "end_col_offset": 28,
                "end_lineno": 203,
                "lineno": 203,
                "node_id": 592,
                "src": "6481:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 203,
                  "id": "self",
                  "lineno": 203,
                  "node_id": 593,
                  "src": "6481:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 39,
              "end_col_offset": 40,
              "end_lineno": 203,
              "lineno": 203,
              "node_id": 601,
              "src": "6516:1:0",
              "value": 1
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 192,
            "id": "internal",
            "lineno": 192,
            "node_id": 602,
            "src": "6110:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 197,
          "lineno": 194,
          "node_id": 604,
          "src": "6180:107:0",
          "value": "\n    @dev Remove a NFT from a given address\n         Throws if `_from` is not the current owner.\n    "
        },
        "end_col_offset": 40,
        "end_lineno": 203,
        "lineno": 193,
        "name": "_removeTokenFrom",
        "node_id": 554,
        "pos": null,
        "returns": null,
        "src": "6119:398:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 34,
                "end_lineno": 207,
                "id": "address",
                "lineno": 207,
                "node_id": 608,
                "src": "6557:7:0"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 19,
              "end_col_offset": 34,
              "end_lineno": 207,
              "lineno": 207,
              "node_id": 607,
              "src": "6549:15:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 46,
                "end_col_offset": 53,
                "end_lineno": 207,
                "id": "uint256",
                "lineno": 207,
                "node_id": 611,
                "src": "6576:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 36,
              "end_col_offset": 53,
              "end_lineno": 207,
              "lineno": 207,
              "node_id": 610,
              "src": "6566:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 19,
          "default": null,
          "defaults": [],
          "end_col_offset": 53,
          "end_lineno": 207,
          "lineno": 207,
          "node_id": 606,
          "src": "6549:34:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 213,
            "lineno": 213,
            "msg": null,
            "node_id": 615,
            "src": "6756:41:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 45,
              "end_lineno": 213,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 35,
                "end_lineno": 213,
                "lineno": 213,
                "node_id": 617,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 35,
                  "end_lineno": 213,
                  "lineno": 213,
                  "node_id": 625,
                  "src": "6763:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 213,
                    "id": "_tokenId",
                    "lineno": 213,
                    "node_id": 622,
                    "src": "6778:8:0"
                  }
                },
                "src": "6763:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 213,
                  "lineno": 213,
                  "node_id": 618,
                  "src": "6763:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 213,
                    "id": "self",
                    "lineno": 213,
                    "node_id": 619,
                    "src": "6763:4:0"
                  }
                }
              },
              "lineno": 213,
              "node_id": 616,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 45,
                "end_lineno": 213,
                "lineno": 213,
                "node_id": 1026,
                "src": "6763:34:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 45,
                "end_lineno": 213,
                "id": "_owner",
                "lineno": 213,
                "node_id": 627,
                "src": "6791:6:0"
              },
              "src": "6763:34:0"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "ast_type": "Assign",
                "col_offset": 8,
                "end_col_offset": 51,
                "end_lineno": 216,
                "lineno": 216,
                "node_id": 643,
                "src": "6885:43:0",
                "target": {
                  "ast_type": "Subscript",
                  "col_offset": 8,
                  "end_col_offset": 36,
                  "end_lineno": 216,
                  "lineno": 216,
                  "node_id": 644,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 8,
                    "end_col_offset": 36,
                    "end_lineno": 216,
                    "lineno": 216,
                    "node_id": 652,
                    "src": "6885:28:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 27,
                      "end_col_offset": 35,
                      "end_lineno": 216,
                      "id": "_tokenId",
                      "lineno": 216,
                      "node_id": 649,
                      "src": "6904:8:0"
                    }
                  },
                  "src": "6885:28:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "idToApprovals",
                    "col_offset": 8,
                    "end_col_offset": 26,
                    "end_lineno": 216,
                    "lineno": 216,
                    "node_id": 645,
                    "src": "6885:18:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 8,
                      "end_col_offset": 12,
                      "end_lineno": 216,
                      "id": "self",
                      "lineno": 216,
                      "node_id": 646,
                      "src": "6885:4:0"
                    }
                  }
                },
                "value": {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 51,
                  "end_lineno": 216,
                  "id": "ZERO_ADDRESS",
                  "lineno": 216,
                  "node_id": 653,
                  "src": "6916:12:0"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 51,
            "end_lineno": 216,
            "lineno": 214,
            "node_id": 629,
            "orelse": [],
            "src": "6802:126:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 7,
              "end_col_offset": 51,
              "end_lineno": 214,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 7,
                "end_col_offset": 35,
                "end_lineno": 214,
                "lineno": 214,
                "node_id": 631,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 7,
                  "end_col_offset": 35,
                  "end_lineno": 214,
                  "lineno": 214,
                  "node_id": 639,
                  "src": "6805:28:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 34,
                    "end_lineno": 214,
                    "id": "_tokenId",
                    "lineno": 214,
                    "node_id": 636,
                    "src": "6824:8:0"
                  }
                },
                "src": "6805:28:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToApprovals",
                  "col_offset": 7,
                  "end_col_offset": 25,
                  "end_lineno": 214,
                  "lineno": 214,
                  "node_id": 632,
                  "src": "6805:18:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 7,
                    "end_col_offset": 11,
                    "end_lineno": 214,
                    "id": "self",
                    "lineno": 214,
                    "node_id": 633,
                    "src": "6805:4:0"
                  }
                }
              },
              "lineno": 214,
              "node_id": 630,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 7,
                "end_col_offset": 51,
                "end_lineno": 214,
                "lineno": 214,
                "node_id": 1043,
                "src": "6805:44:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 51,
                "end_lineno": 214,
                "id": "ZERO_ADDRESS",
                "lineno": 214,
                "node_id": 641,
                "src": "6837:12:0"
              },
              "src": "6805:44:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 206,
            "id": "internal",
            "lineno": 206,
            "node_id": 655,
            "src": "6521:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 211,
          "lineno": 208,
          "node_id": 657,
          "src": "6590:111:0",
          "value": "\n    @dev Clear an approval of a given address\n         Throws if `_owner` is not the current owner.\n    "
        },
        "end_col_offset": 51,
        "end_lineno": 216,
        "lineno": 207,
        "name": "_clearApproval",
        "node_id": 605,
        "pos": null,
        "returns": null,
        "src": "6530:398:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 32,
                "end_lineno": 220,
                "id": "address",
                "lineno": 220,
                "node_id": 661,
                "src": "6966:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 18,
              "end_col_offset": 32,
              "end_lineno": 220,
              "lineno": 220,
              "node_id": 660,
              "src": "6959:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 39,
                "end_col_offset": 46,
                "end_lineno": 220,
                "id": "address",
                "lineno": 220,
                "node_id": 664,
                "src": "6980:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 34,
              "end_col_offset": 46,
              "end_lineno": 220,
              "lineno": 220,
              "node_id": 663,
              "src": "6975:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 58,
                "end_col_offset": 65,
                "end_lineno": 220,
                "id": "uint256",
                "lineno": 220,
                "node_id": 667,
                "src": "6999:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 48,
              "end_col_offset": 65,
              "end_lineno": 220,
              "lineno": 220,
              "node_id": 666,
              "src": "6989:17:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 76,
                "end_col_offset": 83,
                "end_lineno": 220,
                "id": "address",
                "lineno": 220,
                "node_id": 670,
                "src": "7017:7:0"
              },
              "arg": "_sender",
              "ast_type": "arg",
              "col_offset": 67,
              "end_col_offset": 83,
              "end_lineno": 220,
              "lineno": 220,
              "node_id": 669,
              "src": "7008:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 18,
          "default": null,
          "defaults": [],
          "end_col_offset": 83,
          "end_lineno": 220,
          "lineno": 220,
          "node_id": 659,
          "src": "6959:65:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 53,
            "end_lineno": 230,
            "lineno": 230,
            "msg": null,
            "node_id": 674,
            "src": "7457:49:0",
            "test": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 42,
                  "end_lineno": 230,
                  "id": "_sender",
                  "lineno": 230,
                  "node_id": 680,
                  "src": "7488:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 44,
                  "end_col_offset": 52,
                  "end_lineno": 230,
                  "id": "_tokenId",
                  "lineno": 230,
                  "node_id": 682,
                  "src": "7497:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 53,
              "end_lineno": 230,
              "func": {
                "ast_type": "Attribute",
                "attr": "_isApprovedOrOwner",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 230,
                "lineno": 230,
                "node_id": 676,
                "src": "7464:23:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 230,
                  "id": "self",
                  "lineno": 230,
                  "node_id": 677,
                  "src": "7464:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 230,
              "node_id": 675,
              "src": "7464:42:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 232,
            "lineno": 232,
            "msg": null,
            "node_id": 684,
            "src": "7553:26:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 30,
              "end_lineno": 232,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 232,
                "id": "_to",
                "lineno": 232,
                "node_id": 686,
                "src": "7560:3:0"
              },
              "lineno": 232,
              "node_id": 685,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 30,
                "end_lineno": 232,
                "lineno": 232,
                "node_id": 1043,
                "src": "7560:19:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 30,
                "end_lineno": 232,
                "id": "ZERO_ADDRESS",
                "lineno": 232,
                "node_id": 689,
                "src": "7567:12:0"
              },
              "src": "7560:19:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 234,
            "lineno": 234,
            "node_id": 691,
            "src": "7649:36:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 29,
                  "end_lineno": 234,
                  "id": "_from",
                  "lineno": 234,
                  "node_id": 697,
                  "src": "7669:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 39,
                  "end_lineno": 234,
                  "id": "_tokenId",
                  "lineno": 234,
                  "node_id": 699,
                  "src": "7676:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 234,
              "func": {
                "ast_type": "Attribute",
                "attr": "_clearApproval",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 234,
                "lineno": 234,
                "node_id": 693,
                "src": "7649:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 234,
                  "id": "self",
                  "lineno": 234,
                  "node_id": 694,
                  "src": "7649:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 234,
              "node_id": 692,
              "src": "7649:36:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 42,
            "end_lineno": 236,
            "lineno": 236,
            "node_id": 701,
            "src": "7748:38:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 31,
                  "end_lineno": 236,
                  "id": "_from",
                  "lineno": 236,
                  "node_id": 707,
                  "src": "7770:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 41,
                  "end_lineno": 236,
                  "id": "_tokenId",
                  "lineno": 236,
                  "node_id": 709,
                  "src": "7777:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 42,
              "end_lineno": 236,
              "func": {
                "ast_type": "Attribute",
                "attr": "_removeTokenFrom",
                "col_offset": 4,
                "end_col_offset": 25,
                "end_lineno": 236,
                "lineno": 236,
                "node_id": 703,
                "src": "7748:21:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 236,
                  "id": "self",
                  "lineno": 236,
                  "node_id": 704,
                  "src": "7748:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 236,
              "node_id": 702,
              "src": "7748:38:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 238,
            "lineno": 238,
            "node_id": 711,
            "src": "7805:31:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 24,
                  "end_lineno": 238,
                  "id": "_to",
                  "lineno": 238,
                  "node_id": 717,
                  "src": "7822:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 34,
                  "end_lineno": 238,
                  "id": "_tokenId",
                  "lineno": 238,
                  "node_id": 719,
                  "src": "7827:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 238,
              "func": {
                "ast_type": "Attribute",
                "attr": "_addTokenTo",
                "col_offset": 4,
                "end_col_offset": 20,
                "end_lineno": 238,
                "lineno": 238,
                "node_id": 713,
                "src": "7805:16:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 238,
                  "id": "self",
                  "lineno": 238,
                  "node_id": 714,
                  "src": "7805:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 238,
              "node_id": 712,
              "src": "7805:31:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 240,
            "lineno": 240,
            "node_id": 722,
            "src": "7864:34:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 240,
                  "id": "_from",
                  "lineno": 240,
                  "node_id": 726,
                  "src": "7877:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 27,
                  "end_lineno": 240,
                  "id": "_to",
                  "lineno": 240,
                  "node_id": 728,
                  "src": "7884:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 37,
                  "end_lineno": 240,
                  "id": "_tokenId",
                  "lineno": 240,
                  "node_id": 730,
                  "src": "7889:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 38,
              "end_lineno": 240,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 240,
                "id": "Transfer",
                "lineno": 240,
                "node_id": 724,
                "src": "7868:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 240,
              "node_id": 723,
              "src": "7868:30:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 219,
            "id": "internal",
            "lineno": 219,
            "node_id": 732,
            "src": "6932:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 228,
          "lineno": 221,
          "node_id": 734,
          "src": "7031:396:0",
          "value": "\n    @dev Exeute transfer of a NFT.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT. (NOTE: `msg.sender` not allowed in private function so pass `_sender`.)\n         Throws if `_to` is the zero address.\n         Throws if `_from` is not the current owner.\n         Throws if `_tokenId` is not a valid NFT.\n    "
        },
        "end_col_offset": 38,
        "end_lineno": 240,
        "lineno": 220,
        "name": "_transferFrom",
        "node_id": 658,
        "pos": null,
        "returns": null,
        "src": "6941:957:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 24,
                "end_col_offset": 31,
                "end_lineno": 246,
                "id": "address",
                "lineno": 246,
                "node_id": 738,
                "src": "7963:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 17,
              "end_col_offset": 31,
              "end_lineno": 246,
              "lineno": 246,
              "node_id": 737,
              "src": "7956:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 38,
                "end_col_offset": 45,
                "end_lineno": 246,
                "id": "address",
                "lineno": 246,
                "node_id": 741,
                "src": "7977:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 33,
              "end_col_offset": 45,
              "end_lineno": 246,
              "lineno": 246,
              "node_id": 740,
              "src": "7972:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 57,
                "end_col_offset": 64,
                "end_lineno": 246,
                "id": "uint256",
                "lineno": 246,
                "node_id": 744,
                "src": "7996:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 47,
              "end_col_offset": 64,
              "end_lineno": 246,
              "lineno": 246,
              "node_id": 743,
              "src": "7986:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 17,
          "default": null,
          "defaults": [],
          "end_col_offset": 64,
          "end_lineno": 246,
          "lineno": 246,
          "node_id": 736,
          "src": "7956:47:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 56,
            "end_lineno": 259,
            "lineno": 259,
            "node_id": 748,
            "src": "8563:52:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 23,
                  "end_col_offset": 28,
                  "end_lineno": 259,
                  "id": "_from",
                  "lineno": 259,
                  "node_id": 754,
                  "src": "8582:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 33,
                  "end_lineno": 259,
                  "id": "_to",
                  "lineno": 259,
                  "node_id": 756,
                  "src": "8589:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 43,
                  "end_lineno": 259,
                  "id": "_tokenId",
                  "lineno": 259,
                  "node_id": 758,
                  "src": "8594:8:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 45,
                  "end_col_offset": 55,
                  "end_lineno": 259,
                  "lineno": 259,
                  "node_id": 760,
                  "src": "8604:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 45,
                    "end_col_offset": 48,
                    "end_lineno": 259,
                    "id": "msg",
                    "lineno": 259,
                    "node_id": 761,
                    "src": "8604:3:0"
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 56,
              "end_lineno": 259,
              "func": {
                "ast_type": "Attribute",
                "attr": "_transferFrom",
                "col_offset": 4,
                "end_col_offset": 22,
                "end_lineno": 259,
                "lineno": 259,
                "node_id": 750,
                "src": "8563:18:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 259,
                  "id": "self",
                  "lineno": 259,
                  "node_id": 751,
                  "src": "8563:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 259,
              "node_id": 749,
              "src": "8563:52:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 245,
            "id": "external",
            "lineno": 245,
            "node_id": 764,
            "src": "7930:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 258,
          "lineno": 247,
          "node_id": 766,
          "src": "8010:548:0",
          "value": "\n    @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n    @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n            they maybe be permanently lost.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    "
        },
        "end_col_offset": 56,
        "end_lineno": 259,
        "lineno": 246,
        "name": "transferFrom",
        "node_id": 735,
        "pos": null,
        "returns": null,
        "src": "7939:676:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 15,
                "end_col_offset": 22,
                "end_lineno": 264,
                "id": "address",
                "lineno": 264,
                "node_id": 770,
                "src": "8665:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 8,
              "end_col_offset": 22,
              "end_lineno": 264,
              "lineno": 264,
              "node_id": 769,
              "src": "8658:14:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 265,
                "id": "address",
                "lineno": 265,
                "node_id": 773,
                "src": "8687:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 8,
              "end_col_offset": 20,
              "end_lineno": 265,
              "lineno": 265,
              "node_id": 772,
              "src": "8682:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 25,
                "end_lineno": 266,
                "id": "uint256",
                "lineno": 266,
                "node_id": 776,
                "src": "8714:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 8,
              "end_col_offset": 25,
              "end_lineno": 266,
              "lineno": 266,
              "node_id": 775,
              "src": "8704:17:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 15,
                "end_col_offset": 26,
                "end_lineno": 267,
                "lineno": 267,
                "node_id": 779,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 15,
                  "end_col_offset": 26,
                  "end_lineno": 267,
                  "lineno": 267,
                  "node_id": 784,
                  "src": "8738:11:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 21,
                    "end_col_offset": 25,
                    "end_lineno": 267,
                    "lineno": 267,
                    "node_id": 782,
                    "src": "8744:4:0",
                    "value": 1024
                  }
                },
                "src": "8738:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 20,
                  "end_lineno": 267,
                  "id": "Bytes",
                  "lineno": 267,
                  "node_id": 780,
                  "src": "8738:5:0"
                }
              },
              "arg": "_data",
              "ast_type": "arg",
              "col_offset": 8,
              "end_col_offset": 26,
              "end_lineno": 267,
              "lineno": 267,
              "node_id": 778,
              "src": "8731:18:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 8,
          "default": null,
          "defaults": [
            {
              "ast_type": "Bytes",
              "col_offset": 27,
              "end_col_offset": 30,
              "end_lineno": 267,
              "lineno": 267,
              "node_id": 785,
              "src": "8750:3:0",
              "value": "0x"
            }
          ],
          "end_col_offset": 30,
          "end_lineno": 267,
          "lineno": 264,
          "node_id": 768,
          "src": "8658:95:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 56,
            "end_lineno": 284,
            "lineno": 284,
            "node_id": 788,
            "src": "9595:52:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 23,
                  "end_col_offset": 28,
                  "end_lineno": 284,
                  "id": "_from",
                  "lineno": 284,
                  "node_id": 794,
                  "src": "9614:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 30,
                  "end_col_offset": 33,
                  "end_lineno": 284,
                  "id": "_to",
                  "lineno": 284,
                  "node_id": 796,
                  "src": "9621:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 43,
                  "end_lineno": 284,
                  "id": "_tokenId",
                  "lineno": 284,
                  "node_id": 798,
                  "src": "9626:8:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 45,
                  "end_col_offset": 55,
                  "end_lineno": 284,
                  "lineno": 284,
                  "node_id": 800,
                  "src": "9636:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 45,
                    "end_col_offset": 48,
                    "end_lineno": 284,
                    "id": "msg",
                    "lineno": 284,
                    "node_id": 801,
                    "src": "9636:3:0"
                  }
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 56,
              "end_lineno": 284,
              "func": {
                "ast_type": "Attribute",
                "attr": "_transferFrom",
                "col_offset": 4,
                "end_col_offset": 22,
                "end_lineno": 284,
                "lineno": 284,
                "node_id": 790,
                "src": "9595:18:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 284,
                  "id": "self",
                  "lineno": 284,
                  "node_id": 791,
                  "src": "9595:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 284,
              "node_id": 789,
              "src": "9595:52:0"
            }
          },
          {
            "ast_type": "If",
            "body": [
              {
                "annotation": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 286,
                  "id": "bytes32",
                  "lineno": 286,
                  "node_id": 812,
                  "src": "9732:7:0"
                },
                "ast_type": "AnnAssign",
                "col_offset": 8,
                "end_col_offset": 103,
                "end_lineno": 286,
                "lineno": 286,
                "node_id": 809,
                "simple": 1,
                "src": "9719:95:0",
                "target": {
                  "ast_type": "Name",
                  "col_offset": 8,
                  "end_col_offset": 19,
                  "end_lineno": 286,
                  "id": "returnValue",
                  "lineno": 286,
                  "node_id": 810,
                  "src": "9719:11:0"
                },
                "value": {
                  "args": [
                    {
                      "ast_type": "Attribute",
                      "attr": "sender",
                      "col_offset": 68,
                      "end_col_offset": 78,
                      "end_lineno": 286,
                      "lineno": 286,
                      "node_id": 822,
                      "src": "9779:10:0",
                      "value": {
                        "ast_type": "Name",
                        "col_offset": 68,
                        "end_col_offset": 71,
                        "end_lineno": 286,
                        "id": "msg",
                        "lineno": 286,
                        "node_id": 823,
                        "src": "9779:3:0"
                      }
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 80,
                      "end_col_offset": 85,
                      "end_lineno": 286,
                      "id": "_from",
                      "lineno": 286,
                      "node_id": 826,
                      "src": "9791:5:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 87,
                      "end_col_offset": 95,
                      "end_lineno": 286,
                      "id": "_tokenId",
                      "lineno": 286,
                      "node_id": 828,
                      "src": "9798:8:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 97,
                      "end_col_offset": 102,
                      "end_lineno": 286,
                      "id": "_data",
                      "lineno": 286,
                      "node_id": 830,
                      "src": "9808:5:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 31,
                  "end_col_offset": 103,
                  "end_lineno": 286,
                  "func": {
                    "ast_type": "Attribute",
                    "attr": "onERC721Received",
                    "col_offset": 31,
                    "end_col_offset": 67,
                    "end_lineno": 286,
                    "lineno": 286,
                    "node_id": 815,
                    "src": "9742:36:0",
                    "value": {
                      "args": [
                        {
                          "ast_type": "Name",
                          "col_offset": 46,
                          "end_col_offset": 49,
                          "end_lineno": 286,
                          "id": "_to",
                          "lineno": 286,
                          "node_id": 819,
                          "src": "9757:3:0"
                        }
                      ],
                      "ast_type": "Call",
                      "col_offset": 31,
                      "end_col_offset": 50,
                      "end_lineno": 286,
                      "func": {
                        "ast_type": "Name",
                        "col_offset": 31,
                        "end_col_offset": 45,
                        "end_lineno": 286,
                        "id": "ERC721Receiver",
                        "lineno": 286,
                        "node_id": 817,
                        "src": "9742:14:0"
                      },
                      "keyword": null,
                      "keywords": [],
                      "lineno": 286,
                      "node_id": 816,
                      "src": "9742:19:0"
                    }
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 286,
                  "node_id": 814,
                  "src": "9742:72:0"
                }
              },
              {
                "ast_type": "Assert",
                "col_offset": 8,
                "end_col_offset": 111,
                "end_lineno": 288,
                "lineno": 288,
                "msg": null,
                "node_id": 832,
                "src": "9922:103:0",
                "test": {
                  "ast_type": "Compare",
                  "col_offset": 15,
                  "end_col_offset": 111,
                  "end_lineno": 288,
                  "left": {
                    "ast_type": "Name",
                    "col_offset": 15,
                    "end_col_offset": 26,
                    "end_lineno": 288,
                    "id": "returnValue",
                    "lineno": 288,
                    "node_id": 834,
                    "src": "9929:11:0"
                  },
                  "lineno": 288,
                  "node_id": 833,
                  "op": {
                    "ast_type": "Eq",
                    "col_offset": 15,
                    "end_col_offset": 111,
                    "end_lineno": 288,
                    "lineno": 288,
                    "node_id": 1026,
                    "src": "9929:96:0"
                  },
                  "right": {
                    "args": [
                      {
                        "ast_type": "Str",
                        "col_offset": 40,
                        "end_col_offset": 89,
                        "end_lineno": 288,
                        "lineno": 288,
                        "node_id": 840,
                        "src": "9954:49:0",
                        "value": "onERC721Received(address,address,uint256,bytes)"
                      }
                    ],
                    "ast_type": "Call",
                    "col_offset": 30,
                    "end_col_offset": 111,
                    "end_lineno": 288,
                    "func": {
                      "ast_type": "Name",
                      "col_offset": 30,
                      "end_col_offset": 39,
                      "end_lineno": 288,
                      "id": "method_id",
                      "lineno": 288,
                      "node_id": 838,
                      "src": "9944:9:0"
                    },
                    "keyword": null,
                    "keywords": [
                      {
                        "arg": "output_type",
                        "ast_type": "keyword",
                        "col_offset": 91,
                        "end_col_offset": 110,
                        "end_lineno": 288,
                        "lineno": 288,
                        "node_id": 841,
                        "src": "10005:19:0",
                        "value": {
                          "ast_type": "Name",
                          "col_offset": 103,
                          "end_col_offset": 110,
                          "end_lineno": 288,
                          "id": "bytes32",
                          "lineno": 288,
                          "node_id": 842,
                          "src": "10017:7:0"
                        }
                      }
                    ],
                    "lineno": 288,
                    "node_id": 837,
                    "src": "9944:81:0"
                  },
                  "src": "9929:96:0"
                }
              }
            ],
            "col_offset": 4,
            "end_col_offset": 111,
            "end_lineno": 288,
            "lineno": 285,
            "node_id": 804,
            "orelse": [],
            "src": "9652:373:0",
            "test": {
              "ast_type": "Attribute",
              "attr": "is_contract",
              "col_offset": 7,
              "end_col_offset": 22,
              "end_lineno": 285,
              "lineno": 285,
              "node_id": 805,
              "src": "9655:15:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 7,
                "end_col_offset": 10,
                "end_lineno": 285,
                "id": "_to",
                "lineno": 285,
                "node_id": 806,
                "src": "9655:3:0"
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 262,
            "id": "external",
            "lineno": 262,
            "node_id": 844,
            "src": "8619:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 283,
          "lineno": 269,
          "node_id": 846,
          "src": "8765:825:0",
          "value": "\n    @dev Transfers the ownership of an NFT from one address to another address.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the\n         approved address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n         If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if\n         the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n         NOTE: bytes4 is represented by bytes32 with padding\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    @param _data Additional data with no specified format, sent in call to `_to`.\n    "
        },
        "end_col_offset": 111,
        "end_lineno": 288,
        "lineno": 263,
        "name": "safeTransferFrom",
        "node_id": 767,
        "pos": null,
        "returns": null,
        "src": "8628:1397:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 292,
                "id": "address",
                "lineno": 292,
                "node_id": 850,
                "src": "10061:7:0"
              },
              "arg": "_approved",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 30,
              "end_lineno": 292,
              "lineno": 292,
              "node_id": 849,
              "src": "10050:18:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 42,
                "end_col_offset": 49,
                "end_lineno": 292,
                "id": "uint256",
                "lineno": 292,
                "node_id": 853,
                "src": "10080:7:0"
              },
              "arg": "_tokenId",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 49,
              "end_lineno": 292,
              "lineno": 292,
              "node_id": 852,
              "src": "10070:17:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 49,
          "end_lineno": 292,
          "lineno": 292,
          "node_id": 848,
          "src": "10050:37:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 301,
              "id": "address",
              "lineno": 301,
              "node_id": 860,
              "src": "10635:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 301,
            "lineno": 301,
            "node_id": 857,
            "simple": 1,
            "src": "10628:41:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 301,
              "id": "owner",
              "lineno": 301,
              "node_id": 858,
              "src": "10628:5:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 21,
              "end_col_offset": 45,
              "end_lineno": 301,
              "lineno": 301,
              "node_id": 862,
              "slice": {
                "ast_type": "Index",
                "col_offset": 21,
                "end_col_offset": 45,
                "end_lineno": 301,
                "lineno": 301,
                "node_id": 870,
                "src": "10645:24:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 44,
                  "end_lineno": 301,
                  "id": "_tokenId",
                  "lineno": 301,
                  "node_id": 867,
                  "src": "10660:8:0"
                }
              },
              "src": "10645:24:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToOwner",
                "col_offset": 21,
                "end_col_offset": 35,
                "end_lineno": 301,
                "lineno": 301,
                "node_id": 863,
                "src": "10645:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 25,
                  "end_lineno": 301,
                  "id": "self",
                  "lineno": 301,
                  "node_id": 864,
                  "src": "10645:4:0"
                }
              }
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 303,
            "lineno": 303,
            "msg": null,
            "node_id": 871,
            "src": "10720:28:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 303,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 16,
                "end_lineno": 303,
                "id": "owner",
                "lineno": 303,
                "node_id": 873,
                "src": "10727:5:0"
              },
              "lineno": 303,
              "node_id": 872,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 303,
                "lineno": 303,
                "node_id": 1043,
                "src": "10727:21:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 20,
                "end_col_offset": 32,
                "end_lineno": 303,
                "id": "ZERO_ADDRESS",
                "lineno": 303,
                "node_id": 876,
                "src": "10736:12:0"
              },
              "src": "10727:21:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 305,
            "lineno": 305,
            "msg": null,
            "node_id": 878,
            "src": "10802:25:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 29,
              "end_lineno": 305,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 20,
                "end_lineno": 305,
                "id": "_approved",
                "lineno": 305,
                "node_id": 880,
                "src": "10809:9:0"
              },
              "lineno": 305,
              "node_id": 879,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 29,
                "end_lineno": 305,
                "lineno": 305,
                "node_id": 1043,
                "src": "10809:18:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 24,
                "end_col_offset": 29,
                "end_lineno": 305,
                "id": "owner",
                "lineno": 305,
                "node_id": 883,
                "src": "10822:5:0"
              },
              "src": "10809:18:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 19,
              "end_col_offset": 23,
              "end_lineno": 307,
              "id": "bool",
              "lineno": 307,
              "node_id": 888,
              "src": "10872:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 64,
            "end_lineno": 307,
            "lineno": 307,
            "node_id": 885,
            "simple": 1,
            "src": "10857:60:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 307,
              "id": "senderIsOwner",
              "lineno": 307,
              "node_id": 886,
              "src": "10857:13:0"
            },
            "value": {
              "ast_type": "Compare",
              "col_offset": 26,
              "end_col_offset": 64,
              "end_lineno": 307,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 26,
                "end_col_offset": 50,
                "end_lineno": 307,
                "lineno": 307,
                "node_id": 891,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 26,
                  "end_col_offset": 50,
                  "end_lineno": 307,
                  "lineno": 307,
                  "node_id": 899,
                  "src": "10879:24:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 41,
                    "end_col_offset": 49,
                    "end_lineno": 307,
                    "id": "_tokenId",
                    "lineno": 307,
                    "node_id": 896,
                    "src": "10894:8:0"
                  }
                },
                "src": "10879:24:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "idToOwner",
                  "col_offset": 26,
                  "end_col_offset": 40,
                  "end_lineno": 307,
                  "lineno": 307,
                  "node_id": 892,
                  "src": "10879:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 30,
                    "end_lineno": 307,
                    "id": "self",
                    "lineno": 307,
                    "node_id": 893,
                    "src": "10879:4:0"
                  }
                }
              },
              "lineno": 307,
              "node_id": 890,
              "op": {
                "ast_type": "Eq",
                "col_offset": 26,
                "end_col_offset": 64,
                "end_lineno": 307,
                "lineno": 307,
                "node_id": 1026,
                "src": "10879:38:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 54,
                "end_col_offset": 64,
                "end_lineno": 307,
                "lineno": 307,
                "node_id": 901,
                "src": "10907:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 54,
                  "end_col_offset": 57,
                  "end_lineno": 307,
                  "id": "msg",
                  "lineno": 307,
                  "node_id": 902,
                  "src": "10907:3:0"
                }
              },
              "src": "10879:38:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 28,
              "end_col_offset": 32,
              "end_lineno": 308,
              "id": "bool",
              "lineno": 308,
              "node_id": 908,
              "src": "10946:4:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 77,
            "end_lineno": 308,
            "lineno": 308,
            "node_id": 905,
            "simple": 1,
            "src": "10922:73:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 26,
              "end_lineno": 308,
              "id": "senderIsApprovedForAll",
              "lineno": 308,
              "node_id": 906,
              "src": "10922:22:0"
            },
            "value": {
              "ast_type": "Subscript",
              "col_offset": 35,
              "end_col_offset": 77,
              "end_lineno": 308,
              "lineno": 308,
              "node_id": 910,
              "slice": {
                "ast_type": "Index",
                "col_offset": 35,
                "end_col_offset": 77,
                "end_lineno": 308,
                "lineno": 308,
                "node_id": 925,
                "src": "10953:42:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 66,
                  "end_col_offset": 76,
                  "end_lineno": 308,
                  "lineno": 308,
                  "node_id": 920,
                  "src": "10984:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 66,
                    "end_col_offset": 69,
                    "end_lineno": 308,
                    "id": "msg",
                    "lineno": 308,
                    "node_id": 921,
                    "src": "10984:3:0"
                  }
                }
              },
              "src": "10953:42:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 36,
                "end_col_offset": 64,
                "end_lineno": 308,
                "lineno": 308,
                "node_id": 911,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 36,
                  "end_col_offset": 64,
                  "end_lineno": 308,
                  "lineno": 308,
                  "node_id": 919,
                  "src": "10954:28:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 58,
                    "end_col_offset": 63,
                    "end_lineno": 308,
                    "id": "owner",
                    "lineno": 308,
                    "node_id": 916,
                    "src": "10976:5:0"
                  }
                },
                "src": "10954:28:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "ownerToOperators",
                  "col_offset": 36,
                  "end_col_offset": 57,
                  "end_lineno": 308,
                  "lineno": 308,
                  "node_id": 912,
                  "src": "10954:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 36,
                    "end_col_offset": 40,
                    "end_lineno": 308,
                    "id": "self",
                    "lineno": 308,
                    "node_id": 913,
                    "src": "10954:4:0"
                  }
                }
              }
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 52,
            "end_lineno": 309,
            "lineno": 309,
            "msg": null,
            "node_id": 926,
            "src": "11000:48:0",
            "test": {
              "ast_type": "BoolOp",
              "col_offset": 12,
              "end_col_offset": 51,
              "end_lineno": 309,
              "lineno": 309,
              "node_id": 927,
              "op": {
                "ast_type": "Or",
                "col_offset": 12,
                "end_col_offset": 51,
                "end_lineno": 309,
                "lineno": 309,
                "node_id": 928,
                "src": "11008:39:0"
              },
              "src": "11008:39:0",
              "values": [
                {
                  "ast_type": "Name",
                  "col_offset": 12,
                  "end_col_offset": 25,
                  "end_lineno": 309,
                  "id": "senderIsOwner",
                  "lineno": 309,
                  "node_id": 929,
                  "src": "11008:13:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 51,
                  "end_lineno": 309,
                  "id": "senderIsApprovedForAll",
                  "lineno": 309,
                  "node_id": 931,
                  "src": "11025:22:0"
                }
              ]
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 311,
            "lineno": 311,
            "node_id": 933,
            "src": "11076:40:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 32,
              "end_lineno": 311,
              "lineno": 311,
              "node_id": 934,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 32,
                "end_lineno": 311,
                "lineno": 311,
                "node_id": 942,
                "src": "11076:28:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 23,
                  "end_col_offset": 31,
                  "end_lineno": 311,
                  "id": "_tokenId",
                  "lineno": 311,
                  "node_id": 939,
                  "src": "11095:8:0"
                }
              },
              "src": "11076:28:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "idToApprovals",
                "col_offset": 4,
                "end_col_offset": 22,
                "end_lineno": 311,
                "lineno": 311,
                "node_id": 935,
                "src": "11076:18:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 311,
                  "id": "self",
                  "lineno": 311,
                  "node_id": 936,
                  "src": "11076:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 35,
              "end_col_offset": 44,
              "end_lineno": 311,
              "id": "_approved",
              "lineno": 311,
              "node_id": 943,
              "src": "11107:9:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 312,
            "lineno": 312,
            "node_id": 946,
            "src": "11121:40:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 312,
                  "id": "owner",
                  "lineno": 312,
                  "node_id": 950,
                  "src": "11134:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 33,
                  "end_lineno": 312,
                  "id": "_approved",
                  "lineno": 312,
                  "node_id": 952,
                  "src": "11141:9:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 43,
                  "end_lineno": 312,
                  "id": "_tokenId",
                  "lineno": 312,
                  "node_id": 954,
                  "src": "11152:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 44,
              "end_lineno": 312,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 312,
                "id": "Approval",
                "lineno": 312,
                "node_id": 948,
                "src": "11125:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 312,
              "node_id": 947,
              "src": "11125:36:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 291,
            "id": "external",
            "lineno": 291,
            "node_id": 956,
            "src": "10029:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 300,
          "lineno": 293,
          "node_id": 958,
          "src": "10094:529:0",
          "value": "\n    @dev Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address.\n         Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\n         Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP)\n         Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)\n    @param _approved Address to be approved for the given NFT ID.\n    @param _tokenId ID of the token to be approved.\n    "
        },
        "end_col_offset": 44,
        "end_lineno": 312,
        "lineno": 292,
        "name": "approve",
        "node_id": 847,
        "pos": null,
        "returns": null,
        "src": "10038:1123:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 316,
                "id": "address",
                "lineno": 316,
                "node_id": 962,
                "src": "11207:7:0"
              },
              "arg": "_operator",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 40,
              "end_lineno": 316,
              "lineno": 316,
              "node_id": 961,
              "src": "11196:18:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 53,
                "end_col_offset": 57,
                "end_lineno": 316,
                "id": "bool",
                "lineno": 316,
                "node_id": 965,
                "src": "11227:4:0"
              },
              "arg": "_approved",
              "ast_type": "arg",
              "col_offset": 42,
              "end_col_offset": 57,
              "end_lineno": 316,
              "lineno": 316,
              "node_id": 964,
              "src": "11216:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 22,
          "default": null,
          "defaults": [],
          "end_col_offset": 57,
          "end_lineno": 316,
          "lineno": 316,
          "node_id": 960,
          "src": "11196:35:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 326,
            "lineno": 326,
            "msg": null,
            "node_id": 969,
            "src": "11776:30:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 34,
              "end_lineno": 326,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 20,
                "end_lineno": 326,
                "id": "_operator",
                "lineno": 326,
                "node_id": 971,
                "src": "11783:9:0"
              },
              "lineno": 326,
              "node_id": 970,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 326,
                "lineno": 326,
                "node_id": 1043,
                "src": "11783:23:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 24,
                "end_col_offset": 34,
                "end_lineno": 326,
                "lineno": 326,
                "node_id": 974,
                "src": "11796:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 27,
                  "end_lineno": 326,
                  "id": "msg",
                  "lineno": 326,
                  "node_id": 975,
                  "src": "11796:3:0"
                }
              },
              "src": "11783:23:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 60,
            "end_lineno": 327,
            "lineno": 327,
            "node_id": 978,
            "src": "11811:56:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 48,
              "end_lineno": 327,
              "lineno": 327,
              "node_id": 979,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 48,
                "end_lineno": 327,
                "lineno": 327,
                "node_id": 994,
                "src": "11811:44:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 47,
                  "end_lineno": 327,
                  "id": "_operator",
                  "lineno": 327,
                  "node_id": 991,
                  "src": "11845:9:0"
                }
              },
              "src": "11811:44:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 37,
                "end_lineno": 327,
                "lineno": 327,
                "node_id": 980,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 37,
                  "end_lineno": 327,
                  "lineno": 327,
                  "node_id": 990,
                  "src": "11811:33:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "sender",
                    "col_offset": 26,
                    "end_col_offset": 36,
                    "end_lineno": 327,
                    "lineno": 327,
                    "node_id": 985,
                    "src": "11833:10:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 26,
                      "end_col_offset": 29,
                      "end_lineno": 327,
                      "id": "msg",
                      "lineno": 327,
                      "node_id": 986,
                      "src": "11833:3:0"
                    }
                  }
                },
                "src": "11811:33:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "ownerToOperators",
                  "col_offset": 4,
                  "end_col_offset": 25,
                  "end_lineno": 327,
                  "lineno": 327,
                  "node_id": 981,
                  "src": "11811:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 327,
                    "id": "self",
                    "lineno": 327,
                    "node_id": 982,
                    "src": "11811:4:0"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 51,
              "end_col_offset": 60,
              "end_lineno": 327,
              "id": "_approved",
              "lineno": 327,
              "node_id": 995,
              "src": "11858:9:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 56,
            "end_lineno": 328,
            "lineno": 328,
            "node_id": 998,
            "src": "11872:52:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 23,
                  "end_col_offset": 33,
                  "end_lineno": 328,
                  "lineno": 328,
                  "node_id": 1002,
                  "src": "11891:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 23,
                    "end_col_offset": 26,
                    "end_lineno": 328,
                    "id": "msg",
                    "lineno": 328,
                    "node_id": 1003,
                    "src": "11891:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 44,
                  "end_lineno": 328,
                  "id": "_operator",
                  "lineno": 328,
                  "node_id": 1006,
                  "src": "11903:9:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 46,
                  "end_col_offset": 55,
                  "end_lineno": 328,
                  "id": "_approved",
                  "lineno": 328,
                  "node_id": 1008,
                  "src": "11914:9:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 56,
              "end_lineno": 328,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 22,
                "end_lineno": 328,
                "id": "ApprovalForAll",
                "lineno": 328,
                "node_id": 1000,
                "src": "11876:14:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 328,
              "node_id": 999,
              "src": "11876:48:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 315,
            "id": "external",
            "lineno": 315,
            "node_id": 1010,
            "src": "11165:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 324,
          "lineno": 317,
          "node_id": 1012,
          "src": "11238:485:0",
          "value": "\n    @dev Enables or disables approval for a third party (\"operator\") to manage all of\n         `msg.sender`'s assets. It also emits the ApprovalForAll event.\n         Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)\n    @notice This works even if sender doesn't own any tokens at the time.\n    @param _operator Address to add to the set of authorized operators.\n    @param _approved True if the operators is approved, false to revoke approval.\n    "
        },
        "end_col_offset": 56,
        "end_lineno": 328,
        "lineno": 316,
        "name": "setApprovalForAll",
        "node_id": 959,
        "pos": null,
        "returns": null,
        "src": "11174:750:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 335,
                "id": "address",
                "lineno": 335,
                "node_id": 1016,
                "src": "11991:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 9,
              "end_col_offset": 21,
              "end_lineno": 335,
              "lineno": 335,
              "node_id": 1015,
              "src": "11986:12:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 9,
          "default": null,
          "defaults": [],
          "end_col_offset": 21,
          "end_lineno": 335,
          "lineno": 335,
          "node_id": 1014,
          "src": "11986:12:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 345,
            "lineno": 345,
            "msg": null,
            "node_id": 1020,
            "src": "12387:32:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 36,
              "end_lineno": 345,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 345,
                "lineno": 345,
                "node_id": 1022,
                "src": "12394:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 345,
                  "id": "msg",
                  "lineno": 345,
                  "node_id": 1023,
                  "src": "12394:3:0"
                }
              },
              "lineno": 345,
              "node_id": 1021,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 345,
                "lineno": 345,
                "node_id": 1026,
                "src": "12394:25:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "minter",
                "col_offset": 25,
                "end_col_offset": 36,
                "end_lineno": 345,
                "lineno": 345,
                "node_id": 1027,
                "src": "12408:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 345,
                  "id": "self",
                  "lineno": 345,
                  "node_id": 1028,
                  "src": "12408:4:0"
                }
              },
              "src": "12394:25:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 42,
            "end_lineno": 346,
            "lineno": 346,
            "msg": null,
            "node_id": 1031,
            "src": "12424:38:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 42,
              "end_lineno": 346,
              "left": {
                "ast_type": "Attribute",
                "attr": "value",
                "col_offset": 11,
                "end_col_offset": 20,
                "end_lineno": 346,
                "lineno": 346,
                "node_id": 1033,
                "src": "12431:9:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 346,
                  "id": "msg",
                  "lineno": 346,
                  "node_id": 1034,
                  "src": "12431:3:0"
                }
              },
              "lineno": 346,
              "node_id": 1032,
              "op": {
                "ast_type": "GtE",
                "col_offset": 11,
                "end_col_offset": 42,
                "end_lineno": 346,
                "lineno": 346,
                "node_id": 1037,
                "src": "12431:31:0"
              },
              "right": {
                "ast_type": "Int",
                "col_offset": 24,
                "end_col_offset": 42,
                "end_lineno": 346,
                "lineno": 346,
                "node_id": 1038,
                "src": "12444:18:0",
                "value": 100000000000000000
              },
              "src": "12431:31:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 349,
            "lineno": 349,
            "msg": null,
            "node_id": 1039,
            "src": "12506:26:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 30,
              "end_lineno": 349,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 349,
                "id": "_to",
                "lineno": 349,
                "node_id": 1041,
                "src": "12513:3:0"
              },
              "lineno": 349,
              "node_id": 1040,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 30,
                "end_lineno": 349,
                "lineno": 349,
                "node_id": 1043,
                "src": "12513:19:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 30,
                "end_lineno": 349,
                "id": "ZERO_ADDRESS",
                "lineno": 349,
                "node_id": 1044,
                "src": "12520:12:0"
              },
              "src": "12513:19:0"
            }
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 14,
              "end_col_offset": 21,
              "end_lineno": 352,
              "id": "uint256",
              "lineno": 352,
              "node_id": 1049,
              "src": "12608:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 352,
            "lineno": 352,
            "node_id": 1046,
            "simple": 1,
            "src": "12598:36:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 352,
              "id": "_tokenId",
              "lineno": 352,
              "node_id": 1047,
              "src": "12598:8:0"
            },
            "value": {
              "ast_type": "Attribute",
              "attr": "totalMinted",
              "col_offset": 24,
              "end_col_offset": 40,
              "end_lineno": 352,
              "lineno": 352,
              "node_id": 1051,
              "src": "12618:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 24,
                "end_col_offset": 28,
                "end_lineno": 352,
                "id": "self",
                "lineno": 352,
                "node_id": 1052,
                "src": "12618:4:0"
              }
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 353,
            "lineno": 353,
            "node_id": 1055,
            "src": "12639:31:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 24,
                  "end_lineno": 353,
                  "id": "_to",
                  "lineno": 353,
                  "node_id": 1061,
                  "src": "12656:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 34,
                  "end_lineno": 353,
                  "id": "_tokenId",
                  "lineno": 353,
                  "node_id": 1063,
                  "src": "12661:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 353,
              "func": {
                "ast_type": "Attribute",
                "attr": "_addTokenTo",
                "col_offset": 4,
                "end_col_offset": 20,
                "end_lineno": 353,
                "lineno": 353,
                "node_id": 1057,
                "src": "12639:16:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 353,
                  "id": "self",
                  "lineno": 353,
                  "node_id": 1058,
                  "src": "12639:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 353,
              "node_id": 1056,
              "src": "12639:31:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 354,
            "lineno": 354,
            "node_id": 1066,
            "src": "12675:41:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 29,
                  "end_lineno": 354,
                  "id": "ZERO_ADDRESS",
                  "lineno": 354,
                  "node_id": 1070,
                  "src": "12688:12:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 34,
                  "end_lineno": 354,
                  "id": "_to",
                  "lineno": 354,
                  "node_id": 1072,
                  "src": "12702:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 44,
                  "end_lineno": 354,
                  "id": "_tokenId",
                  "lineno": 354,
                  "node_id": 1074,
                  "src": "12707:8:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 45,
              "end_lineno": 354,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 354,
                "id": "Transfer",
                "lineno": 354,
                "node_id": 1068,
                "src": "12679:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 354,
              "node_id": 1067,
              "src": "12679:37:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 25,
            "end_lineno": 355,
            "lineno": 355,
            "node_id": 1076,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 25,
              "end_lineno": 355,
              "lineno": 355,
              "node_id": 1081,
              "src": "12721:21:0"
            },
            "src": "12721:21:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalMinted",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 355,
              "lineno": 355,
              "node_id": 1077,
              "src": "12721:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 355,
                "id": "self",
                "lineno": 355,
                "node_id": 1078,
                "src": "12721:4:0"
              }
            },
            "value": {
              "ast_type": "Int",
              "col_offset": 24,
              "end_col_offset": 25,
              "end_lineno": 355,
              "lineno": 355,
              "node_id": 1082,
              "src": "12741:1:0",
              "value": 1
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 356,
            "lineno": 356,
            "node_id": 1083,
            "src": "12747:11:0",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 356,
              "lineno": 356,
              "node_id": 1084,
              "src": "12754:4:0",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 333,
            "id": "external",
            "lineno": 333,
            "node_id": 1085,
            "src": "11959:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 8,
            "end_lineno": 334,
            "id": "payable",
            "lineno": 334,
            "node_id": 1087,
            "src": "11969:7:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 343,
          "lineno": 336,
          "node_id": 1091,
          "src": "12013:322:0",
          "value": "\n    @dev Function to mint tokens\n         Throws if `msg.sender` is not the minter.\n         Throws if `_to` is zero address.\n         Throws if `_tokenId` is owned by someone.\n    @param _to The address that will receive the minted tokens.\n    @return A boolean that indicates if the operation was successful.\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 356,
        "lineno": 335,
        "name": "mint",
        "node_id": 1013,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 26,
          "end_col_offset": 30,
          "end_lineno": 335,
          "id": "bool",
          "lineno": 335,
          "node_id": 1089,
          "src": "12003:4:0"
        },
        "src": "11977:781:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 366,
          "lineno": 366,
          "node_id": 1093,
          "src": "12817:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 367,
            "lineno": 367,
            "node_id": 1094,
            "src": "12851:23:0",
            "value": {
              "ast_type": "Attribute",
              "attr": "totalMinted",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 367,
              "lineno": 367,
              "node_id": 1095,
              "src": "12858:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 15,
                "end_lineno": 367,
                "id": "self",
                "lineno": 367,
                "node_id": 1096,
                "src": "12858:4:0"
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 364,
            "id": "external",
            "lineno": 364,
            "node_id": 1099,
            "src": "12802:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 365,
            "id": "view",
            "lineno": 365,
            "node_id": 1101,
            "src": "12812:4:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 27,
        "end_lineno": 367,
        "lineno": 366,
        "name": "totalSupply",
        "node_id": 1092,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 21,
          "end_col_offset": 28,
          "end_lineno": 366,
          "id": "uint256",
          "lineno": 366,
          "node_id": 1103,
          "src": "12838:7:0"
        },
        "src": "12817:57:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 373,
          "lineno": 373,
          "node_id": 1106,
          "src": "12914:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 374,
            "lineno": 374,
            "node_id": 1107,
            "src": "12944:11:0",
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 374,
              "id": "NAME",
              "lineno": 374,
              "node_id": 1108,
              "src": "12951:4:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 371,
            "id": "external",
            "lineno": 371,
            "node_id": 1110,
            "src": "12899:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 372,
            "id": "view",
            "lineno": 372,
            "node_id": 1112,
            "src": "12909:4:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 15,
        "end_lineno": 374,
        "lineno": 373,
        "name": "name",
        "node_id": 1105,
        "pos": null,
        "returns": {
          "ast_type": "Subscript",
          "col_offset": 14,
          "end_col_offset": 24,
          "end_lineno": 373,
          "lineno": 373,
          "node_id": 1114,
          "slice": {
            "ast_type": "Index",
            "col_offset": 14,
            "end_col_offset": 24,
            "end_lineno": 373,
            "lineno": 373,
            "node_id": 1119,
            "src": "12928:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 21,
              "end_col_offset": 23,
              "end_lineno": 373,
              "lineno": 373,
              "node_id": 1117,
              "src": "12935:2:0",
              "value": 32
            }
          },
          "src": "12928:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 14,
            "end_col_offset": 20,
            "end_lineno": 373,
            "id": "String",
            "lineno": 373,
            "node_id": 1115,
            "src": "12928:6:0"
          }
        },
        "src": "12914:41:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 379,
          "lineno": 379,
          "node_id": 1121,
          "src": "12974:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 17,
            "end_lineno": 380,
            "lineno": 380,
            "node_id": 1122,
            "src": "13006:13:0",
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 17,
              "end_lineno": 380,
              "id": "SYMBOL",
              "lineno": 380,
              "node_id": 1123,
              "src": "13013:6:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 377,
            "id": "external",
            "lineno": 377,
            "node_id": 1125,
            "src": "12959:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 378,
            "id": "view",
            "lineno": 378,
            "node_id": 1127,
            "src": "12969:4:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 17,
        "end_lineno": 380,
        "lineno": 379,
        "name": "symbol",
        "node_id": 1120,
        "pos": null,
        "returns": {
          "ast_type": "Subscript",
          "col_offset": 16,
          "end_col_offset": 26,
          "end_lineno": 379,
          "lineno": 379,
          "node_id": 1129,
          "slice": {
            "ast_type": "Index",
            "col_offset": 16,
            "end_col_offset": 26,
            "end_lineno": 379,
            "lineno": 379,
            "node_id": 1134,
            "src": "12990:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 23,
              "end_col_offset": 25,
              "end_lineno": 379,
              "lineno": 379,
              "node_id": 1132,
              "src": "12997:2:0",
              "value": 32
            }
          },
          "src": "12990:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 16,
            "end_col_offset": 22,
            "end_lineno": 379,
            "id": "String",
            "lineno": 379,
            "node_id": 1130,
            "src": "12990:6:0"
          }
        },
        "src": "12974:45:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 385,
          "lineno": 385,
          "node_id": 1136,
          "src": "13038:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 66,
            "end_lineno": 386,
            "lineno": 386,
            "node_id": 1137,
            "src": "13072:62:0",
            "value": {
              "ast_type": "Str",
              "col_offset": 11,
              "end_col_offset": 66,
              "end_lineno": 386,
              "lineno": 386,
              "node_id": 1138,
              "src": "13079:55:0",
              "value": "ipfs://QmPBmyenadjRNPJ4pfuejqJwGzPXxEMtd966qMUruznCk7"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 383,
            "id": "external",
            "lineno": 383,
            "node_id": 1139,
            "src": "13023:8:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 384,
            "id": "view",
            "lineno": 384,
            "node_id": 1141,
            "src": "13033:4:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 66,
        "end_lineno": 386,
        "lineno": 385,
        "name": "tokenURI",
        "node_id": 1135,
        "pos": null,
        "returns": {
          "ast_type": "Subscript",
          "col_offset": 18,
          "end_col_offset": 28,
          "end_lineno": 385,
          "lineno": 385,
          "node_id": 1143,
          "slice": {
            "ast_type": "Index",
            "col_offset": 18,
            "end_col_offset": 28,
            "end_lineno": 385,
            "lineno": 385,
            "node_id": 1148,
            "src": "13056:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 25,
              "end_col_offset": 27,
              "end_lineno": 385,
              "lineno": 385,
              "node_id": 1146,
              "src": "13063:2:0",
              "value": 64
            }
          },
          "src": "13056:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 24,
            "end_lineno": 385,
            "id": "String",
            "lineno": 385,
            "node_id": 1144,
            "src": "13056:6:0"
          }
        },
        "src": "13038:96:0"
      }
    ],
    "col_offset": 0,
    "doc_string": null,
    "end_col_offset": 66,
    "end_lineno": 386,
    "lineno": 1,
    "name": "contracts/VyperNFT.vy",
    "node_id": 0,
    "src": "0:13134:0"
  },
  "bytecode": "0x3360045560056040527f546f6b656e0000000000000000000000000000000000000000000000000000006060526040805180630000095f52602082018051630000097f5250505060036040527f544b4e00000000000000000000000000000000000000000000000000000000006060526040805180630000099f5260208201805163000009bf5250505061095f6100a263000000003961095f6080016300000000f3600436101561000d57610743565b60003560e01c636a62784281186100b9576004358060a01c61095a57608052600454331861095a5767016345785d8a0000341061095a5760006080511461095a5760055460a05260805160405260a0516060526100686107ca565b60a05160805160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600060c0a46005546001818183011061095a5780820190509050600555600160c052602060c0f35b3461095a576301ffc9a781186101cf576004358060201b61095a576040526040517f01ffc9a7000000000000000000000000000000000000000000000000000000006080527f80ac58cd0000000000000000000000000000000000000000000000000000000060a0527f150b7a020000000000000000000000000000000000000000000000000000000060c0527f5b5e139f0000000000000000000000000000000000000000000000000000000060e0527f780e9d630000000000000000000000000000000000000000000000000000000061010052600060605260006005905b602081026080015183186101b25760016060526101bd565b60010181811861019a575b50506060519050610120526020610120f35b6370a08231811861020c576004358060a01c61095a5760405260006040511461095a57600260405160205260005260406000205460605260206060f35b636352211e811861023b57600060043560205260005260406000205460405260006040511461095a5760206040f35b63081812fc811861027857600060006004356020526000526040600020541461095a57600160043560205260005260406000205460405260206040f35b63e985e9c581186102ca576004358060a01c61095a576040526024358060a01c61095a576060526003604051602052600052604060002080606051602052600052604060002090505460805260206080f35b6323b872dd8118610319576004358060a01c61095a576101a0526024358060a01c61095a576101c0526101a051610100526101c051610120526044356101405233610160526103176108b6565b005b6342842e0e811861033b576000610600526106008051806101e052505061036b565b63b88d4fde81186104635760643560040161040081351161095a578035806101e052602082018181610200375050505b6004358060a01c61095a576101a0526024358060a01c61095a576101c0526101a051610100526101c051610120526044356101405233610160526103ad6108b6565b60006101c0513b11156104615763150b7a0261064052608033610660526101a051610680526044356106a052806106c05280610660016101e0518082526020820181818361020060045afa90505050805180602083010181600003601f163682375050601f19601f8251602001011690508101505060206106406104a461065c6101c0515afa610442573d600060003e3d6000fd5b60203d1061095a57610640516106205263150b7a02610620511861095a575b005b63095ea7b3811861053a576004358060a01c61095a57604052600060243560205260005260406000205460605260006060511461095a576060516040511461095a5733600060243560205260005260406000205414608052600360605160205260005260406000208033602052600052604060002090505460a0526080516104ed5760a0516104f0565b60015b1561095a5760405160016024356020526000526040600020556024356040516060517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600060c0a4005b63a22cb46581186105bf576004358060a01c61095a576040526024358060011c61095a57606052336040511461095a576060516003336020526000526040600020806040516020526000526040600020905055604051337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160605160805260206080a3005b6318160ddd81186105d65760055460405260206040f35b6306fdde0381186106365760208060405280604001602061095f60003960005180825260208201602061097f60003960005181525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b6395d89b4181186106965760208060405280604001602061099f6000396000518082526020820160206109bf60003960005181525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b633c130d9081186107415760208060a05260356040527f697066733a2f2f516d50426d79656e61646a524e504a34706675656a714a77476060527f7a505878454d7464393636714d5572757a6e436b37000000000000000000000060805260408160a001815180825260208301602083018281848460045afa905090505050805180602083010181600003601f163682375050601f19601f82516020010116905090508101905060a0f35b505b60006000fd5b60006060516020526000526040600020546080526040516080511460a05260016060516020526000526040600020546040511460c0526003608051602052600052604060002080604051602052600052604060002090505460e05260a0516107b35760c0516107b6565b60015b6107c25760e0516107c5565b60015b815250565b600060605160205260005260406000205461095a5760405160006060516020526000526040600020556002604051602052600052604060002080546001818183011061095a5780820190509050815550565b60405160006060516020526000526040600020541861095a5760006000606051602052600052604060002055600260405160205260005260406000208054600180821061095a5780820390509050815550565b60405160006060516020526000526040600020541861095a5760006001606051602052600052604060002054146108b457600060016060516020526000526040600020555b565b61016051604052610140516060526108cf610180610749565b610180511561095a576000610120511461095a5761010051604052610140516060526108f961086f565b610100516040526101405160605261090f61081c565b61012051604052610140516060526109256107ca565b6101405161012051610100517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000610180a4565b600080fd",
  "bytecodeSha1": "3f9038845e8dfc9dbe888f471929e3b95ce431f8",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.3.3"
  },
  "contractName": "VyperNFT",
  "coverageMap": {
    "branches": {
      "0": {
        "VyperNFT.safeTransferFrom": {
          "20": [
            9655,
            9670,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "VyperNFT._addTokenTo": {
          "42": [
            5934,
            5981
          ],
          "43": [
            6009,
            6039
          ],
          "44": [
            6072,
            6106
          ]
        },
        "VyperNFT._clearApproval": {
          "48": [
            6756,
            6797
          ],
          "49": [
            6885,
            6928
          ]
        },
        "VyperNFT._isApprovedOrOwner": {
          "37": [
            5405,
            5446
          ],
          "38": [
            5451,
            5491
          ],
          "39": [
            5496,
            5562
          ],
          "40": [
            5567,
            5639
          ],
          "41": [
            5644,
            5715
          ]
        },
        "VyperNFT._removeTokenFrom": {
          "45": [
            6341,
            6381
          ],
          "46": [
            6409,
            6448
          ],
          "47": [
            6481,
            6517
          ]
        },
        "VyperNFT._transferFrom": {
          "50": [
            7457,
            7506
          ],
          "51": [
            7553,
            7579
          ],
          "52": [
            7649,
            7685
          ],
          "53": [
            7748,
            7786
          ],
          "54": [
            7805,
            7836
          ],
          "55": [
            7864,
            7898
          ]
        },
        "VyperNFT.approve": {
          "22": [
            10628,
            10669
          ],
          "23": [
            11121,
            11161
          ],
          "24": [
            10720,
            10748
          ],
          "25": [
            10802,
            10827
          ],
          "26": [
            10857,
            10917
          ],
          "27": [
            10922,
            10995
          ],
          "28": [
            11000,
            11048
          ],
          "29": [
            11076,
            11116
          ]
        },
        "VyperNFT.balanceOf": {
          "9": [
            3769,
            3798
          ],
          "10": [
            3803,
            3842
          ]
        },
        "VyperNFT.getApproved": {
          "14": [
            4506,
            4553
          ],
          "15": [
            4558,
            4593
          ]
        },
        "VyperNFT.isApprovedForAll": {
          "16": [
            4885,
            4934
          ]
        },
        "VyperNFT.mint": {
          "0": [
            12387,
            12419
          ],
          "1": [
            12424,
            12462
          ],
          "2": [
            12506,
            12532
          ],
          "3": [
            12598,
            12634
          ],
          "4": [
            12639,
            12670
          ],
          "5": [
            12675,
            12716
          ],
          "6": [
            12721,
            12742
          ],
          "7": [
            12747,
            12758
          ]
        },
        "VyperNFT.name": {
          "34": [
            12944,
            12955
          ]
        },
        "VyperNFT.ownerOf": {
          "11": [
            4075,
            4116
          ],
          "12": [
            4167,
            4195
          ],
          "13": [
            4200,
            4212
          ]
        },
        "VyperNFT.safeTransferFrom": {
          "18": [
            9595,
            9647
          ],
          "19": [
            9719,
            9814
          ],
          "21": [
            9922,
            10025
          ]
        },
        "VyperNFT.setApprovalForAll": {
          "30": [
            11776,
            11806
          ],
          "31": [
            11811,
            11867
          ],
          "32": [
            11872,
            11924
          ]
        },
        "VyperNFT.supportsInterface": {
          "8": [
            3401,
            3444
          ]
        },
        "VyperNFT.symbol": {
          "35": [
            13006,
            13019
          ]
        },
        "VyperNFT.tokenURI": {
          "36": [
            13072,
            13134
          ]
        },
        "VyperNFT.totalSupply": {
          "33": [
            12851,
            12874
          ]
        },
        "VyperNFT.transferFrom": {
          "17": [
            8563,
            8615
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x600436101561000d57610743565b60003560e01c636a62784281186100b9576004358060a01c61095a57608052600454331861095a5767016345785d8a0000341061095a5760006080511461095a5760055460a05260805160405260a0516060526100686107ca565b60a05160805160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600060c0a46005546001818183011061095a5780820190509050600555600160c052602060c0f35b3461095a576301ffc9a781186101cf576004358060201b61095a576040526040517f01ffc9a7000000000000000000000000000000000000000000000000000000006080527f80ac58cd0000000000000000000000000000000000000000000000000000000060a0527f150b7a020000000000000000000000000000000000000000000000000000000060c0527f5b5e139f0000000000000000000000000000000000000000000000000000000060e0527f780e9d630000000000000000000000000000000000000000000000000000000061010052600060605260006005905b602081026080015183186101b25760016060526101bd565b60010181811861019a575b50506060519050610120526020610120f35b6370a08231811861020c576004358060a01c61095a5760405260006040511461095a57600260405160205260005260406000205460605260206060f35b636352211e811861023b57600060043560205260005260406000205460405260006040511461095a5760206040f35b63081812fc811861027857600060006004356020526000526040600020541461095a57600160043560205260005260406000205460405260206040f35b63e985e9c581186102ca576004358060a01c61095a576040526024358060a01c61095a576060526003604051602052600052604060002080606051602052600052604060002090505460805260206080f35b6323b872dd8118610319576004358060a01c61095a576101a0526024358060a01c61095a576101c0526101a051610100526101c051610120526044356101405233610160526103176108b6565b005b6342842e0e811861033b576000610600526106008051806101e052505061036b565b63b88d4fde81186104635760643560040161040081351161095a578035806101e052602082018181610200375050505b6004358060a01c61095a576101a0526024358060a01c61095a576101c0526101a051610100526101c051610120526044356101405233610160526103ad6108b6565b60006101c0513b11156104615763150b7a0261064052608033610660526101a051610680526044356106a052806106c05280610660016101e0518082526020820181818361020060045afa90505050805180602083010181600003601f163682375050601f19601f8251602001011690508101505060206106406104a461065c6101c0515afa610442573d600060003e3d6000fd5b60203d1061095a57610640516106205263150b7a02610620511861095a575b005b63095ea7b3811861053a576004358060a01c61095a57604052600060243560205260005260406000205460605260006060511461095a576060516040511461095a5733600060243560205260005260406000205414608052600360605160205260005260406000208033602052600052604060002090505460a0526080516104ed5760a0516104f0565b60015b1561095a5760405160016024356020526000526040600020556024356040516060517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600060c0a4005b63a22cb46581186105bf576004358060a01c61095a576040526024358060011c61095a57606052336040511461095a576060516003336020526000526040600020806040516020526000526040600020905055604051337f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160605160805260206080a3005b6318160ddd81186105d65760055460405260206040f35b6306fdde0381186106365760208060405280604001602061095f60003960005180825260208201602061097f60003960005181525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b6395d89b4181186106965760208060405280604001602061099f6000396000518082526020820160206109bf60003960005181525050805180602083010181600003601f163682375050601f19601f825160200101169050810190506040f35b633c130d9081186107415760208060a05260356040527f697066733a2f2f516d50426d79656e61646a524e504a34706675656a714a77476060527f7a505878454d7464393636714d5572757a6e436b37000000000000000000000060805260408160a001815180825260208301602083018281848460045afa905090505050805180602083010181600003601f163682375050601f19601f82516020010116905090508101905060a0f35b505b60006000fd5b60006060516020526000526040600020546080526040516080511460a05260016060516020526000526040600020546040511460c0526003608051602052600052604060002080604051602052600052604060002090505460e05260a0516107b35760c0516107b6565b60015b6107c25760e0516107c5565b60015b815250565b600060605160205260005260406000205461095a5760405160006060516020526000526040600020556002604051602052600052604060002080546001818183011061095a5780820190509050815550565b60405160006060516020526000526040600020541861095a5760006000606051602052600052604060002055600260405160205260005260406000208054600180821061095a5780820390509050815550565b60405160006060516020526000526040600020541861095a5760006001606051602052600052604060002054146108b457600060016060516020526000526040600020555b565b61016051604052610140516060526108cf610180610749565b610180511561095a576000610120511461095a5761010051604052610140516060526108f961086f565b610100516040526101405160605261090f61081c565b61012051604052610140516060526109256107ca565b6101405161012051610100517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000610180a4565b600080fd",
  "deployedSourceMap": "-1:-1:0:-;;;;;:::-;;:::-;:::-;;;;;;;;11977:781;:::-;-1:-1;;;;;;:::-;11986:12;;12408:11;12394:25;:10;12387:32;;:::-;12444:18;12431:9;-1:-1;12424:38;:::-;12520:12;12513:3;:19;-1:-1;12506:26;:::-;12618:16;12598:36;;;12656:3;-1:-1;;;12661:8;-1:-1;;;;12639:31;:::i;:::-;12707:8;12675:41;12702:3;12675:41;12688:12;12675:41;-1:-1;12675:41;;12721:16;:21;12741:1;-1:-1;;;;;;:::-;;;;12721:21;;;;:16;:21;12754:4;-1:-1;;;12747:11;-1:-1;11977:781::-;-1:-1;;:::-;;;;3225:219;:::-;-1:-1;;;;;;:::-;3247:20;;3408:12;:36;3424:20;-1:-1;;3424:20;-1:-1;;3424:20;-1:-1;;3424:20;-1:-1;;3424:20;-1:-1;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;3408:36;;-1:-1;;;3401:43;-1:-1;3225:219::-;-1:-1;;;3487:355;:::-;-1:-1;;;;;;:::-;3501:15;;3786:12;3776:6;:22;-1:-1;3769:29;:::-;3810:24;3835:6;3810:32;;;;;;;;-1:-1;;;;3803:39;-1:-1;3487:355::-;-1:-1;;;3861:351;:::-;4092:14;4107:8;4092:24;;;;;;;;4075:41;;;4183:12;4174:5;:21;-1:-1;4167:28;:::-;4200:12;4207:5;-1:-1;3861:351::-;-1:-1;;;4231:362;:::-;4541:12;4513:14;4584:8;4513:24;;;;;;;;:40;-1:-1;4506:47;:::-;4565:18;4584:8;4565:28;;;;;;;;-1:-1;;;;4558:35;-1:-1;4231:362::-;-1:-1;;;4612:322;:::-;-1:-1;;;;;;:::-;4633:15;;-1:-1;;;;;;:::-;4650:18;;4893:21;4915:6;4893:29;;;;;;;;-1:-1;4924:9;-1:-1;4892:42;;;;;;;;;-1:-1;;;;4885:49;-1:-1;4612:322::-;-1:-1;;;7939:676;:::-;-1:-1;;;;;;:::-;7956:14;;-1:-1;;;;;;:::-;7972:12;;8582:5;-1:-1;;;8589:3;-1:-1;;;8594:8;-1:-1;;;8604:10;-1:-1;;;8563:52;:::i;-1:-1::-;;7939:676::-;-1:-1;;;8628:1397;:::-;-1:-1;;8750:3;;-1:-1;;;8731:18;-1:-1;8731:18;;-1:-1;:::-;8628:1397::-;-1:-1;;;8628:1397;:::-;-1:-1;;;8731:18;-1:-1;;;;;:::-;;;;;;;;;;;;;;;8731:18;-1:-1::-;;;;;;;:::-;8658:14;;-1:-1;;;;;;:::-;8682:12;;9614:5;-1:-1;;;9621:3;-1:-1;;;9798:8;-1:-1;;;9636:10;-1:-1;;;9595:52;:::i;:::-;9655:15;:3;-1:-1;9655:15;;9652:373;-1:-1;9652:373::-;-1:-1;;9742:72;-1:-1;9779:10;-1:-1;;9791:5;-1:-1;;;9798:8;-1:-1;;;;;;;;;9808:5;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9742:72;-1:-1;;;;9742:19;-1:-1;;;9742:72;:::-;-1:-1;;;;;;;9742:72::-;-1:-1;;;9742:72;:::-;;9719:95;;;9944:81;9929:11;:96;9922:103;;:::-;-1:-1::-;;8628:1397::-;-1:-1;;;10038:1123;:::-;-1:-1;;;;;;:::-;10050:18;;10645:14;11152:8;10645:24;;;;;;;;10628:41;;;10736:12;10727:5;:21;-1:-1;10720:28;:::-;10822:5;10809:18;:9;:18;-1:-1;10802:25;:::-;10907:10;10879:14;11152:8;10879:24;;;;;;;;:38;;10857:60;;10954:21;10976:5;10954:28;;;;;;;;-1:-1;10984:10;10953:42;;;;;;;;;10922:73;;;11008:13;-1:-1;11008:39;:::-;11025:22;11008:39;;:::-;:::-;;:::-;11000:48;;:::-;11107:9;11076:40;:18;11152:8;11076:28;;;;;;;;:40;11152:8;11121:40;11141:9;11121:40;11134:5;11121:40;;-1:-1;11121:40;;-1:-1;10038:1123::-;-1:-1;;;11174:750;:::-;-1:-1;;;;;;:::-;11196:18;;-1:-1;;;;;;:::-;11216:15;;11796:10;11783:9;:23;-1:-1;11776:30;:::-;11858:9;11811:56;:21;11833:10;11811:33;;;;;;;-1:-1;11845:9;-1:-1;11811:44;;;;;;;;;:56;11903:9;11872:52;11891:10;11872:52;11914:9;-1:-1;;;;11872:52;;-1:-1;11174:750::-;-1:-1;;;12817:57;:::-;12858:16;-1:-1;;;;12851:23;-1:-1;12817:57::-;-1:-1;;;12914:41;:::-;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12944:11;-1:-1;12914:41::-;-1:-1;;;12974:45;:::-;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13006:13;-1:-1;12974:45::-;-1:-1;;;13038:96;:::-;-1:-1;;;;;;13079:55;-1:-1;;13079:55;-1:-1;;13079:55;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13072:62;-1:-1;13038:96::-;-1:-1;:::-;;;;4988:727::-;5422:14;5437:8;5422:24;;;;;;;;5405:41;;;5483:8;5474:17;:5;:17;;5451:40;;5534:18;5553:8;5534:28;;;;;;;;5522:40;:8;:40;;5496:66;;5600:21;5622:5;5600:28;;;;;;;;-1:-1;5630:8;-1:-1;5599:40;;;;;;;;;5567:72;;;5652:14;-1:-1;5652:35;:::-;5670:17;5652:35;;:::-;:::-;;:::-;5651:64;:::-;5692:23;5651:64;;:::-;:::-;;:::-;-1:-1;5644:71;;-1:-1::-;5728:378::-;5941:14;5956:8;5941:24;;;;;;;;:40;5934:47;:::-;6036:3;6009:30;:14;6024:8;6009:24;;;;;;;;:30;6072:24;6097:3;6072:29;;;;;;;;-1:-1;6072:34;6105:1;-1:-1;;;;;;:::-;;;;6072:34;;;;-1:-1;6072:34;;-1:-1::-;6119:398::-;6376:5;6348:33;:14;6363:8;6348:24;;;;;;;;:33;6341:40;;:::-;6436:12;6409:14;6424:8;6409:24;;;;;;;;:39;6481:24;6506:5;6481:31;;;;;;;;-1:-1;6481:36;6516:1;-1:-1;;;;:::-;;;;6481:36;;;;-1:-1;6481:36;;-1:-1::-;6530:398::-;6791:6;6763:34;:14;6778:8;6763:24;;;;;;;;:34;6756:41;;:::-;6837:12;6805:18;6824:8;6805:28;;;;;;;;:44;-1:-1;;6802:126::-;6916:12;6885:18;6904:8;6885:28;;;;;;;;:43;6530:398::-;-1:-1::-;6941:957::-;7488:7;-1:-1;;;7497:8;-1:-1;;;;;7464:42;:::i;:::-;;7457:49;;;:::-;7567:12;7560:3;:19;-1:-1;7553:26;:::-;7669:5;-1:-1;;;7676:8;-1:-1;;;;7649:36;:::i;:::-;7770:5;-1:-1;;;7777:8;-1:-1;;;;7748:38;:::i;:::-;7822:3;-1:-1;;;7827:8;-1:-1;;;;7805:31;:::i;:::-;7889:8;7864:34;7884:3;7864:34;7877:5;7864:34;;-1:-1;7864:34;;-1:-1::-;:::-;;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {
      "__init__()": {
        "details": "Contract constructor."
      },
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner. Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP) Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.",
        "params": {
          "_owner": "Address for whom to query the balance."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        }
      },
      "mint(address)": {
        "details": "Function to mint tokens Throws if `msg.sender` is not the minter. Throws if `_to` is zero address. Throws if `_tokenId` is owned by someone.",
        "params": {
          "_to": "The address that will receive the minted tokens."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`. NOTE: bytes4 is represented by bytes32 with padding",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`. NOTE: bytes4 is represented by bytes32 with padding",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event. Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)",
        "notice": "This works even if sender doesn't own any tokens at the time.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Interface identification is specified in ERC-165.",
        "params": {
          "interface_id": "Id of the interface"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.",
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    }
  },
  "offset": [
    0,
    13136
  ],
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x743 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x6A627842 DUP2 XOR PUSH2 0x0B9 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH1 0x80 MSTORE PUSH1 0x4 SLOAD CALLER XOR PUSH2 0x95A JUMPI PUSH8 0x16345785D8A00 CALLVALUE LT PUSH2 0x95A JUMPI PUSH1 0x0 PUSH1 0x80 MLOAD EQ PUSH2 0x95A JUMPI PUSH1 0x5 SLOAD PUSH1 0xA0 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 MSTORE PUSH1 0xA0 MLOAD PUSH1 0x60 MSTORE PUSH2 0x068 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0xA0 MLOAD PUSH1 0x80 MLOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH1 0xC0 LOG4 PUSH1 0x5 SLOAD PUSH1 0x1 DUP2 DUP2 DUP4 ADD LT PUSH2 0x95A JUMPI DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 RETURN JUMPDEST CALLVALUE PUSH2 0x95A JUMPI PUSH4 0x1FFC9A7 DUP2 XOR PUSH2 0x1CF JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x20 SHL PUSH2 0x95A JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x1FFC9A70000000000000000000000000000 PUSH1 0x80 MSTORE PUSH32 0x80AC58CD0000000000000000000000000000 PUSH1 0xA0 MSTORE PUSH32 0x15B7A20000000000000000000000000000 PUSH1 0xC0 MSTORE PUSH32 0x5B5E139F0000000000000000000000000000 PUSH1 0xE0 MSTORE PUSH32 0x78E9D630000000000000000000000000000 PUSH2 0x10 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE PUSH1 0x0 PUSH1 0x5 SWAP1 JUMPDEST PUSH1 0x20 DUP2 MUL PUSH1 0x80 ADD MLOAD DUP4 XOR PUSH2 0x1B2 JUMPI PUSH1 0x1 PUSH1 0x60 MSTORE PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x19A JUMPI JUMPDEST POP POP PUSH1 0x60 MLOAD SWAP1 POP PUSH2 0x120 MSTORE PUSH1 0x20 PUSH2 0x120 RETURN JUMPDEST PUSH4 0x70A08231 DUP2 XOR PUSH2 0x2C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD EQ PUSH2 0x95A JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x6352211E DUP2 XOR PUSH2 0x23B JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD EQ PUSH2 0x95A JUMPI PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x81812FC DUP2 XOR PUSH2 0x278 JUMPI PUSH1 0x0 PUSH1 0x0 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD EQ PUSH2 0x95A JUMPI PUSH1 0x1 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0xE985E9C5 DUP2 XOR PUSH2 0x2CA JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH1 0x60 MSTORE PUSH1 0x3 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0x23B872DD DUP2 XOR PUSH2 0x319 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH2 0x1A0 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x10 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x120 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x140 MSTORE CALLER PUSH2 0x160 MSTORE PUSH2 0x317 PUSH2 0x8B6 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x42842EE DUP2 XOR PUSH2 0x33B JUMPI PUSH1 0x0 PUSH2 0x60 MSTORE PUSH2 0x60 DUP1 MLOAD DUP1 PUSH2 0x1E0 MSTORE POP POP PUSH2 0x36B JUMP JUMPDEST PUSH4 0xB88D4FDE DUP2 XOR PUSH2 0x463 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x40 DUP2 CALLDATALOAD GT PUSH2 0x95A JUMPI DUP1 CALLDATALOAD DUP1 PUSH2 0x1E0 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 PUSH2 0x20 CALLDATACOPY POP POP POP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH2 0x1A0 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x10 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x120 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x140 MSTORE CALLER PUSH2 0x160 MSTORE PUSH2 0x3AD PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 MLOAD EXTCODESIZE GT ISZERO PUSH2 0x461 JUMPI PUSH4 0x15B7A2 PUSH2 0x640 MSTORE PUSH1 0x80 CALLER PUSH2 0x660 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x680 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x6A0 MSTORE DUP1 PUSH2 0x6C0 MSTORE DUP1 PUSH2 0x660 ADD PUSH2 0x1E0 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 DUP4 PUSH2 0x20 PUSH1 0x4 GAS STATICCALL SWAP1 POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD DUP2 PUSH1 0x0 SUB PUSH1 0x1F AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD POP POP PUSH1 0x20 PUSH2 0x640 PUSH2 0x4A4 PUSH2 0x65C PUSH2 0x1C0 MLOAD GAS STATICCALL PUSH2 0x442 JUMPI RETURNDATASIZE PUSH1 0x0 PUSH1 0x0 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE LT PUSH2 0x95A JUMPI PUSH2 0x640 MLOAD PUSH2 0x620 MSTORE PUSH4 0x15B7A2 PUSH2 0x620 MLOAD XOR PUSH2 0x95A JUMPI JUMPDEST STOP JUMPDEST PUSH4 0x95EA7B3 DUP2 XOR PUSH2 0x53A JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x0 PUSH1 0x60 MLOAD EQ PUSH2 0x95A JUMPI PUSH1 0x60 MLOAD PUSH1 0x40 MLOAD EQ PUSH2 0x95A JUMPI CALLER PUSH1 0x0 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD EQ PUSH1 0x80 MSTORE PUSH1 0x3 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0xA0 MSTORE PUSH1 0x80 MLOAD PUSH2 0x4ED JUMPI PUSH1 0xA0 MLOAD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x60 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x0 PUSH1 0xC0 LOG4 STOP JUMPDEST PUSH4 0xA22CB465 DUP2 XOR PUSH2 0x5BF JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x95A JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0x1 SHR PUSH2 0x95A JUMPI PUSH1 0x60 MSTORE CALLER PUSH1 0x40 MLOAD EQ PUSH2 0x95A JUMPI PUSH1 0x60 MLOAD PUSH1 0x3 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SSTORE PUSH1 0x40 MLOAD CALLER PUSH32 0x17307EAB39AB617E8899845AD3D59BD9653F20F22092489CA2B5937696C31 PUSH1 0x60 MLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 LOG3 STOP JUMPDEST PUSH4 0x1816DDD DUP2 XOR PUSH2 0x5D6 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x6FDDE3 DUP2 XOR PUSH2 0x636 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x20 PUSH2 0x95F PUSH1 0x0 CODECOPY PUSH1 0x0 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 PUSH2 0x97F PUSH1 0x0 CODECOPY PUSH1 0x0 MLOAD DUP2 MSTORE POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD DUP2 PUSH1 0x0 SUB PUSH1 0x1F AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x95D89B41 DUP2 XOR PUSH2 0x696 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x20 PUSH2 0x99F PUSH1 0x0 CODECOPY PUSH1 0x0 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 PUSH2 0x9BF PUSH1 0x0 CODECOPY PUSH1 0x0 MLOAD DUP2 MSTORE POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD DUP2 PUSH1 0x0 SUB PUSH1 0x1F AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x3C13D90 DUP2 XOR PUSH2 0x741 JUMPI PUSH1 0x20 DUP1 PUSH1 0xA0 MSTORE PUSH1 0x35 PUSH1 0x40 MSTORE PUSH32 0x697066733A2F2F516D50426D79656E61646A524E504A34706675656A714A7747 PUSH1 0x60 MSTORE PUSH32 0x7A505878454D7464393636714D5572757A6E436B3700000000000 PUSH1 0x80 MSTORE PUSH1 0x40 DUP2 PUSH1 0xA0 ADD DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP3 DUP2 DUP5 DUP5 PUSH1 0x4 GAS STATICCALL SWAP1 POP SWAP1 POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD DUP2 PUSH1 0x0 SUB PUSH1 0x1F AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0xA0 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH1 0x80 MLOAD EQ PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x40 MLOAD EQ PUSH1 0xC0 MSTORE PUSH1 0x3 PUSH1 0x80 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0xE0 MSTORE PUSH1 0xA0 MLOAD PUSH2 0x7B3 JUMPI PUSH1 0xC0 MLOAD PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x7C2 JUMPI PUSH1 0xE0 MLOAD PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 DUP4 ADD LT PUSH2 0x95A JUMPI DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD XOR PUSH2 0x95A JUMPI PUSH1 0x0 PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 LT PUSH2 0x95A JUMPI DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD XOR PUSH2 0x95A JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD EQ PUSH2 0x8B4 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SSTORE JUMPDEST JUMP JUMPDEST PUSH2 0x160 MLOAD PUSH1 0x40 MSTORE PUSH2 0x140 MLOAD PUSH1 0x60 MSTORE PUSH2 0x8CF PUSH2 0x180 PUSH2 0x749 JUMP JUMPDEST PUSH2 0x180 MLOAD ISZERO PUSH2 0x95A JUMPI PUSH1 0x0 PUSH2 0x120 MLOAD EQ PUSH2 0x95A JUMPI PUSH2 0x10 MLOAD PUSH1 0x40 MSTORE PUSH2 0x140 MLOAD PUSH1 0x60 MSTORE PUSH2 0x8F9 PUSH2 0x86F JUMP JUMPDEST PUSH2 0x10 MLOAD PUSH1 0x40 MSTORE PUSH2 0x140 MLOAD PUSH1 0x60 MSTORE PUSH2 0x9F PUSH2 0x81C JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x40 MSTORE PUSH2 0x140 MLOAD PUSH1 0x60 MSTORE PUSH2 0x925 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x120 MLOAD PUSH2 0x10 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 PUSH2 0x180 LOG4 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT",
  "pcMap": {
    "0": {
      "offset": [
        0,
        13134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "LT"
    },
    "4": {
      "op": "ISZERO"
    },
    "5": {
      "op": "PUSH2",
      "value": "0x0D"
    },
    "8": {
      "op": "JUMPI"
    },
    "9": {
      "op": "PUSH2",
      "value": "0x743"
    },
    "12": {
      "op": "JUMP"
    },
    "13": {
      "op": "JUMPDEST"
    },
    "14": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16": {
      "op": "CALLDATALOAD"
    },
    "17": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19": {
      "op": "SHR"
    },
    "20": {
      "op": "PUSH4",
      "value": "0x6A627842"
    },
    "25": {
      "op": "DUP2"
    },
    "26": {
      "op": "XOR"
    },
    "27": {
      "fn": "VyperNFT.mint",
      "offset": [
        11977,
        12758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0B9"
    },
    "30": {
      "fn": "VyperNFT.mint",
      "offset": [
        11977,
        12758
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "31": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "33": {
      "op": "CALLDATALOAD"
    },
    "34": {
      "op": "DUP1"
    },
    "35": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "37": {
      "op": "SHR"
    },
    "38": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "41": {
      "op": "JUMPI"
    },
    "42": {
      "fn": "VyperNFT.mint",
      "offset": [
        11986,
        11998
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "44": {
      "fn": "VyperNFT.mint",
      "offset": [
        11986,
        11998
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "45": {
      "fn": "VyperNFT.mint",
      "offset": [
        12408,
        12419
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x4"
    },
    "47": {
      "fn": "VyperNFT.mint",
      "offset": [
        12394,
        12419
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "48": {
      "fn": "VyperNFT.mint",
      "offset": [
        12394,
        12404
      ],
      "op": "CALLER",
      "path": "0"
    },
    "49": {
      "fn": "VyperNFT.mint",
      "offset": [
        12387,
        12419
      ],
      "op": "XOR",
      "path": "0"
    },
    "50": {
      "fn": "VyperNFT.mint",
      "offset": [
        12387,
        12419
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "53": {
      "fn": "VyperNFT.mint",
      "offset": [
        12387,
        12419
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": "VyperNFT.mint",
      "offset": [
        12444,
        12462
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 1,
      "value": "0x16345785D8A00"
    },
    "63": {
      "fn": "VyperNFT.mint",
      "offset": [
        12431,
        12440
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "64": {
      "op": "LT"
    },
    "65": {
      "fn": "VyperNFT.mint",
      "offset": [
        12424,
        12462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "68": {
      "fn": "VyperNFT.mint",
      "offset": [
        12424,
        12462
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "69": {
      "fn": "VyperNFT.mint",
      "offset": [
        12520,
        12532
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "71": {
      "fn": "VyperNFT.mint",
      "offset": [
        12513,
        12516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "73": {
      "fn": "VyperNFT.mint",
      "offset": [
        12513,
        12532
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "74": {
      "op": "EQ"
    },
    "75": {
      "fn": "VyperNFT.mint",
      "offset": [
        12506,
        12532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "78": {
      "fn": "VyperNFT.mint",
      "offset": [
        12506,
        12532
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "79": {
      "fn": "VyperNFT.mint",
      "offset": [
        12618,
        12634
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x5"
    },
    "81": {
      "fn": "VyperNFT.mint",
      "offset": [
        12598,
        12634
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "82": {
      "fn": "VyperNFT.mint",
      "offset": [
        12598,
        12634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "84": {
      "fn": "VyperNFT.mint",
      "offset": [
        12598,
        12634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "85": {
      "fn": "VyperNFT.mint",
      "offset": [
        12656,
        12659
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x80"
    },
    "87": {
      "op": "MLOAD"
    },
    "88": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "90": {
      "op": "MSTORE"
    },
    "91": {
      "fn": "VyperNFT.mint",
      "offset": [
        12661,
        12669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "93": {
      "op": "MLOAD"
    },
    "94": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "96": {
      "op": "MSTORE"
    },
    "97": {
      "op": "PUSH2",
      "value": "0x068"
    },
    "100": {
      "fn": "VyperNFT.mint",
      "offset": [
        12639,
        12670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CA"
    },
    "103": {
      "fn": "VyperNFT.mint",
      "jump": "i",
      "offset": [
        12639,
        12670
      ],
      "op": "JUMP",
      "path": "0"
    },
    "104": {
      "fn": "VyperNFT.mint",
      "offset": [
        12639,
        12670
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "105": {
      "fn": "VyperNFT.mint",
      "offset": [
        12707,
        12715
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0xA0"
    },
    "107": {
      "fn": "VyperNFT.mint",
      "offset": [
        12675,
        12716
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "108": {
      "fn": "VyperNFT.mint",
      "offset": [
        12702,
        12705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "110": {
      "fn": "VyperNFT.mint",
      "offset": [
        12675,
        12716
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "111": {
      "fn": "VyperNFT.mint",
      "offset": [
        12688,
        12700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "113": {
      "fn": "VyperNFT.mint",
      "offset": [
        12675,
        12716
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "148": {
      "fn": "VyperNFT.mint",
      "offset": [
        12675,
        12716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "150": {
      "fn": "VyperNFT.mint",
      "offset": [
        12675,
        12716
      ],
      "op": "LOG4",
      "path": "0"
    },
    "151": {
      "fn": "VyperNFT.mint",
      "offset": [
        12721,
        12737
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x5"
    },
    "153": {
      "fn": "VyperNFT.mint",
      "offset": [
        12721,
        12742
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "154": {
      "fn": "VyperNFT.mint",
      "offset": [
        12741,
        12742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "156": {
      "op": "DUP2"
    },
    "157": {
      "op": "DUP2"
    },
    "158": {
      "op": "DUP4"
    },
    "159": {
      "op": "ADD"
    },
    "160": {
      "op": "LT"
    },
    "161": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "164": {
      "op": "JUMPI"
    },
    "165": {
      "op": "DUP1"
    },
    "166": {
      "op": "DUP3"
    },
    "167": {
      "op": "ADD"
    },
    "168": {
      "fn": "VyperNFT.mint",
      "offset": [
        12721,
        12742
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "169": {
      "fn": "VyperNFT.mint",
      "offset": [
        12721,
        12742
      ],
      "op": "POP",
      "path": "0"
    },
    "170": {
      "fn": "VyperNFT.mint",
      "offset": [
        12721,
        12742
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "171": {
      "fn": "VyperNFT.mint",
      "offset": [
        12721,
        12742
      ],
      "op": "POP",
      "path": "0"
    },
    "172": {
      "fn": "VyperNFT.mint",
      "offset": [
        12721,
        12737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "174": {
      "fn": "VyperNFT.mint",
      "offset": [
        12721,
        12742
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "175": {
      "fn": "VyperNFT.mint",
      "offset": [
        12754,
        12758
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "177": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "179": {
      "op": "MSTORE"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "182": {
      "fn": "VyperNFT.mint",
      "offset": [
        12747,
        12758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "184": {
      "op": "RETURN"
    },
    "185": {
      "fn": "VyperNFT.mint",
      "offset": [
        11977,
        12758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "op": "CALLVALUE"
    },
    "187": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "190": {
      "dev": "Cannot send ether to nonpayable function",
      "offset": [
        0,
        0
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "191": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "196": {
      "op": "DUP2"
    },
    "197": {
      "op": "XOR"
    },
    "198": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3225,
        3444
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF"
    },
    "201": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3225,
        3444
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "202": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "204": {
      "op": "CALLDATALOAD"
    },
    "205": {
      "op": "DUP1"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "208": {
      "op": "SHL"
    },
    "209": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "212": {
      "op": "JUMPI"
    },
    "213": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3247,
        3267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "215": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3247,
        3267
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "216": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3408,
        3420
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x40"
    },
    "218": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3408,
        3444
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "219": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3424,
        3444
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x1FFC9A70000000000000000000000000000"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "254": {
      "op": "MSTORE"
    },
    "255": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3424,
        3444
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x80AC58CD0000000000000000000000000000"
    },
    "288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "290": {
      "op": "MSTORE"
    },
    "291": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3424,
        3444
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x15B7A20000000000000000000000000000"
    },
    "324": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "326": {
      "op": "MSTORE"
    },
    "327": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3424,
        3444
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x5B5E139F0000000000000000000000000000"
    },
    "360": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "362": {
      "op": "MSTORE"
    },
    "363": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3424,
        3444
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x78E9D630000000000000000000000000000"
    },
    "396": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "399": {
      "op": "MSTORE"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "404": {
      "op": "MSTORE"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "409": {
      "op": "SWAP1"
    },
    "410": {
      "op": "JUMPDEST"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "413": {
      "op": "DUP2"
    },
    "414": {
      "op": "MUL"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "417": {
      "op": "ADD"
    },
    "418": {
      "op": "MLOAD"
    },
    "419": {
      "op": "DUP4"
    },
    "420": {
      "op": "XOR"
    },
    "421": {
      "op": "PUSH2",
      "value": "0x1B2"
    },
    "424": {
      "op": "JUMPI"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "429": {
      "op": "MSTORE"
    },
    "430": {
      "op": "PUSH2",
      "value": "0x1BD"
    },
    "433": {
      "op": "JUMP"
    },
    "434": {
      "op": "JUMPDEST"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "op": "DUP2"
    },
    "439": {
      "op": "DUP2"
    },
    "440": {
      "op": "XOR"
    },
    "441": {
      "op": "PUSH2",
      "value": "0x19A"
    },
    "444": {
      "op": "JUMPI"
    },
    "445": {
      "op": "JUMPDEST"
    },
    "446": {
      "op": "POP"
    },
    "447": {
      "op": "POP"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "450": {
      "op": "MLOAD"
    },
    "451": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3408,
        3444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "452": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3408,
        3444
      ],
      "op": "POP",
      "path": "0"
    },
    "453": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "456": {
      "op": "MSTORE"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "459": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3401,
        3444
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "462": {
      "op": "RETURN"
    },
    "463": {
      "fn": "VyperNFT.supportsInterface",
      "offset": [
        3225,
        3444
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "464": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "469": {
      "op": "DUP2"
    },
    "470": {
      "op": "XOR"
    },
    "471": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3487,
        3842
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C"
    },
    "474": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3487,
        3842
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "477": {
      "op": "CALLDATALOAD"
    },
    "478": {
      "op": "DUP1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "481": {
      "op": "SHR"
    },
    "482": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "485": {
      "op": "JUMPI"
    },
    "486": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3501,
        3516
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "488": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3501,
        3516
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "489": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3786,
        3798
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x0"
    },
    "491": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3776,
        3782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "493": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3776,
        3798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "494": {
      "op": "EQ"
    },
    "495": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3769,
        3798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "498": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3769,
        3798
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "499": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3834
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x2"
    },
    "501": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3835,
        3841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "503": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3842
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "504": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "506": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3842
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "507": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "509": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3842
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "510": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "512": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "514": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3810,
        3842
      ],
      "op": "SHA3",
      "path": "0"
    },
    "515": {
      "op": "SLOAD"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "518": {
      "op": "MSTORE"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "521": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3803,
        3842
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "523": {
      "op": "RETURN"
    },
    "524": {
      "fn": "VyperNFT.balanceOf",
      "offset": [
        3487,
        3842
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "525": {
      "op": "PUSH4",
      "value": "0x6352211E"
    },
    "530": {
      "op": "DUP2"
    },
    "531": {
      "op": "XOR"
    },
    "532": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        3861,
        4212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B"
    },
    "535": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        3861,
        4212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "536": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4106
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "538": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4107,
        4115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "540": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4116
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "541": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "543": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "544": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "546": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "547": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "549": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "551": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4092,
        4116
      ],
      "op": "SHA3",
      "path": "0"
    },
    "552": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4075,
        4116
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "553": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4075,
        4116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "555": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4075,
        4116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "556": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4183,
        4195
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x0"
    },
    "558": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4174,
        4179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "560": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4174,
        4195
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "561": {
      "op": "EQ"
    },
    "562": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4167,
        4195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "565": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4167,
        4195
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "566": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4200,
        4212
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x20"
    },
    "568": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        4207,
        4212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "570": {
      "op": "RETURN"
    },
    "571": {
      "fn": "VyperNFT.ownerOf",
      "offset": [
        3861,
        4212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "572": {
      "op": "PUSH4",
      "value": "0x81812FC"
    },
    "577": {
      "op": "DUP2"
    },
    "578": {
      "op": "XOR"
    },
    "579": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4231,
        4593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278"
    },
    "582": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4231,
        4593
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "583": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4541,
        4553
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "585": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "587": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4584,
        4592
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x4"
    },
    "589": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4537
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "590": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "592": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "593": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "595": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4537
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "596": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "598": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "600": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4537
      ],
      "op": "SHA3",
      "path": "0"
    },
    "601": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4513,
        4553
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "602": {
      "op": "EQ"
    },
    "603": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4506,
        4553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "606": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4506,
        4553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "607": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "609": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4584,
        4592
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "611": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4593
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "612": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "614": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4593
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "615": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "617": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4593
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "620": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "622": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4565,
        4593
      ],
      "op": "SHA3",
      "path": "0"
    },
    "623": {
      "op": "SLOAD"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "626": {
      "op": "MSTORE"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "629": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4558,
        4593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "631": {
      "op": "RETURN"
    },
    "632": {
      "fn": "VyperNFT.getApproved",
      "offset": [
        4231,
        4593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "633": {
      "op": "PUSH4",
      "value": "0xE985E9C5"
    },
    "638": {
      "op": "DUP2"
    },
    "639": {
      "op": "XOR"
    },
    "640": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4612,
        4934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "643": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4612,
        4934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "646": {
      "op": "CALLDATALOAD"
    },
    "647": {
      "op": "DUP1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "650": {
      "op": "SHR"
    },
    "651": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "654": {
      "op": "JUMPI"
    },
    "655": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4633,
        4648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "657": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4633,
        4648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "660": {
      "op": "CALLDATALOAD"
    },
    "661": {
      "op": "DUP1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "664": {
      "op": "SHR"
    },
    "665": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "668": {
      "op": "JUMPI"
    },
    "669": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4650,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "671": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4650,
        4668
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "672": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4914
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x3"
    },
    "674": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4915,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "676": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4922
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "677": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "679": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4922
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "680": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "682": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4922
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "683": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "685": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "687": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4893,
        4922
      ],
      "op": "SHA3",
      "path": "0"
    },
    "688": {
      "op": "DUP1"
    },
    "689": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4924,
        4933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "691": {
      "op": "MLOAD"
    },
    "692": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "694": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "695": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "697": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "698": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "700": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "702": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "SHA3",
      "path": "0"
    },
    "703": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "704": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4892,
        4934
      ],
      "op": "POP",
      "path": "0"
    },
    "705": {
      "op": "SLOAD"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "711": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4885,
        4934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "713": {
      "op": "RETURN"
    },
    "714": {
      "fn": "VyperNFT.isApprovedForAll",
      "offset": [
        4612,
        4934
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "715": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "720": {
      "op": "DUP2"
    },
    "721": {
      "op": "XOR"
    },
    "722": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        7939,
        8615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "725": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        7939,
        8615
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "728": {
      "op": "CALLDATALOAD"
    },
    "729": {
      "op": "DUP1"
    },
    "730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "732": {
      "op": "SHR"
    },
    "733": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "736": {
      "op": "JUMPI"
    },
    "737": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        7956,
        7970
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "740": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        7956,
        7970
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "743": {
      "op": "CALLDATALOAD"
    },
    "744": {
      "op": "DUP1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "747": {
      "op": "SHR"
    },
    "748": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "751": {
      "op": "JUMPI"
    },
    "752": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        7972,
        7984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "755": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        7972,
        7984
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "756": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        8582,
        8587
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x1A0"
    },
    "759": {
      "op": "MLOAD"
    },
    "760": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "763": {
      "op": "MSTORE"
    },
    "764": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        8589,
        8592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "767": {
      "op": "MLOAD"
    },
    "768": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "771": {
      "op": "MSTORE"
    },
    "772": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        8594,
        8602
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "774": {
      "op": "CALLDATALOAD"
    },
    "775": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "778": {
      "op": "MSTORE"
    },
    "779": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        8604,
        8614
      ],
      "op": "CALLER",
      "path": "0"
    },
    "780": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "783": {
      "op": "MSTORE"
    },
    "784": {
      "op": "PUSH2",
      "value": "0x317"
    },
    "787": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        8563,
        8615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B6"
    },
    "790": {
      "fn": "VyperNFT.transferFrom",
      "jump": "i",
      "offset": [
        8563,
        8615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "791": {
      "op": "JUMPDEST"
    },
    "792": {
      "op": "STOP"
    },
    "793": {
      "fn": "VyperNFT.transferFrom",
      "offset": [
        7939,
        8615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "794": {
      "op": "PUSH4",
      "value": "0x42842EE"
    },
    "799": {
      "op": "DUP2"
    },
    "800": {
      "op": "XOR"
    },
    "801": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8628,
        10025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B"
    },
    "804": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8628,
        10025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "807": {
      "op": "PUSH2",
      "value": "0x60"
    },
    "810": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8750,
        8753
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8750,
        8753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60"
    },
    "814": {
      "op": "DUP1"
    },
    "815": {
      "op": "MLOAD"
    },
    "816": {
      "op": "DUP1"
    },
    "817": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8731,
        8749
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8731,
        8749
      ],
      "op": "POP",
      "path": "0"
    },
    "822": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8731,
        8749
      ],
      "op": "POP",
      "path": "0"
    },
    "823": {
      "op": "PUSH2",
      "value": "0x36B"
    },
    "826": {
      "op": "JUMP"
    },
    "827": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8628,
        10025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "828": {
      "op": "PUSH4",
      "value": "0xB88D4FDE"
    },
    "833": {
      "op": "DUP2"
    },
    "834": {
      "op": "XOR"
    },
    "835": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8628,
        10025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x463"
    },
    "838": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8628,
        10025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "841": {
      "op": "CALLDATALOAD"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "844": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8731,
        8749
      ],
      "op": "ADD",
      "path": "0"
    },
    "845": {
      "op": "PUSH2",
      "value": "0x40"
    },
    "848": {
      "op": "DUP2"
    },
    "849": {
      "op": "CALLDATALOAD"
    },
    "850": {
      "op": "GT"
    },
    "851": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "854": {
      "op": "JUMPI"
    },
    "855": {
      "op": "DUP1"
    },
    "856": {
      "op": "CALLDATALOAD"
    },
    "857": {
      "op": "DUP1"
    },
    "858": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "861": {
      "op": "MSTORE"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "864": {
      "op": "DUP3"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "DUP2"
    },
    "867": {
      "op": "DUP2"
    },
    "868": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "871": {
      "op": "CALLDATACOPY"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "op": "POP"
    },
    "874": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8731,
        8749
      ],
      "op": "POP",
      "path": "0"
    },
    "875": {
      "op": "JUMPDEST"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "878": {
      "op": "CALLDATALOAD"
    },
    "879": {
      "op": "DUP1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "882": {
      "op": "SHR"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "886": {
      "op": "JUMPI"
    },
    "887": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8658,
        8672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "890": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8658,
        8672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "893": {
      "op": "CALLDATALOAD"
    },
    "894": {
      "op": "DUP1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "897": {
      "op": "SHR"
    },
    "898": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "901": {
      "op": "JUMPI"
    },
    "902": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8682,
        8694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "905": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8682,
        8694
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "906": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9614,
        9619
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x1A0"
    },
    "909": {
      "op": "MLOAD"
    },
    "910": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9621,
        9624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "917": {
      "op": "MLOAD"
    },
    "918": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9798,
        9806
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x44"
    },
    "924": {
      "op": "CALLDATALOAD"
    },
    "925": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9636,
        9646
      ],
      "op": "CALLER",
      "path": "0"
    },
    "930": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH2",
      "value": "0x3AD"
    },
    "937": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9595,
        9647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B6"
    },
    "940": {
      "fn": "VyperNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        9595,
        9647
      ],
      "op": "JUMP",
      "path": "0"
    },
    "941": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9595,
        9647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "942": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9655,
        9670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "944": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9655,
        9658
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "947": {
      "op": "MLOAD"
    },
    "948": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9655,
        9670
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "949": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9655,
        9670
      ],
      "op": "GT",
      "path": "0"
    },
    "950": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9652,
        10025
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "951": {
      "op": "PUSH2",
      "value": "0x461"
    },
    "954": {
      "branch": 20,
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9652,
        10025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "955": {
      "op": "PUSH4",
      "value": "0x15B7A2"
    },
    "960": {
      "op": "PUSH2",
      "value": "0x640"
    },
    "963": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "966": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9779,
        9789
      ],
      "op": "CALLER",
      "path": "0"
    },
    "967": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "970": {
      "op": "MSTORE"
    },
    "971": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9791,
        9796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "974": {
      "op": "MLOAD"
    },
    "975": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9798,
        9806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "981": {
      "op": "CALLDATALOAD"
    },
    "982": {
      "op": "PUSH2",
      "value": "0x6A0"
    },
    "985": {
      "op": "MSTORE"
    },
    "986": {
      "op": "DUP1"
    },
    "987": {
      "op": "PUSH2",
      "value": "0x6C0"
    },
    "990": {
      "op": "MSTORE"
    },
    "991": {
      "op": "DUP1"
    },
    "992": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9808,
        9813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E0"
    },
    "999": {
      "op": "MLOAD"
    },
    "1000": {
      "op": "DUP1"
    },
    "1001": {
      "op": "DUP3"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1005": {
      "op": "DUP3"
    },
    "1006": {
      "op": "ADD"
    },
    "1007": {
      "op": "DUP2"
    },
    "1008": {
      "op": "DUP2"
    },
    "1009": {
      "op": "DUP4"
    },
    "1010": {
      "op": "PUSH2",
      "value": "0x20"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1015": {
      "op": "GAS"
    },
    "1016": {
      "op": "STATICCALL"
    },
    "1017": {
      "op": "SWAP1"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "op": "POP"
    },
    "1020": {
      "op": "POP"
    },
    "1021": {
      "op": "DUP1"
    },
    "1022": {
      "op": "MLOAD"
    },
    "1023": {
      "op": "DUP1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1026": {
      "op": "DUP4"
    },
    "1027": {
      "op": "ADD"
    },
    "1028": {
      "op": "ADD"
    },
    "1029": {
      "op": "DUP2"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1035": {
      "op": "AND"
    },
    "1036": {
      "op": "CALLDATASIZE"
    },
    "1037": {
      "op": "DUP3"
    },
    "1038": {
      "op": "CALLDATACOPY"
    },
    "1039": {
      "op": "POP"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1043": {
      "op": "NOT"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1046": {
      "op": "DUP3"
    },
    "1047": {
      "op": "MLOAD"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "AND"
    },
    "1053": {
      "op": "SWAP1"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "op": "DUP2"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "op": "POP"
    },
    "1058": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9814
      ],
      "op": "POP",
      "path": "0"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1061": {
      "op": "PUSH2",
      "value": "0x640"
    },
    "1064": {
      "op": "PUSH2",
      "value": "0x4A4"
    },
    "1067": {
      "op": "PUSH2",
      "value": "0x65C"
    },
    "1070": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "1073": {
      "op": "MLOAD"
    },
    "1074": {
      "op": "GAS"
    },
    "1075": {
      "op": "STATICCALL"
    },
    "1076": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "1079": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1080": {
      "op": "RETURNDATASIZE"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1085": {
      "op": "RETURNDATACOPY"
    },
    "1086": {
      "op": "RETURNDATASIZE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1089": {
      "op": "REVERT"
    },
    "1090": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1093": {
      "op": "RETURNDATASIZE"
    },
    "1094": {
      "op": "LT"
    },
    "1095": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "1098": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1099": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9742,
        9814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x640"
    },
    "1102": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9719,
        9814
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1103": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9719,
        9814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "1106": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9719,
        9814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1107": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9944,
        10025
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 21,
      "value": "0x15B7A2"
    },
    "1112": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9929,
        9940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "1115": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9929,
        10025
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1116": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9922,
        10025
      ],
      "op": "XOR",
      "path": "0"
    },
    "1117": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9922,
        10025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "1120": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        9922,
        10025
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1121": {
      "op": "JUMPDEST"
    },
    "1122": {
      "op": "STOP"
    },
    "1123": {
      "fn": "VyperNFT.safeTransferFrom",
      "offset": [
        8628,
        10025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1124": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1129": {
      "op": "DUP2"
    },
    "1130": {
      "op": "XOR"
    },
    "1131": {
      "fn": "VyperNFT.approve",
      "offset": [
        10038,
        11161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53A"
    },
    "1134": {
      "fn": "VyperNFT.approve",
      "offset": [
        10038,
        11161
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1137": {
      "op": "CALLDATALOAD"
    },
    "1138": {
      "op": "DUP1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1141": {
      "op": "SHR"
    },
    "1142": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "1145": {
      "op": "JUMPI"
    },
    "1146": {
      "fn": "VyperNFT.approve",
      "offset": [
        10050,
        10068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1148": {
      "fn": "VyperNFT.approve",
      "offset": [
        10050,
        10068
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1149": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10659
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "1151": {
      "fn": "VyperNFT.approve",
      "offset": [
        11152,
        11160
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x24"
    },
    "1153": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10669
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1154": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1156": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10669
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1157": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1159": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10669
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1160": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1162": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1164": {
      "fn": "VyperNFT.approve",
      "offset": [
        10645,
        10669
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1165": {
      "fn": "VyperNFT.approve",
      "offset": [
        10628,
        10669
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1166": {
      "fn": "VyperNFT.approve",
      "offset": [
        10628,
        10669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1168": {
      "fn": "VyperNFT.approve",
      "offset": [
        10628,
        10669
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1169": {
      "fn": "VyperNFT.approve",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x0"
    },
    "1171": {
      "fn": "VyperNFT.approve",
      "offset": [
        10727,
        10732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1173": {
      "fn": "VyperNFT.approve",
      "offset": [
        10727,
        10748
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1174": {
      "op": "EQ"
    },
    "1175": {
      "fn": "VyperNFT.approve",
      "offset": [
        10720,
        10748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "1178": {
      "fn": "VyperNFT.approve",
      "offset": [
        10720,
        10748
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1179": {
      "fn": "VyperNFT.approve",
      "offset": [
        10822,
        10827
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x60"
    },
    "1181": {
      "fn": "VyperNFT.approve",
      "offset": [
        10809,
        10827
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1182": {
      "fn": "VyperNFT.approve",
      "offset": [
        10809,
        10818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1184": {
      "fn": "VyperNFT.approve",
      "offset": [
        10809,
        10827
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1185": {
      "op": "EQ"
    },
    "1186": {
      "fn": "VyperNFT.approve",
      "offset": [
        10802,
        10827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "1189": {
      "fn": "VyperNFT.approve",
      "offset": [
        10802,
        10827
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1190": {
      "fn": "VyperNFT.approve",
      "offset": [
        10907,
        10917
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 26
    },
    "1191": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1193": {
      "fn": "VyperNFT.approve",
      "offset": [
        11152,
        11160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1195": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10903
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1196": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1198": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10903
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1199": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1201": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10903
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1202": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1204": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10903
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1206": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10903
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1207": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1208": {
      "fn": "VyperNFT.approve",
      "offset": [
        10879,
        10917
      ],
      "op": "EQ",
      "path": "0"
    },
    "1209": {
      "fn": "VyperNFT.approve",
      "offset": [
        10857,
        10917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1211": {
      "fn": "VyperNFT.approve",
      "offset": [
        10857,
        10917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1212": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10975
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x3"
    },
    "1214": {
      "fn": "VyperNFT.approve",
      "offset": [
        10976,
        10981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1216": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10982
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1217": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1219": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1220": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1222": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10982
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1223": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1225": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1227": {
      "fn": "VyperNFT.approve",
      "offset": [
        10954,
        10982
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1228": {
      "op": "DUP1"
    },
    "1229": {
      "fn": "VyperNFT.approve",
      "offset": [
        10984,
        10994
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1230": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1232": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1233": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1235": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1236": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1238": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1240": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1241": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "VyperNFT.approve",
      "offset": [
        10953,
        10995
      ],
      "op": "POP",
      "path": "0"
    },
    "1243": {
      "fn": "VyperNFT.approve",
      "offset": [
        10922,
        10995
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1244": {
      "fn": "VyperNFT.approve",
      "offset": [
        10922,
        10995
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1246": {
      "fn": "VyperNFT.approve",
      "offset": [
        10922,
        10995
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1247": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11021
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x80"
    },
    "1249": {
      "op": "MLOAD"
    },
    "1250": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4ED"
    },
    "1253": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11047
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1254": {
      "fn": "VyperNFT.approve",
      "offset": [
        11025,
        11047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1256": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11047
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1257": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F0"
    },
    "1260": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11047
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1261": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1262": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1264": {
      "fn": "VyperNFT.approve",
      "offset": [
        11008,
        11047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1265": {
      "fn": "VyperNFT.approve",
      "offset": [
        11000,
        11048
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1266": {
      "fn": "VyperNFT.approve",
      "offset": [
        11000,
        11048
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "1269": {
      "fn": "VyperNFT.approve",
      "offset": [
        11000,
        11048
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1270": {
      "fn": "VyperNFT.approve",
      "offset": [
        11107,
        11116
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x40"
    },
    "1272": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11116
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1273": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1275": {
      "fn": "VyperNFT.approve",
      "offset": [
        11152,
        11160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1277": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11104
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1278": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1280": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11104
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1281": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1283": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11104
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1284": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1286": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1288": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11104
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1289": {
      "fn": "VyperNFT.approve",
      "offset": [
        11076,
        11116
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1290": {
      "fn": "VyperNFT.approve",
      "offset": [
        11152,
        11160
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1292": {
      "fn": "VyperNFT.approve",
      "offset": [
        11121,
        11161
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1293": {
      "fn": "VyperNFT.approve",
      "offset": [
        11141,
        11150
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1295": {
      "fn": "VyperNFT.approve",
      "offset": [
        11121,
        11161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1296": {
      "fn": "VyperNFT.approve",
      "offset": [
        11134,
        11139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1298": {
      "fn": "VyperNFT.approve",
      "offset": [
        11121,
        11161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1299": {
      "fn": "VyperNFT.approve",
      "offset": [
        11121,
        11161
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1334": {
      "fn": "VyperNFT.approve",
      "offset": [
        11121,
        11161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1336": {
      "fn": "VyperNFT.approve",
      "offset": [
        11121,
        11161
      ],
      "op": "LOG4",
      "path": "0"
    },
    "1337": {
      "op": "STOP"
    },
    "1338": {
      "fn": "VyperNFT.approve",
      "offset": [
        10038,
        11161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1339": {
      "op": "PUSH4",
      "value": "0xA22CB465"
    },
    "1344": {
      "op": "DUP2"
    },
    "1345": {
      "op": "XOR"
    },
    "1346": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11174,
        11924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BF"
    },
    "1349": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11174,
        11924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1352": {
      "op": "CALLDATALOAD"
    },
    "1353": {
      "op": "DUP1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1356": {
      "op": "SHR"
    },
    "1357": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "1360": {
      "op": "JUMPI"
    },
    "1361": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11196,
        11214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1363": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11196,
        11214
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1366": {
      "op": "CALLDATALOAD"
    },
    "1367": {
      "op": "DUP1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "SHR"
    },
    "1371": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "1374": {
      "op": "JUMPI"
    },
    "1375": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11216,
        11231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1377": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11216,
        11231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1378": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11796,
        11806
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 30
    },
    "1379": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11783,
        11792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1381": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11783,
        11806
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1382": {
      "op": "EQ"
    },
    "1383": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11776,
        11806
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "1386": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11776,
        11806
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1387": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11858,
        11867
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x60"
    },
    "1389": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11867
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1390": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1392": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11833,
        11843
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1393": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1395": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1396": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1398": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1399": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1401": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1403": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11844
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1404": {
      "op": "DUP1"
    },
    "1405": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11845,
        11854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1407": {
      "op": "MLOAD"
    },
    "1408": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1410": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1411": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1413": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1414": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1416": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1418": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1419": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1420": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11855
      ],
      "op": "POP",
      "path": "0"
    },
    "1421": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11811,
        11867
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1422": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11903,
        11912
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x40"
    },
    "1424": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11872,
        11924
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1425": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11891,
        11901
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1426": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11872,
        11924
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x17307EAB39AB617E8899845AD3D59BD9653F20F22092489CA2B5937696C31"
    },
    "1459": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11914,
        11923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1461": {
      "op": "MLOAD"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1467": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11872,
        11924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1469": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11872,
        11924
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1470": {
      "op": "STOP"
    },
    "1471": {
      "fn": "VyperNFT.setApprovalForAll",
      "offset": [
        11174,
        11924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1472": {
      "op": "PUSH4",
      "value": "0x1816DDD"
    },
    "1477": {
      "op": "DUP2"
    },
    "1478": {
      "op": "XOR"
    },
    "1479": {
      "fn": "VyperNFT.totalSupply",
      "offset": [
        12817,
        12874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D6"
    },
    "1482": {
      "fn": "VyperNFT.totalSupply",
      "offset": [
        12817,
        12874
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1483": {
      "fn": "VyperNFT.totalSupply",
      "offset": [
        12858,
        12874
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x5"
    },
    "1485": {
      "op": "SLOAD"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1488": {
      "op": "MSTORE"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1491": {
      "fn": "VyperNFT.totalSupply",
      "offset": [
        12851,
        12874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1493": {
      "op": "RETURN"
    },
    "1494": {
      "fn": "VyperNFT.totalSupply",
      "offset": [
        12817,
        12874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1495": {
      "op": "PUSH4",
      "value": "0x6FDDE3"
    },
    "1500": {
      "op": "DUP2"
    },
    "1501": {
      "op": "XOR"
    },
    "1502": {
      "fn": "VyperNFT.name",
      "offset": [
        12914,
        12955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x636"
    },
    "1505": {
      "fn": "VyperNFT.name",
      "offset": [
        12914,
        12955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1508": {
      "op": "DUP1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1511": {
      "op": "MSTORE"
    },
    "1512": {
      "op": "DUP1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1518": {
      "op": "PUSH2",
      "value": "0x95F"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "op": "CODECOPY"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1526": {
      "op": "MLOAD"
    },
    "1527": {
      "op": "DUP1"
    },
    "1528": {
      "op": "DUP3"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1532": {
      "op": "DUP3"
    },
    "1533": {
      "op": "ADD"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1536": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1541": {
      "op": "CODECOPY"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1544": {
      "op": "MLOAD"
    },
    "1545": {
      "op": "DUP2"
    },
    "1546": {
      "op": "MSTORE"
    },
    "1547": {
      "op": "POP"
    },
    "1548": {
      "op": "POP"
    },
    "1549": {
      "op": "DUP1"
    },
    "1550": {
      "op": "MLOAD"
    },
    "1551": {
      "op": "DUP1"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1554": {
      "op": "DUP4"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "DUP2"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1563": {
      "op": "AND"
    },
    "1564": {
      "op": "CALLDATASIZE"
    },
    "1565": {
      "op": "DUP3"
    },
    "1566": {
      "op": "CALLDATACOPY"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1571": {
      "op": "NOT"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1574": {
      "op": "DUP3"
    },
    "1575": {
      "op": "MLOAD"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1578": {
      "op": "ADD"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "AND"
    },
    "1581": {
      "op": "SWAP1"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "op": "DUP2"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "op": "SWAP1"
    },
    "1586": {
      "op": "POP"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1589": {
      "op": "RETURN"
    },
    "1590": {
      "fn": "VyperNFT.name",
      "offset": [
        12944,
        12955
      ],
      "op": "JUMPDEST",
      "path": "0",
      "statement": 34
    },
    "1591": {
      "op": "PUSH4",
      "value": "0x95D89B41"
    },
    "1596": {
      "fn": "VyperNFT.name",
      "offset": [
        12914,
        12955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1597": {
      "op": "XOR"
    },
    "1598": {
      "op": "PUSH2",
      "value": "0x696"
    },
    "1601": {
      "op": "JUMPI"
    },
    "1602": {
      "fn": "VyperNFT.symbol",
      "offset": [
        12974,
        13019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1604": {
      "fn": "VyperNFT.symbol",
      "offset": [
        12974,
        13019
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1607": {
      "op": "MSTORE"
    },
    "1608": {
      "op": "DUP1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1611": {
      "op": "ADD"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1614": {
      "op": "PUSH2",
      "value": "0x99F"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1619": {
      "op": "CODECOPY"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1622": {
      "op": "MLOAD"
    },
    "1623": {
      "op": "DUP1"
    },
    "1624": {
      "op": "DUP3"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1628": {
      "op": "DUP3"
    },
    "1629": {
      "op": "ADD"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1632": {
      "op": "PUSH2",
      "value": "0x9BF"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1637": {
      "op": "CODECOPY"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1640": {
      "op": "MLOAD"
    },
    "1641": {
      "op": "DUP2"
    },
    "1642": {
      "op": "MSTORE"
    },
    "1643": {
      "op": "POP"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "op": "DUP1"
    },
    "1646": {
      "op": "MLOAD"
    },
    "1647": {
      "op": "DUP1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1650": {
      "op": "DUP4"
    },
    "1651": {
      "op": "ADD"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "DUP2"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1659": {
      "op": "AND"
    },
    "1660": {
      "op": "CALLDATASIZE"
    },
    "1661": {
      "op": "DUP3"
    },
    "1662": {
      "op": "CALLDATACOPY"
    },
    "1663": {
      "op": "POP"
    },
    "1664": {
      "op": "POP"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1667": {
      "op": "NOT"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1670": {
      "op": "DUP3"
    },
    "1671": {
      "op": "MLOAD"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1674": {
      "op": "ADD"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "op": "AND"
    },
    "1677": {
      "op": "SWAP1"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "op": "DUP2"
    },
    "1680": {
      "op": "ADD"
    },
    "1681": {
      "op": "SWAP1"
    },
    "1682": {
      "op": "POP"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1685": {
      "op": "RETURN"
    },
    "1686": {
      "op": "JUMPDEST"
    },
    "1687": {
      "op": "PUSH4",
      "value": "0x3C13D90"
    },
    "1692": {
      "fn": "VyperNFT.symbol",
      "offset": [
        13006,
        13019
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 35
    },
    "1693": {
      "op": "XOR"
    },
    "1694": {
      "fn": "VyperNFT.symbol",
      "offset": [
        12974,
        13019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x741"
    },
    "1697": {
      "op": "JUMPI"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1700": {
      "op": "DUP1"
    },
    "1701": {
      "fn": "VyperNFT.tokenURI",
      "offset": [
        13038,
        13134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1703": {
      "fn": "VyperNFT.tokenURI",
      "offset": [
        13038,
        13134
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1708": {
      "op": "MSTORE"
    },
    "1709": {
      "op": "PUSH32",
      "value": "0x697066733A2F2F516D50426D79656E61646A524E504A34706675656A714A7747"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1744": {
      "op": "MSTORE"
    },
    "1745": {
      "fn": "VyperNFT.tokenURI",
      "offset": [
        13079,
        13134
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 36,
      "value": "0x7A505878454D7464393636714D5572757A6E436B3700000000000"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1780": {
      "op": "MSTORE"
    },
    "1781": {
      "fn": "VyperNFT.tokenURI",
      "offset": [
        13079,
        13134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1786": {
      "fn": "VyperNFT.tokenURI",
      "offset": [
        13079,
        13134
      ],
      "op": "ADD",
      "path": "0"
    },
    "1787": {
      "fn": "VyperNFT.tokenURI",
      "offset": [
        13079,
        13134
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1788": {
      "op": "MLOAD"
    },
    "1789": {
      "op": "DUP1"
    },
    "1790": {
      "op": "DUP3"
    },
    "1791": {
      "op": "MSTORE"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1794": {
      "op": "DUP4"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1798": {
      "op": "DUP4"
    },
    "1799": {
      "op": "ADD"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "DUP2"
    },
    "1802": {
      "op": "DUP5"
    },
    "1803": {
      "op": "DUP5"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1806": {
      "op": "GAS"
    },
    "1807": {
      "op": "STATICCALL"
    },
    "1808": {
      "op": "SWAP1"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "SWAP1"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "op": "DUP1"
    },
    "1815": {
      "op": "MLOAD"
    },
    "1816": {
      "op": "DUP1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1819": {
      "op": "DUP4"
    },
    "1820": {
      "op": "ADD"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "op": "DUP2"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1825": {
      "op": "SUB"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1828": {
      "op": "AND"
    },
    "1829": {
      "op": "CALLDATASIZE"
    },
    "1830": {
      "op": "DUP3"
    },
    "1831": {
      "op": "CALLDATACOPY"
    },
    "1832": {
      "op": "POP"
    },
    "1833": {
      "op": "POP"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1836": {
      "op": "NOT"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1839": {
      "op": "DUP3"
    },
    "1840": {
      "op": "MLOAD"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "ADD"
    },
    "1845": {
      "op": "AND"
    },
    "1846": {
      "op": "SWAP1"
    },
    "1847": {
      "op": "POP"
    },
    "1848": {
      "op": "SWAP1"
    },
    "1849": {
      "op": "POP"
    },
    "1850": {
      "op": "DUP2"
    },
    "1851": {
      "op": "ADD"
    },
    "1852": {
      "op": "SWAP1"
    },
    "1853": {
      "op": "POP"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1856": {
      "op": "RETURN"
    },
    "1857": {
      "op": "JUMPDEST"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "fn": "VyperNFT.tokenURI",
      "offset": [
        13072,
        13134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1862": {
      "fn": "VyperNFT.tokenURI",
      "offset": [
        13038,
        13134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1864": {
      "op": "REVERT"
    },
    "1865": {
      "op": "JUMPDEST"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1870": {
      "op": "MLOAD"
    },
    "1871": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        4988,
        5715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1873": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5436
      ],
      "op": "MSTORE",
      "path": "0",
      "statement": 37
    },
    "1874": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5437,
        5445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1876": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1877": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1879": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1881": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5446
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1882": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5446
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1883": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1885": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5446
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1886": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5422,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1888": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5405,
        5446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1889": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5405,
        5446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1891": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5405,
        5446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1892": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5483,
        5491
      ],
      "op": "EQ",
      "path": "0",
      "statement": 38
    },
    "1893": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5474,
        5491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1895": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5474,
        5479
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1896": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5474,
        5491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1898": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5474,
        5491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1900": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5451,
        5491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1901": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5451,
        5491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1903": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5552
      ],
      "op": "MSTORE",
      "path": "0",
      "statement": 39
    },
    "1904": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5553,
        5561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1906": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5562
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1907": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1909": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1911": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5562
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1912": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5562
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1913": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1915": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5562
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1916": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5534,
        5562
      ],
      "op": "EQ",
      "path": "0"
    },
    "1917": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5522,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1919": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5522,
        5530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1920": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5522,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1922": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5522,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1924": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5496,
        5562
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1925": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5496,
        5562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1927": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5621
      ],
      "op": "MSTORE",
      "path": "0",
      "statement": 40
    },
    "1928": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5622,
        5627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1930": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5628
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1931": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1933": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1935": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5628
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1936": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5628
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1937": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1939": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5628
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1940": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5600,
        5628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1942": {
      "op": "MSTORE"
    },
    "1943": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5630,
        5638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1945": {
      "op": "MSTORE"
    },
    "1946": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1948": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1950": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1951": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1952": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "POP",
      "path": "0"
    },
    "1953": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1954": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1956": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1957": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5599,
        5639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1959": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5567,
        5639
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1960": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5567,
        5639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B3"
    },
    "1963": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5567,
        5639
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1964": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5666
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0xC0"
    },
    "1966": {
      "op": "MLOAD"
    },
    "1967": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B6"
    },
    "1970": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5687
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1971": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5670,
        5687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1972": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1974": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1975": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C2"
    },
    "1978": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5687
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1979": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1981": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5652,
        5687
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1982": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5651,
        5715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C5"
    },
    "1985": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5651,
        5715
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1986": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5692,
        5715
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1987": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5651,
        5715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1989": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5651,
        5715
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1990": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5651,
        5715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1991": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5651,
        5715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1992": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5651,
        5715
      ],
      "op": "POP",
      "path": "0"
    },
    "1993": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5651,
        5715
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1994": {
      "op": "JUMPDEST"
    },
    "1995": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5644,
        5715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1997": {
      "fn": "VyperNFT._isApprovedOrOwner",
      "offset": [
        5644,
        5715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1999": {
      "op": "MLOAD"
    },
    "2000": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5728,
        6106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2002": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5955
      ],
      "op": "MSTORE",
      "path": "0",
      "statement": 42
    },
    "2003": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5956,
        5964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2005": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5965
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2006": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2008": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2010": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5965
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2011": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2012": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "2015": {
      "dev": "Index out of range",
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5965
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2016": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2018": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5941,
        5981
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2019": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5934,
        5981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2021": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        5934,
        5981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2023": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6036,
        6039
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 43
    },
    "2024": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2026": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6023
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2027": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6024,
        6032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2029": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6033
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2030": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2032": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2034": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6033
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2035": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6033
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2036": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2038": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6033
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2040": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6033
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2041": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6009,
        6039
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2043": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6096
      ],
      "op": "MSTORE",
      "path": "0",
      "statement": 44
    },
    "2044": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6097,
        6100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2046": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6101
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2047": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2049": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2051": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6101
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2052": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2053": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6101
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2054": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2056": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2057": {
      "op": "DUP2"
    },
    "2058": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6106
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2059": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6105,
        6106
      ],
      "op": "ADD",
      "path": "0"
    },
    "2060": {
      "op": "LT"
    },
    "2061": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "2064": {
      "op": "JUMPI"
    },
    "2065": {
      "op": "DUP1"
    },
    "2066": {
      "op": "DUP3"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "SWAP1"
    },
    "2069": {
      "op": "POP"
    },
    "2070": {
      "op": "SWAP1"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2073": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6106
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2074": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6106
      ],
      "op": "POP",
      "path": "0"
    },
    "2075": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6106
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2076": {
      "op": "JUMPDEST"
    },
    "2077": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2079": {
      "fn": "VyperNFT._addTokenTo",
      "offset": [
        6072,
        6106
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2082": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6119,
        6517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2084": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6376,
        6381
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 45
    },
    "2085": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2087": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2088": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6363,
        6371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2090": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6372
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2091": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2093": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2095": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6372
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2096": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6372
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2097": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6372
      ],
      "op": "XOR",
      "path": "0"
    },
    "2098": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6372
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "2101": {
      "dev": "Index out of range",
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6372
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2102": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6348,
        6381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2104": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6341,
        6381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2106": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6341,
        6381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2108": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6341,
        6381
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2109": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6436,
        6448
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x20"
    },
    "2111": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2112": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6424,
        6432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2114": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6433
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2115": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2117": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2119": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6433
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2120": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6433
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2121": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2123": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2125": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6433
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2126": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6409,
        6448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2128": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6505
      ],
      "op": "MSTORE",
      "path": "0",
      "statement": 47
    },
    "2129": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6506,
        6511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2131": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6512
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2132": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2134": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2136": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6512
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2137": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2138": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6512
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2139": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2141": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2142": {
      "op": "DUP3"
    },
    "2143": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6517
      ],
      "op": "LT",
      "path": "0"
    },
    "2144": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6516,
        6517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "2147": {
      "op": "JUMPI"
    },
    "2148": {
      "op": "DUP1"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "SUB"
    },
    "2151": {
      "op": "SWAP1"
    },
    "2152": {
      "op": "POP"
    },
    "2153": {
      "op": "SWAP1"
    },
    "2154": {
      "op": "POP"
    },
    "2155": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6517
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2156": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6517
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2157": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6517
      ],
      "op": "POP",
      "path": "0"
    },
    "2158": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6517
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2159": {
      "op": "JUMPDEST"
    },
    "2160": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2162": {
      "fn": "VyperNFT._removeTokenFrom",
      "offset": [
        6481,
        6517
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2165": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6530,
        6928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2167": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6791,
        6797
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 48
    },
    "2168": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2170": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6777
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2171": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6778,
        6786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2173": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6787
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2174": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2176": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6787
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2178": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6787
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2179": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6787
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2180": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6787
      ],
      "op": "XOR",
      "path": "0"
    },
    "2181": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6787
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "2184": {
      "dev": "Index out of range",
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6787
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2185": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6763,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2187": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6756,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2189": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6756,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2191": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6756,
        6797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2192": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6837,
        6849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2194": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6823
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2195": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6824,
        6832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2197": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2198": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2200": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2202": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6833
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2203": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6833
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2204": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6833
      ],
      "op": "EQ",
      "path": "0"
    },
    "2205": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B4"
    },
    "2208": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6833
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2209": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6805,
        6849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2215": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6802,
        6928
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2216": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6916,
        6928
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x20"
    },
    "2218": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6903
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2219": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6904,
        6912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2221": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6913
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2222": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2224": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6913
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2226": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6913
      ],
      "op": "SHA3",
      "path": "0"
    },
    "2227": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6913
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2228": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2229": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6913
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2230": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6913
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2231": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6885,
        6928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "2234": {
      "fn": "VyperNFT._clearApproval",
      "offset": [
        6530,
        6928
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2237": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        6941,
        7898
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2238": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7488,
        7495
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 50,
      "value": "0x140"
    },
    "2241": {
      "op": "MLOAD"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2244": {
      "op": "MSTORE"
    },
    "2245": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7497,
        7505
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8CF"
    },
    "2248": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "2251": {
      "op": "PUSH2",
      "value": "0x749"
    },
    "2254": {
      "op": "JUMP"
    },
    "2255": {
      "op": "JUMPDEST"
    },
    "2256": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "2259": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7464,
        7506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2260": {
      "fn": "VyperNFT._transferFrom",
      "jump": "i",
      "offset": [
        7464,
        7506
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2261": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7464,
        7506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "2264": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7464,
        7506
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2265": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7457,
        7506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2267": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7457,
        7506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "2270": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7457,
        7506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2271": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7457,
        7506
      ],
      "op": "EQ",
      "path": "0"
    },
    "2272": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7567,
        7579
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0x95A"
    },
    "2275": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7560,
        7563
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2276": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7560,
        7579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "2279": {
      "op": "MLOAD"
    },
    "2280": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7553,
        7579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2282": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7553,
        7579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2283": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7669,
        7674
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x140"
    },
    "2286": {
      "op": "MLOAD"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2289": {
      "op": "MSTORE"
    },
    "2290": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7676,
        7684
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F9"
    },
    "2293": {
      "op": "PUSH2",
      "value": "0x86F"
    },
    "2296": {
      "op": "JUMP"
    },
    "2297": {
      "op": "JUMPDEST"
    },
    "2298": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "2301": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7649,
        7685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2302": {
      "fn": "VyperNFT._transferFrom",
      "jump": "i",
      "offset": [
        7649,
        7685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2304": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7649,
        7685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2305": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7770,
        7775
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 53,
      "value": "0x140"
    },
    "2308": {
      "op": "MLOAD"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2311": {
      "op": "MSTORE"
    },
    "2312": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7777,
        7785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F"
    },
    "2315": {
      "op": "PUSH2",
      "value": "0x81C"
    },
    "2318": {
      "op": "JUMP"
    },
    "2319": {
      "op": "JUMPDEST"
    },
    "2320": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "2323": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7748,
        7786
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2324": {
      "fn": "VyperNFT._transferFrom",
      "jump": "i",
      "offset": [
        7748,
        7786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2326": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7748,
        7786
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2327": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7822,
        7825
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 54,
      "value": "0x140"
    },
    "2330": {
      "op": "MLOAD"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2333": {
      "op": "MSTORE"
    },
    "2334": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7827,
        7835
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x925"
    },
    "2337": {
      "op": "PUSH2",
      "value": "0x7CA"
    },
    "2340": {
      "op": "JUMP"
    },
    "2341": {
      "op": "JUMPDEST"
    },
    "2342": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2345": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7805,
        7836
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2346": {
      "fn": "VyperNFT._transferFrom",
      "jump": "i",
      "offset": [
        7805,
        7836
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "2349": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7805,
        7836
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2350": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7889,
        7897
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0x10"
    },
    "2353": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7864,
        7898
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2354": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7884,
        7887
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2387": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7864,
        7898
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2389": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7877,
        7882
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "2392": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7864,
        7898
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2393": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7864,
        7898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2394": {
      "op": "JUMPDEST"
    },
    "2395": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7864,
        7898
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2397": {
      "fn": "VyperNFT._transferFrom",
      "offset": [
        7864,
        7898
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2398": {
      "op": "REVERT",
      "optimizer_revert": true
    }
  },
  "sha1": "6a885e834e68200ee989045a21500c3b6ed3130e",
  "source": "# @version 0.3.3\n# @dev Implementation of ERC-721 non-fungible token standard.\n# @author Ryuya Nakamura (@nrryuya)\n# Modified from: https://github.com/vyperlang/vyper/blob/de74722bf2d8718cca46902be165f9fe0e3641dd/examples/tokens/ERC721.vy\n\nfrom vyper.interfaces import ERC165\nfrom vyper.interfaces import ERC721\n\nimplements: ERC721\nimplements: ERC165\n\n# Interface for the contract called by safeTransferFrom()\ninterface ERC721Receiver:\n    def onERC721Received(\n            _operator: address,\n            _from: address,\n            _tokenId: uint256,\n            _data: Bytes[1024]\n        ) -> bytes32: view\n\n\n# @dev Emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are\n#      created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any\n#      number of NFTs may be created and assigned without emitting Transfer. At the time of any\n#      transfer, the approved address for that NFT (if any) is reset to none.\n# @param _from Sender of NFT (if address is zero address it indicates token creation).\n# @param _to Receiver of NFT (if address is zero address it indicates token destruction).\n# @param _tokenId The NFT that got transfered.\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    tokenId: indexed(uint256)\n\n# @dev This emits when the approved address for an NFT is changed or reaffirmed. The zero\n#      address indicates there is no approved address. When a Transfer event emits, this also\n#      indicates that the approved address for that NFT (if any) is reset to none.\n# @param _owner Owner of NFT.\n# @param _approved Address that we are approving.\n# @param _tokenId NFT which we are approving.\nevent Approval:\n    owner: indexed(address)\n    approved: indexed(address)\n    tokenId: indexed(uint256)\n\n# @dev This emits when an operator is enabled or disabled for an owner. The operator can manage\n#      all NFTs of the owner.\n# @param _owner Owner of NFT.\n# @param _operator Address to which we are setting operator rights.\n# @param _approved Status of operator rights(true if operator rights are given and false if\n# revoked).\nevent ApprovalForAll:\n    owner: indexed(address)\n    operator: indexed(address)\n    approved: bool\n\n\n# @dev Mapping from NFT ID to the address that owns it.\nidToOwner: HashMap[uint256, address]\n\n# @dev Mapping from NFT ID to approved address.\nidToApprovals: HashMap[uint256, address]\n\n# @dev Mapping from owner address to count of his tokens.\nownerToNFTokenCount: HashMap[address, uint256]\n\n# @dev Mapping from owner address to mapping of operator addresses.\nownerToOperators: HashMap[address, HashMap[address, bool]]\n\n# @dev Address of minter, who can mint a token\nminter: address\n\n# @dev Static list of supported ERC165 interface ids\nSUPPORTED_INTERFACES: constant(bytes4[5]) = [\n    0x01FFC9A7,  # ERC165\n    0x80AC58CD,  # ERC721\n    0x150B7A02,  # ERC721TokenReceiver\n    0x5B5E139F,  # ERC721Metadata\n    0x780E9D63,  # ERC721Enumerable\n]\n\ntotalMinted: uint256\nNAME: immutable(String[32])\nSYMBOL: immutable(String[32])\n\n\n\n@external\ndef __init__():\n    \"\"\"\n    @dev Contract constructor.\n    \"\"\"\n    self.minter = msg.sender\n    NAME = \"Token\"\n    SYMBOL = \"TKN\"\n\n\n@pure\n@external\ndef supportsInterface(interface_id: bytes4) -> bool:\n    \"\"\"\n    @dev Interface identification is specified in ERC-165.\n    @param interface_id Id of the interface\n    \"\"\"\n    return interface_id in SUPPORTED_INTERFACES\n\n\n### VIEW FUNCTIONS ###\n\n@view\n@external\ndef balanceOf(_owner: address) -> uint256:\n    \"\"\"\n    @dev Returns the number of NFTs owned by `_owner`.\n         Throws if `_owner` is the zero address. NFTs assigned to the zero address are considered invalid.\n    @param _owner Address for whom to query the balance.\n    \"\"\"\n    assert _owner != ZERO_ADDRESS\n    return self.ownerToNFTokenCount[_owner]\n\n\n@view\n@external\ndef ownerOf(_tokenId: uint256) -> address:\n    \"\"\"\n    @dev Returns the address of the owner of the NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId The identifier for an NFT.\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    # Throws if `_tokenId` is not a valid NFT\n    assert owner != ZERO_ADDRESS\n    return owner\n\n\n@view\n@external\ndef getApproved(_tokenId: uint256) -> address:\n    \"\"\"\n    @dev Get the approved address for a single NFT.\n         Throws if `_tokenId` is not a valid NFT.\n    @param _tokenId ID of the NFT to query the approval of.\n    \"\"\"\n    # Throws if `_tokenId` is not a valid NFT\n    assert self.idToOwner[_tokenId] != ZERO_ADDRESS\n    return self.idToApprovals[_tokenId]\n\n\n@view\n@external\ndef isApprovedForAll(_owner: address, _operator: address) -> bool:\n    \"\"\"\n    @dev Checks if `_operator` is an approved operator for `_owner`.\n    @param _owner The address that owns the NFTs.\n    @param _operator The address that acts on behalf of the owner.\n    \"\"\"\n    return (self.ownerToOperators[_owner])[_operator]\n\n\n### TRANSFER FUNCTION HELPERS ###\n\n@view\n@internal\ndef _isApprovedOrOwner(_spender: address, _tokenId: uint256) -> bool:\n    \"\"\"\n    @dev Returns whether the given spender can transfer a given token ID\n    @param spender address of the spender to query\n    @param tokenId uint256 ID of the token to be transferred\n    @return bool whether the msg.sender is approved for the given token ID,\n        is an operator of the owner, or is the owner of the token\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    spenderIsOwner: bool = owner == _spender\n    spenderIsApproved: bool = _spender == self.idToApprovals[_tokenId]\n    spenderIsApprovedForAll: bool = (self.ownerToOperators[owner])[_spender]\n    return (spenderIsOwner or spenderIsApproved) or spenderIsApprovedForAll\n\n\n@internal\ndef _addTokenTo(_to: address, _tokenId: uint256):\n    \"\"\"\n    @dev Add a NFT to a given address\n         Throws if `_tokenId` is owned by someone.\n    \"\"\"\n    # Throws if `_tokenId` is owned by someone\n    assert self.idToOwner[_tokenId] == ZERO_ADDRESS\n    # Change the owner\n    self.idToOwner[_tokenId] = _to\n    # Change count tracking\n    self.ownerToNFTokenCount[_to] += 1\n\n\n@internal\ndef _removeTokenFrom(_from: address, _tokenId: uint256):\n    \"\"\"\n    @dev Remove a NFT from a given address\n         Throws if `_from` is not the current owner.\n    \"\"\"\n    # Throws if `_from` is not the current owner\n    assert self.idToOwner[_tokenId] == _from\n    # Change the owner\n    self.idToOwner[_tokenId] = ZERO_ADDRESS\n    # Change count tracking\n    self.ownerToNFTokenCount[_from] -= 1\n\n\n@internal\ndef _clearApproval(_owner: address, _tokenId: uint256):\n    \"\"\"\n    @dev Clear an approval of a given address\n         Throws if `_owner` is not the current owner.\n    \"\"\"\n    # Throws if `_owner` is not the current owner\n    assert self.idToOwner[_tokenId] == _owner\n    if self.idToApprovals[_tokenId] != ZERO_ADDRESS:\n        # Reset approvals\n        self.idToApprovals[_tokenId] = ZERO_ADDRESS\n\n\n@internal\ndef _transferFrom(_from: address, _to: address, _tokenId: uint256, _sender: address):\n    \"\"\"\n    @dev Exeute transfer of a NFT.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT. (NOTE: `msg.sender` not allowed in private function so pass `_sender`.)\n         Throws if `_to` is the zero address.\n         Throws if `_from` is not the current owner.\n         Throws if `_tokenId` is not a valid NFT.\n    \"\"\"\n    # Check requirements\n    assert self._isApprovedOrOwner(_sender, _tokenId)\n    # Throws if `_to` is the zero address\n    assert _to != ZERO_ADDRESS\n    # Clear approval. Throws if `_from` is not the current owner\n    self._clearApproval(_from, _tokenId)\n    # Remove NFT. Throws if `_tokenId` is not a valid NFT\n    self._removeTokenFrom(_from, _tokenId)\n    # Add NFT\n    self._addTokenTo(_to, _tokenId)\n    # Log the transfer\n    log Transfer(_from, _to, _tokenId)\n\n\n### TRANSFER FUNCTIONS ###\n\n@external\ndef transferFrom(_from: address, _to: address, _tokenId: uint256):\n    \"\"\"\n    @dev Throws unless `msg.sender` is the current owner, an authorized operator, or the approved\n         address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n    @notice The caller is responsible to confirm that `_to` is capable of receiving NFTs or else\n            they maybe be permanently lost.\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    \"\"\"\n    self._transferFrom(_from, _to, _tokenId, msg.sender)\n\n\n@external\ndef safeTransferFrom(\n        _from: address,\n        _to: address,\n        _tokenId: uint256,\n        _data: Bytes[1024]=b\"\"\n    ):\n    \"\"\"\n    @dev Transfers the ownership of an NFT from one address to another address.\n         Throws unless `msg.sender` is the current owner, an authorized operator, or the\n         approved address for this NFT.\n         Throws if `_from` is not the current owner.\n         Throws if `_to` is the zero address.\n         Throws if `_tokenId` is not a valid NFT.\n         If `_to` is a smart contract, it calls `onERC721Received` on `_to` and throws if\n         the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n         NOTE: bytes4 is represented by bytes32 with padding\n    @param _from The current owner of the NFT.\n    @param _to The new owner.\n    @param _tokenId The NFT to transfer.\n    @param _data Additional data with no specified format, sent in call to `_to`.\n    \"\"\"\n    self._transferFrom(_from, _to, _tokenId, msg.sender)\n    if _to.is_contract: # check if `_to` is a contract address\n        returnValue: bytes32 = ERC721Receiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data)\n        # Throws if transfer destination is a contract which does not implement 'onERC721Received'\n        assert returnValue == method_id(\"onERC721Received(address,address,uint256,bytes)\", output_type=bytes32)\n\n\n@external\ndef approve(_approved: address, _tokenId: uint256):\n    \"\"\"\n    @dev Set or reaffirm the approved address for an NFT. The zero address indicates there is no approved address.\n         Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\n         Throws if `_tokenId` is not a valid NFT. (NOTE: This is not written the EIP)\n         Throws if `_approved` is the current owner. (NOTE: This is not written the EIP)\n    @param _approved Address to be approved for the given NFT ID.\n    @param _tokenId ID of the token to be approved.\n    \"\"\"\n    owner: address = self.idToOwner[_tokenId]\n    # Throws if `_tokenId` is not a valid NFT\n    assert owner != ZERO_ADDRESS\n    # Throws if `_approved` is the current owner\n    assert _approved != owner\n    # Check requirements\n    senderIsOwner: bool = self.idToOwner[_tokenId] == msg.sender\n    senderIsApprovedForAll: bool = (self.ownerToOperators[owner])[msg.sender]\n    assert (senderIsOwner or senderIsApprovedForAll)\n    # Set the approval\n    self.idToApprovals[_tokenId] = _approved\n    log Approval(owner, _approved, _tokenId)\n\n\n@external\ndef setApprovalForAll(_operator: address, _approved: bool):\n    \"\"\"\n    @dev Enables or disables approval for a third party (\"operator\") to manage all of\n         `msg.sender`'s assets. It also emits the ApprovalForAll event.\n         Throws if `_operator` is the `msg.sender`. (NOTE: This is not written the EIP)\n    @notice This works even if sender doesn't own any tokens at the time.\n    @param _operator Address to add to the set of authorized operators.\n    @param _approved True if the operators is approved, false to revoke approval.\n    \"\"\"\n    # Throws if `_operator` is the `msg.sender`\n    assert _operator != msg.sender\n    self.ownerToOperators[msg.sender][_operator] = _approved\n    log ApprovalForAll(msg.sender, _operator, _approved)\n\n\n### MINT & BURN FUNCTIONS ###\n\n@external\n@payable\ndef mint(_to: address) -> bool:\n    \"\"\"\n    @dev Function to mint tokens\n         Throws if `msg.sender` is not the minter.\n         Throws if `_to` is zero address.\n         Throws if `_tokenId` is owned by someone.\n    @param _to The address that will receive the minted tokens.\n    @return A boolean that indicates if the operation was successful.\n    \"\"\"\n    # Throws if `msg.sender` is not the minter\n    assert msg.sender == self.minter\n    assert msg.value >= 100000000000000000\n\n    # Throws if `_to` is zero address\n    assert _to != ZERO_ADDRESS\n    \n    # Add NFT. Throws if `_tokenId` is owned by someone\n    _tokenId: uint256 = self.totalMinted\n    self._addTokenTo(_to, _tokenId)\n    log Transfer(ZERO_ADDRESS, _to, _tokenId)\n    self.totalMinted += 1\n    return True\n\n\n\n\n### ERC721-ENUMERABLE FUNCTIONS ###\n\n\n@external\n@view\ndef totalSupply() -> uint256:\n    return self.totalMinted\n\n\n# METADATA FUNCTIONS\n@external\n@view\ndef name() -> String[32]:\n    return NAME\n\n\n@external\n@view\ndef symbol() -> String[32]:\n    return SYMBOL\n\n\n@external\n@view\ndef tokenURI() -> String[64]:\n    return 'ipfs://QmPBmyenadjRNPJ4pfuejqJwGzPXxEMtd966qMUruznCk7' \n",
  "sourceMap": "",
  "sourcePath": "contracts/VyperNFT.vy",
  "type": "contract"
}